{"version":3,"sources":["integration-test/spec-modules/regionSetting.js"],"names":["mock","auth","client","regionSettings","account","describe","timeout","mockClient","isLoginSuccess","clientHistoryRequest","before","mockForLogin","console","error","skip","it","retries","expect","availableCountries","to","have","length","above","countryCode","equal","regionalSettings","homeCountry","isoCode","showReginSetting","records"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;IAAYA,I;;AACZ;;;;AACA;;;;;;;;kBAEe,UAACC,IAAD,EAAOC,MAAP,EAAeC,cAAf,EAA+BC,OAA/B,EAA2C;AACxDC,WAAS,kBAAT,2EAA6B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3B,iBAAKC,OAAL,CAAa,KAAb;AACAN,iBAAKO,UAAL,CAAgBL,MAAhB;AACIM,0BAHuB;AAIrBC,gCAJqB,GAIE,mCAAyB,mBAAzB,EAAoCP,MAApC,CAJF;;;AAM3BQ,4FAAO;AAAA;AAAA;AAAA;AAAA;AACLV,2BAAKW,YAAL;AADK;AAAA,6BAEkB,2BAAYV,IAAZ,EAAkBG,OAAlB,CAFlB;;AAAA;AAELI,oCAFK;;AAGL,0BAAI,CAACA,cAAL,EAAqB;AACnBI,gCAAQC,KAAR,CAAc,oDAAd,EAAoET,OAApE;AACA,6BAAKU,IAAL;AACD;;AANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;;AASAC,eAAG,0CAAH,2EAA+C;AAAA;AAAA;AAAA;AAAA;AAC7C,4BAAKC,OAAL,CAAa,CAAb;AAD6C;AAAA,6BAEvC,6BAAc,CAAd,CAFuC;;AAAA;AAG7CC,6BAAOd,eAAee,kBAAtB,EAA0CC,EAA1C,CAA6CC,IAA7C,CAAkDC,MAAlD,CAAyDC,KAAzD,CAA+D,CAA/D;AACAL,6BAAOd,eAAeoB,WAAtB,EAAmCJ,EAAnC,CAAsCK,KAAtC,CACE,wBAAkBC,gBAAlB,CAAmCC,WAAnC,CAA+CC,OADjD;AAGAV,6BAAOd,eAAeyB,gBAAtB,EAAwCT,EAAxC,CAA2CK,KAA3C,CAAiD,IAAjD;;AAP6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA/C;;AAUAT,eAAG,uDAAH,EAA4D,YAAM;AAChEE,qBAAOd,eAAee,kBAAf,CAAkCG,MAAzC,EAAiDF,EAAjD,CAAoDK,KAApD,CACE,sBAAgBK,OAAhB,CAAwBR,MAD1B;AAGD,aAJD;;AAzB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;AA+BD,C","file":"regionSetting.js","sourcesContent":["import { ensureLogin } from '../utils/HelpUtil';\nimport { waitInSeconds } from '../utils/WaitUtil';\nimport ClientHistoryRequest from '../utils/ClientHistoryRequest';\nimport * as mock from '../mock';\nimport dialingPlanData from '../mock/data/dialingPlan';\nimport extensionInfoData from '../mock/data/extensionInfo';\n\nexport default (auth, client, regionSettings, account) => {\n  describe('Region Settings:', async function () {\n    this.timeout(20000);\n    mock.mockClient(client);\n    let isLoginSuccess;\n    const clientHistoryRequest = new ClientHistoryRequest(new Map(), client);\n\n    before(async function () {\n      mock.mockForLogin();\n      isLoginSuccess = await ensureLogin(auth, account);\n      if (!isLoginSuccess) {\n        console.error('Skip test case as failed to login with credential ', account);\n        this.skip();\n      }\n    });\n\n    it('should be ready in 2 seconds after login', async () => {\n      this.retries(2);\n      await waitInSeconds(2);\n      expect(regionSettings.availableCountries).to.have.length.above(0);\n      expect(regionSettings.countryCode).to.equal(\n        extensionInfoData.regionalSettings.homeCountry.isoCode\n      );\n      expect(regionSettings.showReginSetting).to.equal(true);\n    });\n\n    it('Record fetched from SDK should be the same as RawData', () => {\n      expect(regionSettings.availableCountries.length).to.equal(\n        dialingPlanData.records.length\n      );\n    });\n  });\n};\n"]}