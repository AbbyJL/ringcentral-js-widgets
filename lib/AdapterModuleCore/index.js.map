{"version":3,"sources":["lib/AdapterModuleCore/index.js"],"names":["AdapterModuleCore","prefix","storageKey","messageTypes","actionTypes","webphone","presence","locale","callingSettings","routerInteraction","globalStorage","getGlobalStorageReducer","messageTransport","targetWindow","window","parent","options","_messageTypes","enumMap","_locale","_messageTransport","_presence","_router","_callingSettings","_webphone","_storageKey","_globalStorage","registerReducer","key","reducer","addListener","_onMessage","msg","store","subscribe","_onStateChange","pending","ready","_shouldInit","dispatch","type","init","_pushAdapterState","_pushRingState","initSuccess","_pushPresence","_pushLocale","syncClosed","_syncClosed","closed","syncMinimized","_syncMinimized","minimized","syncSize","_syncSize","size","syncPosition","_syncPosition","position","presenceClicked","_onPresenceClicked","acitonTypes","callingMode","Error","ringSession","ringSessionId","_ringSessionId","_postMessage","pushRingState","ringing","ringingSessions","sessions","filter","session","callStatus","direction","length","status","telephonyStatus","_telephonyStatus","_lastDndStatus","dndStatus","_lastUserStatus","userStatus","_lastTelephonyStatus","pushPresence","_lastLocale","currentLocale","pushLocale","strings","_localeStrings","data","postMessage","_lastClosed","_lastMinimized","_lastPosition","pushAdapterState","showAdapter","push","state","getItem"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from 'ringcentral-integration/lib/RcModule';\r\nimport proxify from 'ringcentral-integration/lib/proxy/proxify';\r\nimport ensureExist from 'ringcentral-integration/lib/ensureExist';\r\nimport moduleStatuses from 'ringcentral-integration/enums/moduleStatuses';\r\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\r\nimport { prefixEnum } from 'ringcentral-integration/lib/Enum';\r\nimport baseMessageTypes from '../AdapterCore/baseMessageTypes';\r\nimport baseActionTypes from './baseActionTypes';\r\nimport getDefaultGlobalStorageReducer from './getDefaultGlobalStorageReducer';\r\nimport IframeMessageTransport from '../IframeMessageTransport';\r\n\r\n\r\nexport default class AdapterModuleCore extends RcModule {\r\n  constructor({\r\n    prefix,\r\n    storageKey = 'adapterCore',\r\n    messageTypes = baseMessageTypes,\r\n    actionTypes = baseActionTypes,\r\n    webphone,\r\n    presence,\r\n    locale,\r\n    callingSettings,\r\n    routerInteraction,\r\n    globalStorage,\r\n    getGlobalStorageReducer = getDefaultGlobalStorageReducer,\r\n    messageTransport = new IframeMessageTransport({\r\n      targetWindow: window.parent,\r\n    }),\r\n    ...options\r\n  }) {\r\n    super({\r\n      prefix,\r\n      actionTypes,\r\n      ...options,\r\n    });\r\n\r\n    this._messageTypes = prefixEnum({ enumMap: messageTypes, prefix });\r\n    this._locale = this::ensureExist(locale, 'locale');\r\n    this._messageTransport = this::ensureExist(messageTransport, 'messageTransport');\r\n    this._presence = this::ensureExist(presence, 'presence');\r\n    this._router = this::ensureExist(routerInteraction, 'routerInteraction');\r\n    this._callingSettings = callingSettings;\r\n    this._webphone = webphone;\r\n\r\n    this._storageKey = storageKey;\r\n    this._globalStorage = this::ensureExist(globalStorage, 'globalStorage');\r\n\r\n    this._globalStorage.registerReducer({\r\n      key: this._storageKey,\r\n      reducer: getGlobalStorageReducer(this.actionTypes),\r\n    });\r\n  }\r\n  initialize() {\r\n    this._messageTransport.addListener(msg => this._onMessage(msg));\r\n    this.store.subscribe(() => this._onStateChange());\r\n  }\r\n  _shouldInit() {\r\n    return this.pending &&\r\n      this._globalStorage.ready &&\r\n      this._locale.ready &&\r\n      this._router.ready;\r\n  }\r\n  _onStateChange() {\r\n    if (this._shouldInit()) {\r\n      this.store.dispatch({\r\n        type: this.actionTypes.init,\r\n      });\r\n      this._pushAdapterState();\r\n      this._pushRingState();\r\n      this.store.dispatch({\r\n        type: this.actionTypes.initSuccess,\r\n      });\r\n    }\r\n    this._pushPresence();\r\n    this._pushLocale();\r\n    this._pushRingState();\r\n  }\r\n  _onMessage(msg) {\r\n    if (msg) {\r\n      switch (msg.type) {\r\n        case this._messageTypes.syncClosed:\r\n          this._syncClosed(msg.closed);\r\n          break;\r\n        case this._messageTypes.syncMinimized:\r\n          this._syncMinimized(msg.minimized);\r\n          break;\r\n        case this._messageTypes.syncSize:\r\n          this._syncSize(msg.size);\r\n          break;\r\n        case this._messageTypes.syncPosition:\r\n          this._syncPosition(msg.position);\r\n          break;\r\n        case this._messageTypes.presenceClicked:\r\n          this._onPresenceClicked();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  @proxify\r\n  async _syncClosed(closed) {\r\n    this.store.dispatch({\r\n      type: this.actionTypes.syncClosed,\r\n      closed,\r\n    });\r\n  }\r\n  @proxify\r\n  async _syncMinimized(minimized) {\r\n    this.store.dispatch({\r\n      type: this.actionTypes.syncMinimized,\r\n      minimized,\r\n    });\r\n  }\r\n  @proxify\r\n  async _syncSize(size = {}) {\r\n    this.store.dispatch({\r\n      type: this.acitonTypes.syncSize,\r\n      size,\r\n    });\r\n  }\r\n  @proxify\r\n  async _syncPosition(position = {}) {\r\n    this.store.dispatch({\r\n      type: this.actionTypes.syncPosition,\r\n      position,\r\n    });\r\n  }\r\n\r\n  _pushRingState() {\r\n    if (!this.ready || !this._callingSettings) return;\r\n\r\n    const { callingMode } = this._callingSettings;\r\n    if (callingMode === callingModes.webphone) {\r\n      const webphone = this._webphone;\r\n      if (!webphone) {\r\n        throw new Error('webphone is a required dependency for monitoring WebRTC call');\r\n      }\r\n      if (webphone.ringSession && webphone.ringSessionId !== this._ringSessionId) {\r\n        this._ringSessionId = webphone.ringSessionId;\r\n        this._postMessage({\r\n          type: this._messageTypes.pushRingState,\r\n          ringing: true\r\n        });\r\n      }\r\n      // Check if ringing is over\r\n      if (this._ringSessionId) {\r\n        const ringingSessions = webphone.sessions.filter(session =>\r\n          session.callStatus === 'webphone-session-connecting' && session.direction === 'Inbound'\r\n        );\r\n        if (ringingSessions.length <= 0) {\r\n          this._postMessage({\r\n            type: this._messageTypes.pushRingState,\r\n            ringing: false\r\n          });\r\n          this._ringSessionId = null;\r\n        }\r\n      }\r\n    } else {\r\n      const status = this._presence.telephonyStatus;\r\n      if (this._presence.telephonyStatus !== this._telephonyStatus) {\r\n        this._postMessage({\r\n          type: this._messageTypes.pushRingState,\r\n          ringing: status === 'Ringing'\r\n        });\r\n        this._telephonyStatus = status;\r\n      }\r\n    }\r\n  }\r\n\r\n  _pushPresence() {\r\n    if (\r\n      this.ready &&\r\n      (\r\n        this._lastDndStatus !== this._presence.dndStatus ||\r\n        this._lastUserStatus !== this._presence.userStatus ||\r\n        this._lastTelephonyStatus !== this._presence.telephonyStatus\r\n      )\r\n    ) {\r\n      this._lastDndStatus = this._presence.dndStatus;\r\n      this._lastUserStatus = this._presence.userStatus;\r\n      this._lastTelephonyStatus = this._presence.telephonyStatus;\r\n      this._postMessage({\r\n        type: this._messageTypes.pushPresence,\r\n        telephonyStatus: this._presence.telephonyStatus,\r\n        userStatus: this._presence.userStatus,\r\n        dndStatus: this._presence.dndStatus,\r\n      });\r\n    }\r\n  }\r\n\r\n  get localeStrings() {\r\n    return {};\r\n  }\r\n\r\n  _pushLocale() {\r\n    if (\r\n      this.ready &&\r\n      this._lastLocale !== this._locale.currentLocale\r\n    ) {\r\n      this._lastLocale = this._locale.currentLocale;\r\n      this._postMessage({\r\n        type: this._messageTypes.pushLocale,\r\n        locale: this._locale.currentLocale,\r\n        strings: this._localeStrings,\r\n      });\r\n    }\r\n  }\r\n\r\n  _postMessage(data) {\r\n    this._messageTransport.postMessage(data);\r\n  }\r\n\r\n  _pushAdapterState() {\r\n    if (\r\n      this.ready &&\r\n      (\r\n        this._lastDndStatus !== this._presence.dndStatus ||\r\n        this._lastUserStatus !== this._presence.userStatus ||\r\n        this._lastTelephonyStatus !== this._presence.telephonyStatus ||\r\n        this._lastClosed !== this.closed ||\r\n        this._lastMinimized !== this.minimized ||\r\n        this._lastPosition !== this.position\r\n      )\r\n    ) {\r\n      this._lastDndStatus = this._presence.dndStatus;\r\n      this._lastUserStatus = this._presence.userStatus;\r\n      this._lastTelephonyStatus = this._presence.telephonyStatus;\r\n      this._lastClosed = this.closed;\r\n      this._lastMinimized = this.minimized;\r\n      this._lastPosition = this.position;\r\n      this._postMessage({\r\n        type: this._messageTypes.pushAdapterState,\r\n        size: this.size,\r\n        minimized: this.minimized,\r\n        closed: this.closed,\r\n        position: this.position,\r\n        telephonyStatus: this._presence.telephonyStatus,\r\n        userStatus: this._presence.userStatus,\r\n        dndStatus: this._presence.dndStatus,\r\n      });\r\n    }\r\n  }\r\n  @proxify\r\n  async _onPresenceClicked() {\r\n    if (this.minimized) {\r\n      this.showAdapter();\r\n    }\r\n    this._router.push('/settings?showPresenceSettings=1');\r\n  }\r\n\r\n  @proxify\r\n  async showAdapter() {\r\n    this.store.dispatch({\r\n      type: this.actionTypes.showAdapter,\r\n    });\r\n  }\r\n\r\n  get status() {\r\n    return this.state.status;\r\n  }\r\n  get ready() {\r\n    return this.status === moduleStatuses.ready;\r\n  }\r\n\r\n  get pending() {\r\n    return this.status === moduleStatuses.pending;\r\n  }\r\n\r\n  get minimized() {\r\n    return this._globalStorage.getItem(this._storageKey).minimized;\r\n  }\r\n  get closed() {\r\n    return this._globalStorage.getItem(this._storageKey).closed;\r\n  }\r\n  get size() {\r\n    return this._globalStorage.getItem(this._storageKey).size;\r\n  }\r\n  get position() {\r\n    return this._globalStorage.getItem(this._storageKey).position;\r\n  }\r\n}\r\n"]}