{"version":3,"sources":["lib/OAuthBase/getOAuthBaseReducer.js"],"names":["getOAuthReadyReducer","getOAuthBaseReducer","types","state","type","setupOAuth","destroyOAuth","status","oAuthReady"],"mappings":";;;;;QAIgBA,oB,GAAAA,oB;kBAYQC,mB;;AAhBxB;;AACA;;;;;;AAGO,SAASD,oBAAT,CAA8BE,KAA9B,EAAqC;AAC1C,SAAO,YAA6B;AAAA,QAA5BC,KAA4B,uEAApB,KAAoB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAClC,YAAQA,IAAR;AACE,WAAKF,MAAMG,UAAX;AACE,eAAO,IAAP;AACF,WAAKH,MAAMI,YAAX;AACE,eAAO,KAAP;AACF;AACE,eAAOH,KAAP;AANJ;AAQD,GATD;AAUD;AACc,SAASF,mBAAT,CAA6BC,KAA7B,EAAoC;AACjD,SAAO,4BAAgB;AACrBK,YAAQ,sCAAuBL,KAAvB,CADa;AAErBM,gBAAYR,qBAAqBE,KAArB;AAFS,GAAhB,CAAP;AAID","file":"getOAuthBaseReducer.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport getModuleStatusReducer from 'ringcentral-integration/lib/getModuleStatusReducer';\r\n\r\n\r\nexport function getOAuthReadyReducer(types) {\r\n  return (state = false, { type }) => {\r\n    switch (type) {\r\n      case types.setupOAuth:\r\n        return true;\r\n      case types.destroyOAuth:\r\n        return false;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n}\r\nexport default function getOAuthBaseReducer(types) {\r\n  return combineReducers({\r\n    status: getModuleStatusReducer(types),\r\n    oAuthReady: getOAuthReadyReducer(types),\r\n  });\r\n}\r\n"]}