{"version":3,"sources":["lib/messageHelper/index.js"],"names":["filterNumbers","messageIsDeleted","messageIsTextMessage","messageIsFax","messageIsVoicemail","messageIsAcceptable","getMyNumberFromMessage","uniqueRecipients","getRecipientNumbersFromMessage","getRecipients","getNumbersFromMessage","sortByDate","sortSearchResults","getVoicemailAttachment","getFaxAttachment","numbers","filterNumber","filter","number","phoneNumber","extensionNumber","message","availability","type","messageTypes","fax","voiceMail","messageStatus","myExtensionNumber","direction","from","pager","myNumber","to","find","length","recipients","recipientMap","forEach","recipient","key","fromRecipients","sms","allRecipients","concat","push","contacts","slice","correspondents","contact","myPhoneLength","self","inbound","fromField","Array","isArray","toField","a","b","ta","Date","creationTime","getTime","tb","matchOrder","accessToken","attachment","attachments","duration","vmDuration","uri","decodeURIComponent"],"mappings":"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","file":"index.js","sourcesContent":["import messageTypes from '../../enums/messageTypes';\n\nexport function filterNumbers(numbers, filterNumber) {\n  return numbers.filter((number) => {\n    if (filterNumber.phoneNumber) {\n      return filterNumber.phoneNumber !== number.phoneNumber;\n    }\n    return filterNumber.extensionNumber !== number.extensionNumber;\n  });\n}\n\nexport function messageIsDeleted(message) {\n  return message.availability === 'Deleted';\n}\n\nexport function messageIsTextMessage(message) {\n  return (message.type !== messageTypes.fax && message.type !== messageTypes.voiceMail);\n}\n\nexport function messageIsFax(message) {\n  return (message.type === messageTypes.fax);\n}\n\nexport function messageIsVoicemail(message) {\n  return (message.type === messageTypes.voiceMail);\n}\n\nexport function messageIsAcceptable(message) {\n  // do not show submitted faxes or sending failed faxes now\n  // do not show deleted messages\n  return (message.type !== messageTypes.fax || (message.messageStatus !== 'Queued' && message.messageStatus !== 'SendingFailed')) &&\n  (!messageIsDeleted(message));\n}\n\nexport function getMyNumberFromMessage({ message, myExtensionNumber }) {\n  if (!message) {\n    return null;\n  }\n  if (message.direction === 'Outbound') {\n    return message.from;\n  }\n  if (message.type === messageTypes.pager) {\n    const myNumber = message.to.find(number => (\n      number.extensionNumber === myExtensionNumber\n    ));\n    if (myNumber) {\n      return myNumber;\n    }\n    return { extensionNumber: myExtensionNumber };\n  }\n  return message.to && message.to.length >= 0 && message.to[0];\n}\n\nexport function uniqueRecipients(recipients, filter = () => true) {\n  const recipientMap = {};\n  recipients.forEach((recipient) => {\n    if (filter(recipient)) {\n      const key = recipient.extensionNumber || recipient.phoneNumber;\n      recipientMap[key] = recipient;\n    }\n  });\n  return Object.values(recipientMap);\n}\n\nexport function getRecipientNumbersFromMessage({ message, myNumber }) {\n  if (!message) {\n    return [];\n  }\n  const fromRecipients = (message.from && [message.from]) || [];\n  if (message.type === messageTypes.sms) {\n    if (message.direction === 'Outbound') {\n      return message.to;\n    }\n    return fromRecipients;\n  }\n  const allRecipients = fromRecipients.concat(message.to);\n  const recipients = filterNumbers(allRecipients, myNumber);\n  if (recipients.length === 0) {\n    recipients.push(myNumber);\n  }\n  return uniqueRecipients(recipients);\n}\n\nexport function getRecipients({ message, myExtensionNumber }) {\n  const myNumber = getMyNumberFromMessage({\n    message,\n    myExtensionNumber,\n  });\n  return getRecipientNumbersFromMessage({\n    message,\n    myNumber,\n  });\n}\n\nexport function getNumbersFromMessage({ extensionNumber, message }) {\n  if (message.type === messageTypes.pager) {\n    // It is safer and simpler to just put all known contacts into array and filter self out\n    const contacts = (message.to && message.to.slice()) || [];\n    if (message.from) contacts.push(message.from);\n    const correspondents = uniqueRecipients(contacts,\n      contact => contact.extensionNumber !== extensionNumber\n    );\n    // to support send message to myself.\n    if (correspondents && correspondents.length === 0) {\n      const myPhoneLength =\n        contacts.filter(contact => contact.extensionNumber === extensionNumber).length;\n      if (myPhoneLength > 0 && contacts.length === myPhoneLength) {\n        correspondents.push({\n          extensionNumber,\n        });\n      }\n    }\n    return {\n      self: {\n        extensionNumber\n      },\n      correspondents: correspondents || [],\n    };\n  }\n\n  const inbound = message.direction === 'Inbound';\n  const fromField = (\n    message.from && (Array.isArray(message.from) ? message.from : [message.from])\n  ) || [];\n  const toField = (\n    message.to && (Array.isArray(message.to) ? message.to : [message.to])\n  ) || [];\n  if (inbound) {\n    return {\n      self: toField[0],\n      correspondents: fromField,\n    };\n  }\n  return {\n    self: fromField[0],\n    correspondents: toField,\n  };\n}\n\nexport function sortByDate(a, b) {\n  const ta = new Date(a.creationTime).getTime();\n  const tb = new Date(b.creationTime).getTime();\n  return tb - ta;\n}\n\nexport function sortSearchResults(a, b) {\n  if (a.matchOrder === b.matchOrder) return sortByDate(a, b);\n  return a.matchOrder > b.matchOrder ? 1 : -1;\n}\n\nexport function getVoicemailAttachment(message, accessToken) {\n  const attachment = message.attachments && message.attachments[0];\n  if (!attachment) {\n    return { duration: 0 };\n  }\n  const duration = attachment.vmDuration;\n  const uri = `${attachment.uri}?access_token=${decodeURIComponent(accessToken)}`;\n  return {\n    duration,\n    uri,\n  };\n}\nexport function getFaxAttachment(message, accessToken) {\n  const attachment = message.attachments && message.attachments[0];\n  if (!attachment) {\n    return {};\n  }\n  const uri = `${attachment.uri}?access_token=${decodeURIComponent(accessToken)}`;\n  return {\n    uri\n  };\n}\n\n"]}