{"version":3,"sources":["lib/EventTransport/index.js"],"names":["EventTransport","options","name","_deferred","payload","requestId","v4","promise","resolve","reject","set","timeoutId","setTimeout","get","Error","_events","timeout","_timeout","then","result","clearTimeout","delete","catch","error","emit","request","deferred","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAGqBA,c;;;AACnB,0BAAYC,OAAZ,EAAqB;AAAA;;AAAA,iLAEdA,OAFc;AAGjBC,YAAM;AAHW;;AAKnB,UAAKC,SAAL,GAAiB,mBAAjB;AALmB;AAMpB;;;;;;;;YACeC,O,SAAAA,O;;;;;;AACRC,yB,GAAY,eAAKC,EAAL,E;AACZC,uB,GAAU,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/C,yBAAKN,SAAL,CAAeO,GAAf,CAAmBL,SAAnB,EAA8B;AAC5BG,oCAD4B;AAE5BC;AAF4B,mBAA9B;AAID,iBALe,C;AAMZE,yB,GAAYC,WAAW,YAAM;AAC/BD,8BAAY,IAAZ;AACA,yBAAKR,SAAL,CAAeU,GAAf,CAAmBR,SAAnB,EAA8BI,MAA9B,CAAqC,IAAIK,KAAJ,CAAU,OAAKC,OAAL,CAAaC,OAAvB,CAArC;AACD,iBAHe,EAGb,KAAKC,QAHQ,C;;AAIhBV,wBAAQW,IAAR,CAAa,UAACC,MAAD,EAAY;AACvB,sBAAIR,SAAJ,EAAeS,aAAaT,SAAb;AACf,yBAAKR,SAAL,CAAekB,MAAf,CAAsBhB,SAAtB;AACA,yBAAO,kBAAQG,OAAR,CAAgBW,MAAhB,CAAP;AACD,iBAJD,EAIGG,KAJH,CAIS,UAACC,KAAD,EAAW;AAClB,sBAAIZ,SAAJ,EAAeS,aAAaT,SAAb;AACf,yBAAKR,SAAL,CAAekB,MAAf,CAAsBhB,SAAtB;AACA,yBAAO,kBAAQI,MAAR,CAAec,KAAf,CAAP;AACD,iBARD;AASA,qBAAKC,IAAL,CAAU,KAAKT,OAAL,CAAaU,OAAvB,EAAgC;AAC9BpB,sCAD8B;AAE9BD;AAF8B,iBAAhC;iDAIOG,O;;;;;;;;;;;;;;;;;;oCAE8B;AAAA,UAA5BF,SAA4B,SAA5BA,SAA4B;AAAA,UAAjBc,MAAiB,SAAjBA,MAAiB;AAAA,UAATI,KAAS,SAATA,KAAS;;AACrC,UAAMG,WAAW,KAAKvB,SAAL,CAAeU,GAAf,CAAmBR,SAAnB,CAAjB;AACA,UAAIqB,QAAJ,EAAc;AACZ,YAAIH,KAAJ,EAAW;AACTG,mBAASjB,MAAT,CAAgBc,KAAhB;AACD,SAFD,MAEO;AACLG,mBAASlB,OAAT,CAAiBW,MAAjB;AACD;AACF;AACF;;;gCACiB;AAAA,UAAXf,OAAW,SAAXA,OAAW;;AAChB,WAAKoB,IAAL,CAAU,KAAKT,OAAL,CAAaY,IAAvB,EAA6BvB,OAA7B;AACD;;;;;kBA/CkBJ,c","file":"index.js","sourcesContent":["import uuid from 'uuid';\nimport TransportBase from '../TransportBase';\n\n\nexport default class EventTransport extends TransportBase {\n  constructor(options) {\n    super({\n      ...options,\n      name: 'EventTransport',\n    });\n    this._deferred = new Map();\n  }\n  async request({ payload }) {\n    const requestId = uuid.v4();\n    const promise = new Promise((resolve, reject) => {\n      this._deferred.set(requestId, {\n        resolve,\n        reject,\n      });\n    });\n    let timeoutId = setTimeout(() => {\n      timeoutId = null;\n      this._deferred.get(requestId).reject(new Error(this._events.timeout));\n    }, this._timeout);\n    promise.then((result) => {\n      if (timeoutId) clearTimeout(timeoutId);\n      this._deferred.delete(requestId);\n      return Promise.resolve(result);\n    }).catch((error) => {\n      if (timeoutId) clearTimeout(timeoutId);\n      this._deferred.delete(requestId);\n      return Promise.reject(error);\n    });\n    this.emit(this._events.request, {\n      requestId,\n      payload,\n    });\n    return promise;\n  }\n  response({ requestId, result, error }) {\n    const deferred = this._deferred.get(requestId);\n    if (deferred) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(result);\n      }\n    }\n  }\n  push({ payload }) {\n    this.emit(this._events.push, payload);\n  }\n}\n"]}