{"version":3,"sources":["lib/exportLocale/index.js"],"names":["writeXlf","exportLocale","localizationFolder","xlfData","fs","ensureDirSync","locale","fileName","path","resolve","writeFileSync","sourceFolder","defaultConfig","sourceLocale","supportedLocales","exportType","Error","localeData"],"mappings":";;;;;;;;;;QAOgBA,Q,GAAAA,Q;kBAeQC,Y;;AAtBxB;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,SAASD,QAAT,OAGJ;AAAA,MAFDE,kBAEC,QAFDA,kBAEC;AAAA,MADDC,OACC,QADDA,OACC;;AACDC,oBAAGC,aAAH,CAAiBH,kBAAjB;AACA,sBACE,UAACI,MAAD,EAAY;AACV,QAAMC,WAAWC,eAAKC,OAAL,CAAaP,kBAAb,EAAoCI,MAApC,UAAjB;AACAF,sBAAGM,aAAH,CAAiBH,QAAjB,EAA2BJ,QAAQG,MAAR,CAA3B;AACD,GAJH,EAKE,oBAAYH,OAAZ,CALF;AAOD;;AAGc,SAASF,YAAT,GAMP;AAAA,kFAAJ,EAAI;AAAA,iCALNU,YAKM;AAAA,MALNA,YAKM,sCALSC,wBAAcD,YAKvB;AAAA,oCAJNT,kBAIM;AAAA,MAJNA,kBAIM,yCAJeU,wBAAcV,kBAI7B;AAAA,iCAHNW,YAGM;AAAA,MAHNA,YAGM,sCAHSD,wBAAcC,YAGvB;AAAA,MAFNC,gBAEM,SAFNA,gBAEM;AAAA,+BADNC,UACM;AAAA,MADNA,UACM,oCADO,MACP;;AACN,MAAI,CAACD,gBAAL,EAAuB;AACrB,UAAM,IAAIE,KAAJ,CAAU,qCAAV,CAAN;AACD;AACD,MAAMC,aAAa,iCAAkB;AACnCN,8BADmC;AAEnCE,8BAFmC;AAGnCC;AAHmC,GAAlB,CAAnB;AAKA,MAAMX,UAAU,+BAAgB;AAC9Bc,0BAD8B;AAE9BN,8BAF8B;AAG9BE,8BAH8B;AAI9BC,sCAJ8B;AAK9BC;AAL8B,GAAhB,CAAhB;AAOAf,WAAS;AACPG,oBADO;AAEPD;AAFO,GAAT;AAID","file":"index.js","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\nimport { forEach } from 'ramda';\nimport compileLocaleData from '../compileLocaleData';\nimport defaultConfig from '../defaultConfig';\nimport generateXlfData from '../generateXlfData';\n\nexport function writeXlf({\n  localizationFolder,\n  xlfData,\n}) {\n  fs.ensureDirSync(localizationFolder);\n  forEach(\n    (locale) => {\n      const fileName = path.resolve(localizationFolder, `${locale}.xlf`);\n      fs.writeFileSync(fileName, xlfData[locale]);\n    },\n    Object.keys(xlfData),\n  );\n}\n\n\nexport default function exportLocale({\n  sourceFolder = defaultConfig.sourceFolder,\n  localizationFolder = defaultConfig.localizationFolder,\n  sourceLocale = defaultConfig.sourceLocale,\n  supportedLocales,\n  exportType = 'diff',\n} = {}) {\n  if (!supportedLocales) {\n    throw new Error('options.supportedLocales is missing');\n  }\n  const localeData = compileLocaleData({\n    sourceFolder,\n    sourceLocale,\n    supportedLocales,\n  });\n  const xlfData = generateXlfData({\n    localeData,\n    sourceFolder,\n    sourceLocale,\n    supportedLocales,\n    exportType,\n  });\n  writeXlf({\n    xlfData,\n    localizationFolder,\n  });\n}\n"]}