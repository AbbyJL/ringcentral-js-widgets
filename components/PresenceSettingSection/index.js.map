{"version":3,"sources":["components/PresenceSettingSection/index.js"],"names":["PresenceSettingSection","props","state","showSelects","showPresenceSettings","toggleShow","setState","preState","onCallQueueChange","dndStatus","doNotAcceptAnyCalls","takeAllCalls","doNotAcceptDepartmentCalls","toggleAcceptCallQueueCalls","sectionClass","section","showDropdown","acceptQueueCalls","isCallQueueMember","getString","currentLocale","currentStatus","userStatus","dropdownIcon","arrow","title","subTitle","statusIcon","presenceList","available","setAvailable","busy","setBusy","setDoNotDisturb","offline","setInvisible","propTypes","string","isRequired","bool","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport presenceStatus from 'ringcentral-integration/modules/Presence/presenceStatus';\nimport dndStatus from 'ringcentral-integration/modules/Presence/dndStatus';\n\nimport IconLine from '../IconLine';\nimport Line from '../Line';\nimport Switch from '../Switch';\nimport PresenceStatusIcon from '../PresenceStatusIcon';\nimport PresenceItem, { getPresenceStatusName } from '../PresenceItem';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class PresenceSettingSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelects: props.showPresenceSettings,\n    };\n\n    this.toggleShow = () => {\n      this.setState(preState => ({\n        showSelects: !preState.showSelects,\n      }));\n    };\n\n    this.onCallQueueChange = () => {\n      if (this.state.dndStatus === dndStatus.doNotAcceptAnyCalls) {\n        return;\n      }\n      this.setState(preState => ({\n        dndStatus: (\n          preState.dndStatus === dndStatus.takeAllCalls ?\n            dndStatus.doNotAcceptDepartmentCalls :\n            dndStatus.takeAllCalls\n        ),\n      }));\n      this.props.toggleAcceptCallQueueCalls();\n    };\n  }\n\n  render() {\n    const sectionClass = classnames(\n      styles.section,\n      this.state.showSelects ? styles.showDropdown : null,\n    );\n    const acceptQueueCalls = this.props.isCallQueueMember ? (\n      <IconLine\n        icon={\n          <Switch\n            checked={this.props.dndStatus === dndStatus.takeAllCalls}\n            onChange={this.onCallQueueChange}\n          />\n        }\n      >\n        {i18n.getString('acceptQueueCalls', this.props.currentLocale)}\n      </IconLine>\n    ) : null;\n    const currentStatus = getPresenceStatusName(\n      this.props.userStatus,\n      this.props.dndStatus,\n      this.props.currentLocale\n    );\n    return (\n      <section className={sectionClass}>\n        <IconLine\n          icon={\n            <span className={styles.dropdownIcon} >\n              <i className={dynamicsFont.arrow} />\n            </span>\n          }\n          onClick={this.toggleShow}\n        >\n          <div className={styles.title}>\n            {i18n.getString('status', this.props.currentLocale)}\n          </div>\n          <div className={styles.subTitle}>\n            <PresenceStatusIcon\n              className={styles.statusIcon}\n              userStatus={this.props.userStatus}\n              dndStatus={this.props.dndStatus}\n            />\n            <span>\n              {currentStatus}\n            </span>\n          </div>\n        </IconLine>\n        <Line className={styles.presenceList}>\n          <PresenceItem\n            userStatus={presenceStatus.available}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setAvailable}\n            selected={this.props.userStatus === presenceStatus.available}\n          />\n          <PresenceItem\n            userStatus={presenceStatus.busy}\n            dndStatus={dndStatus.takeAllCalls}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setBusy}\n            selected={\n              this.props.userStatus === presenceStatus.busy &&\n              this.props.dndStatus !== dndStatus.doNotAcceptAnyCalls\n            }\n          />\n          <PresenceItem\n            userStatus={presenceStatus.busy}\n            dndStatus={dndStatus.doNotAcceptAnyCalls}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setDoNotDisturb}\n            selected={\n              this.props.userStatus === presenceStatus.busy &&\n              this.props.dndStatus === dndStatus.doNotAcceptAnyCalls\n            }\n          />\n          <PresenceItem\n            userStatus={presenceStatus.offline}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setInvisible}\n            selected={this.props.userStatus === presenceStatus.offline}\n          />\n        </Line>\n        {acceptQueueCalls}\n      </section>\n    );\n  }\n}\n\nPresenceSettingSection.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  dndStatus: PropTypes.string.isRequired,\n  userStatus: PropTypes.string.isRequired,\n  isCallQueueMember: PropTypes.bool.isRequired,\n  setAvailable: PropTypes.func.isRequired,\n  setBusy: PropTypes.func.isRequired,\n  setDoNotDisturb: PropTypes.func.isRequired,\n  setInvisible: PropTypes.func.isRequired,\n  toggleAcceptCallQueueCalls: PropTypes.func.isRequired,\n  showPresenceSettings: PropTypes.bool.isRequired,\n};\n"]}