{"version":3,"sources":["components/ContactsView/index.js"],"names":["AddContact","className","onClick","addContact","iconContainer","iconNode","propTypes","string","func","isRequired","defaultProps","undefined","ContactsView","props","state","searchString","unfold","doSearchByText","bind","doSearchBySource","loadNextPage","onUnfoldChange","setState","onVisitPage","_applySearch","searchSource","pageNumber","nextProps","nextState","contactSourceNames","includes","clearTimeout","_searchTimeoutId","ev","target","value","_applySearchTimeout","args","onSearchContact","setTimeout","currentLocale","contactGroups","showSpinner","getAvatarUrl","getPresence","currentPage","onItemSelect","Filter","contactSourceFilterRenderer","sourceNodeRenderer","children","root","actionBar","searchInput","getString","actionButton","content","spinner","arrayOf","shape","id","caption","contacts","contact","bool","number","node"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Panel from '../Panel';\nimport SearchInput from '../SearchInput';\nimport SpinnerOverlay from '../SpinnerOverlay';\n\nimport ContactList from '../ContactList';\nimport ContactItem from '../ContactItem';\nimport styles from './styles.scss';\nimport i18n from './i18n';\nimport AddContactIcon from '../../assets/images/ContactAdd.svg';\nimport ContactSourceFilter from '../ContactSourceFilter';\n\nfunction AddContact({\n  className,\n  onClick,\n }) {\n  return (\n    <div\n      className={classnames(styles.addContact, className)}\n      onClick={onClick}\n    >\n      <div className={styles.iconContainer}>\n        <AddContactIcon\n          className={styles.iconNode}\n        />\n      </div>\n    </div>\n  );\n}\nAddContact.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\nAddContact.defaultProps = {\n  className: undefined,\n};\n\nexport default class ContactsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: props.searchString,\n      unfold: false,\n    };\n    this.doSearchByText = this.doSearchByText.bind(this);\n    this.doSearchBySource = this.doSearchBySource.bind(this);\n    this.loadNextPage = this.loadNextPage.bind(this);\n    this.onUnfoldChange = (unfold) => {\n      this.setState({\n        unfold,\n      });\n    };\n  }\n\n  componentDidMount() {\n    // this._restSearch();\n    if (typeof this.props.onVisitPage === 'function') {\n      this.props.onVisitPage();\n    }\n    this._applySearch({\n      searchSource: this.props.searchSource,\n      searchString: this.state.searchString,\n      pageNumber: 1,\n    });\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.searchString !== this.props.searchString) {\n      nextState.searchString = nextProps.searchString;\n    }\n    if (!nextProps.contactSourceNames.includes(nextProps.searchSource)) {\n      this._applySearch({\n        searchSource: nextProps.contactSourceNames[0],\n        searchString: this.state.searchString,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._searchTimeoutId);\n  }\n\n  doSearchByText(ev) {\n    const searchString = ev.target.value;\n    this.setState({\n      searchString,\n    });\n    this._applySearchTimeout({\n      searchSource: this.props.searchSource,\n      searchString,\n      pageNumber: 1,\n    });\n  }\n\n  doSearchBySource(searchSource) {\n    this._applySearch({\n      searchSource,\n      searchString: this.state.searchString,\n      pageNumber: 1,\n    });\n  }\n\n  loadNextPage(pageNumber) {\n    this._applySearch({\n      searchSource: this.props.searchSource,\n      searchString: this.state.searchString,\n      pageNumber,\n    });\n  }\n\n  _applySearch(args) {\n    const func = this.props.onSearchContact;\n    if (func) {\n      func(args);\n    }\n  }\n\n  _applySearchTimeout(args) {\n    clearTimeout(this._searchTimeoutId);\n    this._searchTimeoutId = setTimeout(() => {\n      this._applySearch(args);\n    }, 100);\n  }\n\n  // _restSearch() {\n  //   if (this.props.onRestSearch) {\n  //     this.props.onRestSearch();\n  //   }\n  // }\n\n  render() {\n    const {\n      currentLocale,\n      contactGroups,\n      contactSourceNames,\n      searchSource,\n      showSpinner,\n      getAvatarUrl,\n      getPresence,\n      currentPage,\n      onItemSelect,\n      contactSourceFilterRenderer: Filter,\n      sourceNodeRenderer,\n      children\n    } = this.props;\n\n    return (\n      <div className={styles.root}>\n        <div className={styles.actionBar}>\n          <SearchInput\n            className={styles.searchInput}\n            value={this.state.searchString || ''}\n            onChange={this.doSearchByText}\n            placeholder={i18n.getString('searchPlaceholder', currentLocale)}\n          />\n          <AddContact\n            className={styles.actionButton}\n            onClick={() => { }}\n          />\n          <Filter\n            className={styles.actionButton}\n            currentLocale={currentLocale}\n            contactSourceNames={contactSourceNames}\n            onSourceSelect={this.doSearchBySource}\n            selectedSourceName={searchSource}\n            unfold={this.state.unfold}\n            onUnfoldChange={this.onUnfoldChange}\n          />\n        </div>\n        <Panel className={styles.content}>\n          <ContactList\n            currentLocale={currentLocale}\n            contactGroups={contactGroups}\n            getAvatarUrl={getAvatarUrl}\n            getPresence={getPresence}\n            currentPage={currentPage}\n            onNextPage={this.loadNextPage}\n            onItemSelect={onItemSelect}\n            sourceNodeRenderer={sourceNodeRenderer}\n          />\n        </Panel>\n        {showSpinner ? (<SpinnerOverlay className={styles.spinner} />) : null}\n        {children}\n      </div>\n    );\n  }\n}\n\nContactsView.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactGroups: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    contacts: PropTypes.arrayOf(ContactItem.propTypes.contact).isRequired,\n  })).isRequired,\n  contactSourceNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  getPresence: PropTypes.func.isRequired,\n  showSpinner: PropTypes.bool.isRequired,\n  searchSource: PropTypes.string,\n  searchString: PropTypes.string,\n  currentPage: PropTypes.number,\n  onItemSelect: PropTypes.func,\n  onSearchContact: PropTypes.func,\n  contactSourceFilterRenderer: PropTypes.func,\n  sourceNodeRenderer: PropTypes.func,\n  onVisitPage: PropTypes.func,\n  children: PropTypes.node,\n  // onRestSearch: PropTypes.func,\n};\n\nContactsView.defaultProps = {\n  searchSource: undefined,\n  searchString: undefined,\n  currentPage: undefined,\n  onItemSelect: undefined,\n  onSearchContact: undefined,\n  contactSourceFilterRenderer: ContactSourceFilter,\n  sourceNodeRenderer: undefined,\n  onVisitPage: undefined,\n  children: undefined,\n  // onRestSearch: undefined,\n};\n"]}