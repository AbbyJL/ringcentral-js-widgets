{"version":3,"sources":["components/ContactsView/index.js"],"names":["AddContact","className","onClick","addContact","iconContainer","iconNode","propTypes","string","func","isRequired","defaultProps","undefined","ContactsView","props","state","searchString","doSearchByText","bind","doSearchBySource","loadNextPage","_applySearch","searchSource","pageNumber","nextProps","nextState","clearTimeout","_searchTimeoutId","ev","target","value","setState","_applySearchTimeout","args","onSearchContact","setTimeout","currentLocale","contactGroups","contactSourceNames","showSpinner","getAvatarUrl","getPresence","currentPage","onItemSelect","Filter","contactSourceFilterRenderer","content","root","actionBar","searchInput","getString","actionButton","arrayOf","shape","id","caption","contacts","contact","bool","number"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Panel from '../Panel';\nimport SearchInput from '../SearchInput';\nimport SpinnerOverlay from '../SpinnerOverlay';\n\nimport ContactList from '../ContactList';\nimport ContactItem from '../ContactItem';\nimport styles from './styles.scss';\nimport i18n from './i18n';\nimport AddContactIcon from '../../assets/images/ContactAdd.svg';\nimport ContactSourceFilter from '../ContactSourceFilter';\n\nfunction AddContact({\n  className,\n  onClick,\n }) {\n  return (\n    <div\n      className={classnames(styles.addContact, className)}\n      onClick={onClick}\n    >\n      <div className={styles.iconContainer}>\n        <AddContactIcon\n          className={styles.iconNode}\n        />\n      </div>\n    </div>\n  );\n}\nAddContact.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\nAddContact.defaultProps = {\n  className: undefined,\n};\n\nexport default class ContactsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: props.searchString,\n    };\n    this.doSearchByText = this.doSearchByText.bind(this);\n    this.doSearchBySource = this.doSearchBySource.bind(this);\n    this.loadNextPage = this.loadNextPage.bind(this);\n  }\n\n  componentDidMount() {\n    // this._restSearch();\n    this._applySearch({\n      searchSource: this.props.searchSource,\n      searchString: this.state.searchString,\n      pageNumber: 1,\n    });\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.searchString !== this.props.searchString) {\n      nextState.searchString = nextProps.searchString;\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._searchTimeoutId);\n  }\n\n  doSearchByText(ev) {\n    const searchString = ev.target.value;\n    this.setState({\n      searchString,\n    });\n    this._applySearchTimeout({\n      searchSource: this.props.searchSource,\n      searchString,\n      pageNumber: 1,\n    });\n  }\n\n  doSearchBySource(searchSource) {\n    this._applySearch({\n      searchSource,\n      searchString: this.state.searchString,\n      pageNumber: 1,\n    });\n  }\n\n  loadNextPage(pageNumber) {\n    this._applySearch({\n      searchSource: this.props.searchSource,\n      searchString: this.state.searchString,\n      pageNumber,\n    });\n  }\n\n  _applySearch(args) {\n    const func = this.props.onSearchContact;\n    if (func) {\n      func(args);\n    }\n  }\n\n  _applySearchTimeout(args) {\n    clearTimeout(this._searchTimeoutId);\n    this._searchTimeoutId = setTimeout(() => {\n      this._applySearch(args);\n    }, 100);\n  }\n\n  // _restSearch() {\n  //   if (this.props.onRestSearch) {\n  //     this.props.onRestSearch();\n  //   }\n  // }\n\n  render() {\n    const {\n      currentLocale,\n      contactGroups,\n      contactSourceNames,\n      searchSource,\n      showSpinner,\n      getAvatarUrl,\n      getPresence,\n      currentPage,\n      onItemSelect,\n      contactSourceFilterRenderer: Filter,\n    } = this.props;\n\n    const content = showSpinner ?\n      <SpinnerOverlay /> :\n      (\n        <ContactList\n          currentLocale={currentLocale}\n          contactGroups={contactGroups}\n          getAvatarUrl={getAvatarUrl}\n          getPresence={getPresence}\n          currentPage={currentPage}\n          onNextPage={this.loadNextPage}\n          onItemSelect={onItemSelect}\n        />\n      );\n\n    return (\n      <div className={styles.root}>\n        <div className={styles.actionBar}>\n          <SearchInput\n            className={styles.searchInput}\n            value={this.state.searchString || ''}\n            onChange={this.doSearchByText}\n            placeholder={i18n.getString('searchPlaceholder', currentLocale)}\n          />\n          <AddContact\n            className={styles.actionButton}\n            onClick={() => { }}\n          />\n          <Filter\n            className={styles.actionButton}\n            currentLocale={currentLocale}\n            contactSourceNames={contactSourceNames}\n            onSourceSelect={this.doSearchBySource}\n            selectedSourceName={searchSource}\n          />\n        </div>\n        <Panel className={styles.content}>\n          {content}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nContactsView.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactGroups: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    contacts: PropTypes.arrayOf(ContactItem.propTypes.contact).isRequired,\n  })).isRequired,\n  contactSourceNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  getPresence: PropTypes.func.isRequired,\n  showSpinner: PropTypes.bool.isRequired,\n  searchSource: PropTypes.string,\n  searchString: PropTypes.string,\n  currentPage: PropTypes.number,\n  onItemSelect: PropTypes.func,\n  onSearchContact: PropTypes.func,\n  contactSourceFilterRenderer: PropTypes.func,\n  // onRestSearch: PropTypes.func,\n};\n\nContactsView.defaultProps = {\n  searchSource: undefined,\n  searchString: undefined,\n  currentPage: undefined,\n  onItemSelect: undefined,\n  onSearchContact: undefined,\n  contactSourceFilterRenderer: ContactSourceFilter\n  // onRestSearch: undefined,\n};\n"]}