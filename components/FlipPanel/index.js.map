{"version":3,"sources":["components/FlipPanel/index.js"],"names":["FlipPanel","props","state","flipValue","flipNumbers","length","phoneNumber","flipEnabled","isOnFlip","onRadioSelect","value","setState","onFlip","styles","root","hideFlipPanel","backButton","dynamicsFont","arrow","backIcon","headerTitle","i18n","getString","currentLocale","flipContainer","radioGroup","formatPhone","buttonGroup","button","flipButton","disabled","flipIcon","FlipIcon","completeButton","complete","EndIcon","Component","propTypes","PropTypes","bool","isRequired","array","string","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport BackHeader from '../BackHeader';\nimport RadioButtonGroup from '../RadioBtnGroup';\nimport CircleButton from '../CircleButton';\nimport FlipIcon from '../../assets/images/Flip.svg';\nimport EndIcon from '../../assets/images/End.svg';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class FlipPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flipValue: this.props.flipNumbers.length === 0 ? '' : this.props.flipNumbers[0].phoneNumber,\n      flipEnabled: !this.props.isOnFlip,\n    };\n    this.onRadioSelect = (value) => {\n      this.setState({\n        flipValue: value,\n      });\n    };\n    this.onFlip = () => {\n      this.props.onFlip(this.state.flipValue);\n      this.setState({\n        flipEnabled: false,\n      });\n    };\n  }\n  render() {\n    return (\n      <div className={styles.root}>\n        <BackHeader\n          onBackClick={this.props.isOnFlip ? () => {} : this.props.hideFlipPanel}\n          backButton={(\n            <span className={styles.backButton}>\n              {\n                this.props.isOnFlip ? null :\n                <i className={classnames(dynamicsFont.arrow, styles.backIcon)} />\n              }\n            </span>\n          )}\n        >\n          <span className={styles.headerTitle}>\n            {i18n.getString('flipHeader', this.props.currentLocale)}\n          </span>\n        </BackHeader>\n        <div className={styles.flipContainer}>\n          <RadioButtonGroup\n            className={styles.radioGroup}\n            radioOptions={this.props.flipNumbers}\n            disabled={!this.state.flipEnabled}\n            formatPhone={this.props.formatPhone}\n            onRadioSelect={this.onRadioSelect}\n            currentLocale={this.props.currentLocale}\n          />\n          <div className={styles.buttonGroup}>\n            <div className={styles.button} title={i18n.getString('flip', this.props.currentLocale)}>\n              <CircleButton\n                disabled={!this.state.flipEnabled}\n                className={\n                  classnames(styles.flipButton, this.state.flipEnabled ? '' : styles.disabled)\n                }\n                iconClassName={styles.flipIcon}\n                onClick={this.onFlip}\n                icon={FlipIcon}\n                showBorder\n              />\n            </div>\n            <div className={styles.button} title={i18n.getString('complete', this.props.currentLocale)}>\n              <CircleButton\n                disabled={!this.props.isOnFlip}\n                className={\n                  classnames(styles.completeButton, this.props.isOnFlip ? '' : styles.disabled)\n                }\n                onClick={this.props.complete}\n                icon={EndIcon}\n                showBorder\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFlipPanel.propTypes = {\n  isOnFlip: PropTypes.bool.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  hideFlipPanel: PropTypes.func.isRequired,\n  onFlip: PropTypes.func.isRequired,\n  complete: PropTypes.func.isRequired,\n};\n"]}