{"version":3,"sources":["components/FlipPanel/index.js"],"names":["FlipPanel","props","state","flipValue","flipNumbers","length","phoneNumber","flipEnabled","isOnFlip","onRadioSelect","value","setState","onFlip","root","hideFlipPanel","backButton","arrow","backIcon","headerTitle","getString","currentLocale","flipContainer","radioGroup","formatPhone","buttonGroup","button","flipButton","disabled","flipIcon","completeButton","complete","propTypes","bool","isRequired","array","string","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport BackHeader from '../BackHeader';\nimport RadioButtonGroup from '../RadioBtnGroup';\nimport CircleButton from '../CircleButton';\nimport FlipIcon from '../../assets/images/Flip.svg';\nimport EndIcon from '../../assets/images/End.svg';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class FlipPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flipValue: this.props.flipNumbers.length === 0 ? '' : this.props.flipNumbers[0].phoneNumber,\n      flipEnabled: !this.props.isOnFlip,\n    };\n    this.onRadioSelect = (value) => {\n      this.setState({\n        flipValue: value,\n      });\n    };\n    this.onFlip = () => {\n      this.props.onFlip(this.state.flipValue);\n      this.setState({\n        flipEnabled: false,\n      });\n    };\n  }\n  render() {\n    return (\n      <div className={styles.root}>\n        <BackHeader\n          onBackClick={this.props.isOnFlip ? () => {} : this.props.hideFlipPanel}\n          backButton={(\n            <span className={styles.backButton}>\n              {\n                this.props.isOnFlip ? null :\n                <i className={classnames(dynamicsFont.arrow, styles.backIcon)} />\n              }\n            </span>\n          )}\n        >\n          <span className={styles.headerTitle}>\n            {i18n.getString('flipHeader', this.props.currentLocale)}\n          </span>\n        </BackHeader>\n        <div className={styles.flipContainer}>\n          <RadioButtonGroup\n            className={styles.radioGroup}\n            radioOptions={this.props.flipNumbers}\n            disabled={!this.state.flipEnabled}\n            formatPhone={this.props.formatPhone}\n            onRadioSelect={this.onRadioSelect}\n          />\n          <div className={styles.buttonGroup}>\n            <div className={styles.button} title={i18n.getString('flip', this.props.currentLocale)}>\n              <CircleButton\n                disabled={!this.state.flipEnabled}\n                className={\n                  classnames(styles.flipButton, this.state.flipEnabled ? '' : styles.disabled)\n                }\n                iconClassName={styles.flipIcon}\n                onClick={this.onFlip}\n                icon={FlipIcon}\n                showBorder\n              />\n            </div>\n            <div className={styles.button} title={i18n.getString('complete', this.props.currentLocale)}>\n              <CircleButton\n                disabled={!this.props.isOnFlip}\n                className={\n                  classnames(styles.completeButton, this.props.isOnFlip ? '' : styles.disabled)\n                }\n                onClick={this.props.complete}\n                icon={EndIcon}\n                showBorder\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFlipPanel.propTypes = {\n  isOnFlip: PropTypes.bool.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  hideFlipPanel: PropTypes.func.isRequired,\n  onFlip: PropTypes.func.isRequired,\n  complete: PropTypes.func.isRequired,\n};\n"]}