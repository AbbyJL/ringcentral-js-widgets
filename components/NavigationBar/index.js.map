{"version":3,"sources":["components/NavigationBar/index.js"],"names":["NavigationBar","props","goTo","bind","state","currentVirtualPath","nextProps","setState","tab","path","virtualPath","setTimeout","className","button","childNavigationView","currentPath","tabs","NavigationButton","ChildNavigationView","tabWidth","length","root","map","index","isActive","tabPropTypes","icon","node","activeIcon","label","string","func","noticeCounts","number","propTypes","oneOfType","isRequired","element","arrayOf","shape","childTabs","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nexport default class NavigationBar extends Component {\n  constructor(props) {\n    super(props);\n    this.goTo = this.goTo.bind(this);\n    this.state = {\n      currentVirtualPath: this.props.currentVirtualPath,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentVirtualPath) {\n      this.setState({\n        currentVirtualPath: nextProps.currentVirtualPath,\n      });\n    }\n  }\n\n  goTo(tab) {\n    this.props.goTo(tab.path, tab.virtualPath);\n    // seems like the goTo is asynchronous\n    // so here set timeout for resolving menu looks flash issue\n    setTimeout(() => {\n      this.setState({\n        currentVirtualPath: tab.virtualPath,\n      });\n    }, 10);\n  }\n\n  render() {\n    const {\n      className,\n      button,\n      childNavigationView,\n      currentPath,\n      tabs,\n    } = this.props;\n\n    const NavigationButton = button;\n    const ChildNavigationView = childNavigationView;\n\n    const currentVirtualPath = this.state.currentVirtualPath;\n    const tabWidth = tabs.length > 0 ?\n      `${(1 / tabs.length) * 100}%` :\n      0;\n\n    return (\n      <nav className={classnames(styles.root, className)}>\n        {\n          tabs.map((tab, index) => (\n            <NavigationButton\n              {...tab}\n              key={index}\n              onClick={() => {\n                this.goTo(tab);\n              }}\n              active={\n                (tab.isActive && tab.isActive(currentPath, currentVirtualPath)) ||\n                (tab.path && tab.path === currentPath) ||\n                (tab.virtualPath && tab.virtualPath === currentVirtualPath)\n              }\n              width={tabWidth}\n            />\n          ))\n        }\n        {\n          ChildNavigationView ? (\n            <ChildNavigationView\n              tabs={tabs}\n              goTo={this.goTo}\n              currentPath={currentPath}\n              currentVirtualPath={currentVirtualPath}\n            />\n          ) : null\n        }\n      </nav>\n    );\n  }\n}\n\nconst tabPropTypes = {\n  icon: PropTypes.node,\n  activeIcon: PropTypes.node,\n  label: PropTypes.string,\n  path: PropTypes.string,\n  virtualPath: PropTypes.string,\n  isActive: PropTypes.func,\n  noticeCounts: PropTypes.number,\n};\n\nNavigationBar.propTypes = {\n  className: PropTypes.string,\n  button: PropTypes.oneOfType([\n    PropTypes.func.isRequired,\n    PropTypes.element.isRequired\n  ]).isRequired,\n  childNavigationView: PropTypes.oneOfType([\n    PropTypes.func.isRequired,\n    PropTypes.element.isRequired\n  ]),\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    ...tabPropTypes,\n    childTabs: PropTypes.arrayOf(PropTypes.shape({\n      ...tabPropTypes,\n    })),\n  })),\n  goTo: PropTypes.func.isRequired,\n  currentPath: PropTypes.string.isRequired,\n  currentVirtualPath: PropTypes.string,\n};\n\nNavigationBar.defaultProps = {\n  className: undefined,\n  childNavigationView: undefined,\n  currentVirtualPath: undefined,\n  tabs: [],\n};\n"]}