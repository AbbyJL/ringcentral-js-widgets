{"version":3,"sources":["components/NavigationBar/index.js"],"names":["NavigationBar","props","goTo","bind","state","currentVirtualPath","nextProps","setState","tab","path","virtualPath","setTimeout","className","button","childNavigationView","currentPath","tabs","NavigationButton","ChildNavigationView","tabWidth","length","dropdownMenuTab","find","childTabs","isActive","dropdownMenu","root","map","index","icon","Icon","ActiveIcon","activeIcon","tabPropTypes","func","label","string","noticeCounts","number","propTypes","oneOfType","isRequired","element","arrayOf","shape","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nexport default class NavigationBar extends Component {\n  constructor(props) {\n    super(props);\n    this.goTo = this.goTo.bind(this);\n    this.state = {\n      currentVirtualPath: this.props.currentVirtualPath,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentVirtualPath) {\n      this.setState({\n        currentVirtualPath: nextProps.currentVirtualPath,\n      });\n    }\n  }\n\n  goTo(tab) {\n    this.props.goTo(tab.path, tab.virtualPath);\n    // seems like the goTo is asynchronous\n    // so here set timeout for resolving menu looks flash issue\n    setTimeout(() => {\n      this.setState({\n        currentVirtualPath: tab.virtualPath,\n      });\n    }, 10);\n  }\n\n  render() {\n    const {\n      className,\n      button,\n      childNavigationView,\n      currentPath,\n      tabs,\n    } = this.props;\n\n    const NavigationButton = button;\n    const ChildNavigationView = childNavigationView;\n\n    const currentVirtualPath = this.state.currentVirtualPath;\n    const tabWidth = tabs.length > 0 ?\n      `${(1 / tabs.length) * 100}%` :\n      0;\n    const dropdownMenuTab = tabs.find(tab =>\n      (\n        tab.childTabs &&\n        (tab.isActive && tab.isActive(currentPath, currentVirtualPath))\n      )\n    );\n    const dropdownMenu = dropdownMenuTab && dropdownMenuTab.childTabs;\n    return (\n      <nav className={classnames(styles.root, className)}>\n        {\n          tabs.map((tab, index) => {\n            let icon = tab.icon;\n            if (typeof icon === 'function') {\n              const Icon = tab.icon;\n              icon = (tab.childTabs ? <Icon currentPath={currentPath} /> : <Icon />);\n            }\n            const ActiveIcon = tab.activeIcon;\n            return (\n              <NavigationButton\n                {...tab}\n                key={index}\n                onClick={() => {\n                  this.goTo(tab);\n                }}\n                active={\n                  (tab.isActive && tab.isActive(currentPath, currentVirtualPath)) ||\n                  (tab.path && tab.path === currentPath) ||\n                  (tab.virtualPath && tab.virtualPath === currentVirtualPath)\n                }\n                width={tabWidth}\n                icon={icon}\n                activeIcon={typeof ActiveIcon === 'function' ? <ActiveIcon /> : ActiveIcon}\n              />\n            );\n          })\n        }\n        {\n          (ChildNavigationView && dropdownMenu && dropdownMenu.length) ? (\n            <ChildNavigationView\n              tabs={dropdownMenu}\n              goTo={this.goTo}\n              currentPath={currentPath}\n              currentVirtualPath={currentVirtualPath}\n            />\n          ) : null\n        }\n      </nav>\n    );\n  }\n}\n\nconst tabPropTypes = {\n  icon: PropTypes.func,\n  activeIcon: PropTypes.func,\n  label: PropTypes.string,\n  path: PropTypes.string,\n  virtualPath: PropTypes.string,\n  isActive: PropTypes.func,\n  noticeCounts: PropTypes.number,\n};\n\nNavigationBar.propTypes = {\n  className: PropTypes.string,\n  button: PropTypes.oneOfType([\n    PropTypes.func.isRequired,\n    PropTypes.element.isRequired\n  ]).isRequired,\n  childNavigationView: PropTypes.oneOfType([\n    PropTypes.func.isRequired,\n    PropTypes.element.isRequired\n  ]),\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    ...tabPropTypes,\n    childTabs: PropTypes.arrayOf(PropTypes.shape({\n      ...tabPropTypes,\n    })),\n  })),\n  goTo: PropTypes.func.isRequired,\n  currentPath: PropTypes.string.isRequired,\n  currentVirtualPath: PropTypes.string,\n};\n\nNavigationBar.defaultProps = {\n  className: undefined,\n  childNavigationView: undefined,\n  currentVirtualPath: undefined,\n  tabs: [],\n};\n"]}