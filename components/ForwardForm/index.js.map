{"version":3,"sources":["components/ForwardForm/index.js"],"names":["cleanRegex","ForwardNumbers","numbers","onSelect","selected","formatPhone","map","number","index","id","active","label","colon","phoneNumber","propTypes","array","isRequired","func","ForwardForm","props","_onCustomValueChange","value","setState","customValue","_clearToNumber","_setRecipient","recipient","_clearRecipient","state","selectedIndex","handling","filter","replace","onChange","getValue","onForward","result","_mounted","onCancel","onSelectCustomNumber","forwardingNumbers","length","setTimeout","customInput","focus","forwardingNumber","className","currentLocale","searchContact","searchContactList","phoneTypeRenderer","disableButton","root","custromNumber","customLabel","getString","ref","buttonGroup","cancelButton","forwardButton","disabled","buttonText","string","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport isBlank from 'ringcentral-integration/lib/isBlank';\nimport RecipientsInput from '../RecipientsInput';\n\nimport TextInput from '../TextInput';\nimport Button from '../Button';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst cleanRegex = /[^\\d+*-\\s]/g;\n\nfunction ForwardNumbers({\n  numbers,\n  onSelect,\n  selected,\n  formatPhone,\n}) {\n  return (\n    <div className={styles.numbers}>\n      {\n        numbers.map((number, index) => (\n          <div\n            key={number.id}\n            className={\n              classnames(styles.number, (index === selected ? styles.active : null))\n            }\n            onClick={() => onSelect(index)}\n          >\n            <span className={styles.label} title={number.label}>{number.label}</span>\n            <span className={styles.colon}>:</span>\n            <span >{formatPhone(number.phoneNumber)}</span>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n\nForwardNumbers.propTypes = {\n  numbers: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.number.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n};\n\nexport default class ForwardForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 0,\n      customValue: '',\n      handling: false,\n      recipient: null,\n    };\n\n    this.filter = value => value.replace(cleanRegex, '');\n\n    this.onSelect = (index) => {\n      this.setState({\n        selectedIndex: index,\n      });\n      if (typeof this.props.onChange === 'function') {\n        this.props.onChange(this.getValue());\n      }\n    };\n\n    this.onForward = async () => {\n      this.setState({\n        handling: true,\n      });\n      const result = await this.props.onForward(this.getValue());\n      if (!this._mounted) {\n        return;\n      }\n      this.setState({\n        handling: false,\n      });\n      if (result) {\n        this.props.onCancel();\n      }\n    };\n\n    this.onSelectCustomNumber = () => {\n      this.onSelect(this.props.forwardingNumbers.length);\n      setTimeout(() => {\n        if (this.customInput) {\n          this.customInput.focus();\n        }\n      }, 100);\n    };\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  getValue() {\n    if (this.state.selectedIndex < this.props.forwardingNumbers.length) {\n      const forwardingNumber = this.props.forwardingNumbers[this.state.selectedIndex];\n      return (\n        forwardingNumber && forwardingNumber.phoneNumber\n      );\n    }\n    if (this.state.recipient) {\n      return this.state.recipient.phoneNumber;\n    }\n    return this.state.customValue;\n  }\n\n  _onCustomValueChange = (value) => {\n    this.setState({\n      customValue: value\n    });\n  }\n\n  _clearToNumber = () => {\n    this.setState({\n      customValue: ''\n    });\n  }\n\n  _setRecipient = (recipient) => {\n    this.setState({\n      recipient\n    });\n    this._clearToNumber();\n  }\n\n  _clearRecipient = () => {\n    this.setState({\n      recipient: null\n    });\n  }\n\n  render() {\n    const {\n      className,\n      onCancel,\n      currentLocale,\n      forwardingNumbers,\n      formatPhone,\n      searchContact,\n      searchContactList,\n      phoneTypeRenderer,\n    } = this.props;\n    const value = this.getValue();\n    const disableButton = isBlank(value) || this.state.handling;\n    return (\n      <div className={classnames(styles.root, className)}>\n        <ForwardNumbers\n          formatPhone={formatPhone}\n          numbers={forwardingNumbers}\n          onSelect={this.onSelect}\n          selected={this.state.selectedIndex}\n        />\n        <div\n          className={\n            classnames(\n              styles.custromNumber,\n              this.state.selectedIndex === forwardingNumbers.length ? styles.active : null\n            )\n          }\n          onClick={this.onSelectCustomNumber}\n        >\n          <div className={styles.customLabel}>\n            {i18n.getString('customNumber', currentLocale)}\n          </div>\n          <RecipientsInput\n            label=\"\"\n            placeholder=\"\"\n            inputRef={(ref) => { this.customInput = ref; }}\n            value={this.state.customValue}\n            className={styles.customInput}\n            onChange={this._onCustomValueChange}\n            onClean={this._clearToNumber}\n            recipient={this.state.recipient}\n            addToRecipients={this._setRecipient}\n            removeFromRecipients={this._clearRecipient}\n            searchContact={searchContact}\n            searchContactList={searchContactList}\n            phoneTypeRenderer={phoneTypeRenderer}\n            formatContactPhone={formatPhone}\n            currentLocale={currentLocale}\n            titleEnabled\n            autoFocus\n          />\n        </div>\n        <div className={styles.buttonGroup}>\n          <Button\n            className={styles.cancelButton}\n            onClick={onCancel}\n          >\n            {i18n.getString('cancel', currentLocale)}\n          </Button>\n          <Button\n            className={\n              classnames(styles.forwardButton, disableButton ? styles.disabled : null)\n            }\n            onClick={this.onForward}\n            disabled={disableButton}\n          >\n            <span className={styles.buttonText}>\n              {i18n.getString('forward', currentLocale)}\n            </span>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nForwardForm.propTypes = {\n  className: PropTypes.string,\n  onCancel: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  onForward: PropTypes.func.isRequired,\n  onChange: PropTypes.func,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n};\n\nForwardForm.defaultProps = {\n  className: null,\n  onChange: undefined,\n  phoneTypeRenderer: undefined,\n};\n"]}