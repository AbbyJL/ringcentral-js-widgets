{"version":3,"sources":["components/CallAlert/index.js"],"names":["CallAlert","TELUS_ID","message","id","payload","brand","onAreaCodeLinkClick","currentLocale","specialNumber","phoneNumber","getString","noAreaCode","areaCode","areaCodeLink","link","e","preventDefault","alertId","propTypes","func","shape","string","isRequired","object","defaultProps","undefined","handleMessage","noToNumber","connectFailed","internalError","notAnExtension","networkError","noRingoutEnable"],"mappings":";;;;;kBAQwBA,S;;AARxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,WAAW,MAAjB;AACe,SAASD,SAAT,OASZ;AAAA,0BARDE,OAQC;AAAA,MAPCC,EAOD,gBAPCA,EAOD;AAAA,MANCD,OAMD,gBANCA,OAMD;AAAA,MALCE,OAKD,gBALCA,OAKD;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFDC,mBAEC,QAFDA,mBAEC;AAAA,MADDC,aACC,QADDA,aACC;;AACD;AACA;AACA,MACEF,SAASA,MAAMF,EAAN,KAAaF,QAAtB,IACAC,YAAY,qBAAWM,aADvB,IAEAJ,OAFA,IAEWA,QAAQK,WAAR,KAAwB,KAHrC,EAIE;AACA,WAAQ;AAAA;AAAA;AAAO,qBAAKC,SAAL,CAAe,UAAf,EAA2BH,aAA3B;AAAP,KAAR;AACD;AACD,MAAIL,YAAY,qBAAWS,UAA3B,EAAuC;AACrC,QAAMC,WAAW,eAAKF,SAAL,CAAe,UAAf,EAA2BH,aAA3B,CAAjB;AACA,QAAMM,eAAeP,sBAEjB;AAAA;AAAA;AACE,mBAAW,iBAAOQ,IADpB;AAEE,iBAAS,iBAACC,CAAD,EAAO;AACdA,YAAEC,cAAF;AACAV,8BAAoB,EAAEW,SAASd,EAAX,EAApB;AACD,SALH;AAMGS;AANH,KAFiB,GAWnBA,QAXF;AAYA,WACE;AACE,eAAS,eAAKF,SAAL,CAAeR,OAAf,EAAwBK,aAAxB,CADX;AAEE,cAAQ,EAAEM,0BAAF,EAFV,GADF;AAKD;AACD,SACE;AAAA;AAAA;AAAO,mBAAKH,SAAL,CAAeR,OAAf,EAAwBK,aAAxB;AAAP,GADF;AAGD;;AAEDP,UAAUkB,SAAV,GAAsB;AACpBZ,uBAAqB,oBAAUa,IADX;AAEpBjB,WAAS,oBAAUkB,KAAV,CAAgB;AACvBlB,aAAS,oBAAUmB,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAJiB;AAKpBjB,SAAO,oBAAUkB,MAAV,CAAiBD,UALJ;AAMpBf,iBAAe,oBAAUc,MAAV,CAAiBC;AANZ,CAAtB;AAQAtB,UAAUwB,YAAV,GAAyB;AACvBlB,uBAAqBmB;AADE,CAAzB;;AAIAzB,UAAU0B,aAAV,GAA0B;AAAA,MAAGxB,OAAH,SAAGA,OAAH;AAAA,SACxBA,YAAY,qBAAWyB,UAAvB,IACAzB,YAAY,qBAAWS,UADvB,IAEAT,YAAY,qBAAWM,aAFvB,IAGAN,YAAY,qBAAW0B,aAHvB,IAIA1B,YAAY,qBAAW2B,aAJvB,IAKA3B,YAAY,qBAAW4B,cALvB,IAMA5B,YAAY,qBAAW6B,YANvB,IAOA7B,YAAY,qBAAW8B,eARC;AAAA,CAA1B","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport callErrors from 'ringcentral-integration/modules/Call/callErrors';\nimport FormattedMessage from '../FormattedMessage';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst TELUS_ID = '7310';\nexport default function CallAlert({\n  message: {\n    id,\n    message,\n    payload,\n  },\n  brand,\n  onAreaCodeLinkClick,\n  currentLocale,\n}) {\n  // If brand is Telus and special number is 911,\n  // show messages of its own version.\n  if (\n    brand && brand.id === TELUS_ID &&\n    message === callErrors.specialNumber &&\n    payload && payload.phoneNumber === '911'\n  ) {\n    return (<span>{i18n.getString('telus911', currentLocale)}</span>);\n  }\n  if (message === callErrors.noAreaCode) {\n    const areaCode = i18n.getString('areaCode', currentLocale);\n    const areaCodeLink = onAreaCodeLinkClick ?\n      (\n        <a\n          className={styles.link}\n          onClick={(e) => {\n            e.preventDefault();\n            onAreaCodeLinkClick({ alertId: id });\n          }} >\n          {areaCode}\n        </a>\n      ) :\n      areaCode;\n    return (\n      <FormattedMessage\n        message={i18n.getString(message, currentLocale)}\n        values={{ areaCodeLink }} />\n    );\n  }\n  return (\n    <span>{i18n.getString(message, currentLocale)}</span>\n  );\n}\n\nCallAlert.propTypes = {\n  onAreaCodeLinkClick: PropTypes.func,\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  brand: PropTypes.object.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\nCallAlert.defaultProps = {\n  onAreaCodeLinkClick: undefined\n};\n\nCallAlert.handleMessage = ({ message }) => (\n  message === callErrors.noToNumber ||\n  message === callErrors.noAreaCode ||\n  message === callErrors.specialNumber ||\n  message === callErrors.connectFailed ||\n  message === callErrors.internalError ||\n  message === callErrors.notAnExtension ||\n  message === callErrors.networkError ||\n  message === callErrors.noRingoutEnable\n);\n"]}