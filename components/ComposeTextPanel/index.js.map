{"version":3,"sources":["components/ComposeTextPanel/index.js"],"names":["ComposeTextPanel","props","onSenderChange","e","value","currentTarget","updateSenderNumber","onReceiverChange","updateTypingToNumber","cleanReceiverValue","cleanTypingToNumber","onReceiverInputKeyDown","key","preventDefault","typingToNumber","length","addToNumber","name","phoneNumber","onReceiverInputKeyUp","searchContact","addToRecipients","receiver","removeFromRecipients","removeToNumber","onTextChange","updateMessageText","onTextAreaKeyDown","send","handleSubmit","console","debug","root","receiverField","getString","currentLocale","rightPanel","toNumbers","searchContactList","formatContactPhone","senderField","senderInput","senderSelect","senderNumber","senderNumbers","option","formatPhone","buttomField","textField","messageText","submitField","submitButton","sendButtonDisabled","propTypes","func","isRequired","arrayOf","string","bool","shape","entityType","phoneType","PropTypes","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport RecipientsInput from '../RecipientsInput';\nimport Select from '../Select';\n\nclass ComposeTextPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSenderChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateSenderNumber(value);\n    };\n\n    this.onReceiverChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateTypingToNumber(value);\n    };\n\n    this.cleanReceiverValue = () => {\n      this.props.cleanTypingToNumber();\n    };\n\n    this.onReceiverInputKeyDown = (e) => {\n      if (e.key === ',' || e.key === ';' || e.key === 'Enter') {\n        e.preventDefault();\n        if (this.props.typingToNumber.length === 0) {\n          return;\n        }\n        this.props.addToNumber({\n          name: this.props.typingToNumber,\n          phoneNumber: this.props.typingToNumber,\n        });\n        this.props.cleanTypingToNumber();\n      }\n    };\n\n    this.onReceiverInputKeyUp = (e) => {\n      this.props.searchContact(e.currentTarget.value);\n    };\n\n    this.addToRecipients = (receiver) => {\n      this.props.addToNumber(receiver);\n      this.props.cleanTypingToNumber();\n    };\n\n    this.removeFromRecipients = (phoneNumber) => {\n      this.props.removeToNumber({ phoneNumber });\n    };\n\n    this.onTextChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateMessageText(value);\n    };\n\n    this.onTextAreaKeyDown = (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        this.props.send();\n      }\n    };\n\n    this.handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.send();\n      console.debug('send message ...');\n    };\n  }\n\n  render() {\n    return (\n      <div className={styles.root}>\n        <form onSubmit={this.handleSubmit}>\n          <div className={styles.receiverField}>\n            <label>{i18n.getString('to', this.props.currentLocale)}:</label>\n            <div className={styles.rightPanel}>\n              <RecipientsInput\n                value={this.props.typingToNumber}\n                onChange={this.onReceiverChange}\n                onClean={this.cleanReceiverValue}\n                placeholder={i18n.getString('enterNameOrNumber', this.props.currentLocale)}\n                recipients={this.props.toNumbers}\n                addToRecipients={this.addToRecipients}\n                removeFromRecipients={this.removeFromRecipients}\n                searchContactList={this.props.searchContactList}\n                onKeyUp={this.onReceiverInputKeyUp}\n                onKeyDown={this.onReceiverInputKeyDown}\n                formatContactPhone={this.props.formatContactPhone}\n              />\n            </div>\n          </div>\n          <div className={styles.senderField}>\n            <label>{i18n.getString('from', this.props.currentLocale)}:</label>\n            <div className={styles.senderInput}>\n              <Select\n                className={styles.senderSelect}\n                value={this.props.senderNumber}\n                onChange={this.onSenderChange}\n                options={this.props.senderNumbers}\n                paddingLeft={0}\n                valueFunction={option => option}\n                renderFunction={this.props.formatPhone}\n              />\n            </div>\n          </div>\n          <div className={styles.buttomField}>\n            <div className={styles.textField}>\n              <textarea\n                placeholder={i18n.getString('typeMessage', this.props.currentLocale)}\n                value={this.props.messageText}\n                maxLength=\"1000\"\n                onChange={this.onTextChange}\n                onKeyDown={this.onTextAreaKeyDown}\n              />\n            </div>\n            <div className={styles.submitField}>\n              <input\n                type=\"submit\"\n                value={i18n.getString('send', this.props.currentLocale)}\n                className={styles.submitButton}\n                disabled={this.props.sendButtonDisabled}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nComposeTextPanel.propTypes = {\n  send: PropTypes.func.isRequired,\n  senderNumbers: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  updateSenderNumber: PropTypes.func.isRequired,\n  updateTypingToNumber: PropTypes.func.isRequired,\n  cleanTypingToNumber: PropTypes.func.isRequired,\n  addToNumber: PropTypes.func.isRequired,\n  removeToNumber: PropTypes.func.isRequired,\n  updateMessageText: PropTypes.func.isRequired,\n  messageText: PropTypes.string,\n  typingToNumber: PropTypes.string,\n  senderNumber: PropTypes.string,\n  toNumbers: React.PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nComposeTextPanel.defaultProps = {\n  messageText: '',\n  typingToNumber: '',\n  senderNumber: '',\n};\n\nexport default ComposeTextPanel;\n"]}