{"version":3,"sources":["components/ComposeTextPanel/index.js"],"names":["ComposeTextPanel","props","onSenderChange","value","updateSenderNumber","cleanReceiverValue","cleanTypingToNumber","addToRecipients","receiver","shouldClean","addToNumber","removeFromRecipients","phoneNumber","removeToNumber","onTextChange","e","currentTarget","updateMessageText","onTextAreaKeyDown","key","preventDefault","send","handleSubmit","console","debug","senderNumbers","length","showSpinner","root","className","currentLocale","outboundSMS","hasSenderNumbers","typingToNumber","updateTypingToNumber","toNumbers","searchContact","searchContactList","formatContactPhone","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","senderField","senderNumber","formatPhone","buttomField","textField","getString","messageText","submitField","submitButton","sendButtonDisabled","propTypes","string","func","isRequired","arrayOf","shape","bool","name","entityType","phoneType","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAGMA,gB;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA,0JACXA,KADW;;AAGjB,UAAKC,cAAL,GAAsB,UAACC,KAAD,EAAW;AAC/B,YAAKF,KAAL,CAAWG,kBAAX,CAA8BD,KAA9B;AACD,KAFD;;AAKA,UAAKE,kBAAL,GAA0B,YAAM;AAC9B,YAAKJ,KAAL,CAAWK,mBAAX;AACD,KAFD;;AAIA,UAAKC,eAAL,GAAuB,UAACC,QAAD,EAAkC;AAAA,UAAvBC,WAAuB,uEAAT,IAAS;;AACvD,YAAKR,KAAL,CAAWS,WAAX,CAAuBF,QAAvB;AACA,UAAIC,WAAJ,EAAiB;AACf,cAAKR,KAAL,CAAWK,mBAAX;AACD;AACF,KALD;;AAOA,UAAKK,oBAAL,GAA4B,UAACC,WAAD,EAAiB;AAC3C,YAAKX,KAAL,CAAWY,cAAX,CAA0B,EAAED,wBAAF,EAA1B;AACD,KAFD;;AAIA,UAAKE,YAAL,GAAoB,UAACC,CAAD,EAAO;AACzB,UAAMZ,QAAQY,EAAEC,aAAF,CAAgBb,KAA9B;AACA,YAAKF,KAAL,CAAWgB,iBAAX,CAA6Bd,KAA7B;AACD,KAHD;;AAKA,UAAKe,iBAAL,GAAyB,UAACH,CAAD,EAAO;AAC9B,UAAIA,EAAEI,GAAF,KAAU,OAAd,EAAuB;AACrBJ,UAAEK,cAAF;AACA,cAAKnB,KAAL,CAAWoB,IAAX;AACD;AACF,KALD;;AAOA,UAAKC,YAAL,GAAoB,UAACP,CAAD,EAAO;AACzBA,QAAEK,cAAF;AACA,YAAKnB,KAAL,CAAWoB,IAAX;AACAE,cAAQC,KAAR,CAAc,kBAAd;AACD,KAJD;AAnCiB;AAwClB;;;;uCAEkB;AACjB,aAAO,KAAKvB,KAAL,CAAWwB,aAAX,CAAyBC,MAAzB,GAAkC,CAAzC;AACD;;;6BAEQ;AACP,UAAI,KAAKzB,KAAL,CAAW0B,WAAf,EAA4B;AAC1B,eACE;AAAA;AAAA,YAAK,WAAW,0BAAW,iBAAOC,IAAlB,EAAwB,KAAK3B,KAAL,CAAW4B,SAAnC,CAAhB;AACE;AADF,SADF;AAKD;AACD,aACE;AAAA;AAAA,UAAK,WAAW,0BAAW,iBAAOD,IAAlB,EAAwB,KAAK3B,KAAL,CAAW4B,SAAnC,CAAhB;AACE;AACE,yBAAe,KAAK5B,KAAL,CAAW6B,aAD5B;AAEE,uBAAa,KAAK7B,KAAL,CAAW8B,WAF1B;AAGE,4BAAkB,KAAKC,gBAAL;AAHpB,UADF;AAME;AAAA;AAAA,YAAM,UAAU,KAAKV,YAArB;AACE;AACE,mBAAO,KAAKrB,KAAL,CAAWgC,cADpB;AAEE,sBAAU,KAAKhC,KAAL,CAAWiC,oBAFvB;AAGE,qBAAS,KAAK7B,kBAHhB;AAIE,wBAAY,KAAKJ,KAAL,CAAWkC,SAJzB;AAKE,6BAAiB,KAAK5B,eALxB;AAME,kCAAsB,KAAKI,oBAN7B;AAOE,2BAAe,KAAKV,KAAL,CAAWmC,aAP5B;AAQE,+BAAmB,KAAKnC,KAAL,CAAWoC,iBARhC;AASE,gCAAoB,KAAKpC,KAAL,CAAWqC,kBATjC;AAUE,2BAAe,KAAKrC,KAAL,CAAW6B,aAV5B;AAWE,+BAAmB,KAAK7B,KAAL,CAAWsC,iBAXhC;AAYE,iCAAqB,KAAKtC,KAAL,CAAWuC,6BAZlC;AAaE,kCAAsB,KAAKvC,KAAL,CAAWwC,8BAbnC;AAcE,8BAdF;AAeE,2BAfF;AAgBE;AAhBF,YADF;AAmBE;AAAA;AAAA,cAAK,WAAW,iBAAOC,WAAvB;AACE;AACE,6BAAe,KAAKzC,KAAL,CAAW6B,aAD5B;AAEE,0BAAY,KAAK7B,KAAL,CAAW0C,YAFzB;AAGE,2BAAa,KAAK1C,KAAL,CAAWwB,aAH1B;AAIE,2BAAa,KAAKxB,KAAL,CAAW2C,WAJ1B;AAKE,wBAAU,KAAK1C,cALjB;AAME,sBAAQ,CAAC,KAAK8B,gBAAL,EANX;AAOE,6BAAe;AAPjB;AADF,WAnBF;AA8BE;AAAA;AAAA,cAAK,WAAW,iBAAOa,WAAvB;AACE;AAAA;AAAA,gBAAK,WAAW,iBAAOC,SAAvB;AACE;AACE,6BAAa,eAAKC,SAAL,CAAe,aAAf,EAA8B,KAAK9C,KAAL,CAAW6B,aAAzC,CADf;AAEE,uBAAO,KAAK7B,KAAL,CAAW+C,WAFpB;AAGE,2BAAU,MAHZ;AAIE,0BAAU,KAAKlC,YAJjB;AAKE,mCAAmB,KAAKI;AAL1B;AADF,aADF;AAUE;AAAA;AAAA,gBAAK,WAAW,iBAAO+B,WAAvB;AACE;AACE,sBAAK,QADP;AAEE,uBAAO,eAAKF,SAAL,CAAe,MAAf,EAAuB,KAAK9C,KAAL,CAAW6B,aAAlC,CAFT;AAGE,2BAAW,iBAAOoB,YAHpB;AAIE,0BAAU,KAAKjD,KAAL,CAAWkD;AAJvB;AADF;AAVF;AA9BF;AANF,OADF;AA2DD;;;;;AAGHnD,iBAAiBoD,SAAjB,GAA6B;AAC3BvB,aAAW,oBAAUwB,MADM;AAE3BhC,QAAM,oBAAUiC,IAAV,CAAeC,UAFM;AAG3B9B,iBAAe,oBAAU+B,OAAV,CAAkB,oBAAUC,KAAV,CAAgB;AAC/C7C,iBAAa,oBAAUyC,MAAV,CAAiBE;AADiB,GAAhB,CAAlB,EAEXA,UALuB;AAM3BJ,sBAAoB,oBAAUO,IAAV,CAAeH,UANR;AAO3BX,eAAa,oBAAUU,IAAV,CAAeC,UAPD;AAQ3BjB,sBAAoB,oBAAUgB,IAAV,CAAeC,UARR;AAS3BnB,iBAAe,oBAAUkB,IAAV,CAAeC,UATH;AAU3BlB,qBAAmB,oBAAUmB,OAAV,CAAkB,oBAAUC,KAAV,CAAgB;AACnDE,UAAM,oBAAUN,MAAV,CAAiBE,UAD4B;AAEnDK,gBAAY,oBAAUP,MAAV,CAAiBE,UAFsB;AAGnDM,eAAW,oBAAUR,MAAV,CAAiBE,UAHuB;AAInD3C,iBAAa,oBAAUyC,MAAV,CAAiBE;AAJqB,GAAhB,CAAlB,EAKfA,UAfuB;AAgB3BzB,iBAAe,oBAAUuB,MAAV,CAAiBE,UAhBL;AAiB3BnD,sBAAoB,oBAAUkD,IAAV,CAAeC,UAjBR;AAkB3BrB,wBAAsB,oBAAUoB,IAAV,CAAeC,UAlBV;AAmB3BjD,uBAAqB,oBAAUgD,IAAV,CAAeC,UAnBT;AAoB3B7C,eAAa,oBAAU4C,IAAV,CAAeC,UApBD;AAqB3B1C,kBAAgB,oBAAUyC,IAAV,CAAeC,UArBJ;AAsB3BtC,qBAAmB,oBAAUqC,IAAV,CAAeC,UAtBP;AAuB3BP,eAAa,oBAAUK,MAvBI;AAwB3BpB,kBAAgB,oBAAUoB,MAxBC;AAyB3BV,gBAAc,oBAAUU,MAzBG;AA0B3BlB,aAAW,oBAAUqB,OAAV,CAAkB,oBAAUC,KAAV,CAAgB;AAC3C7C,iBAAa,oBAAUyC,MAAV,CAAiBE,UADa;AAE3CI,UAAM,oBAAUN;AAF2B,GAAhB,CAAlB,EAGPE,UA7BuB;AA8B3BxB,eAAa,oBAAU2B,IA9BI;AA+B3B/B,eAAa,oBAAU+B,IA/BI;AAgC3BnB,qBAAmB,oBAAUe,IAhCF;AAiC3Bd,iCAA+B,oBAAUc,IAjCd;AAkC3Bb,kCAAgC,oBAAUa;AAlCf,CAA7B;;AAqCAtD,iBAAiB8D,YAAjB,GAAgC;AAC9BjC,aAAW,IADmB;AAE9BmB,eAAa,EAFiB;AAG9Bf,kBAAgB,EAHc;AAI9BU,gBAAc,EAJgB;AAK9BZ,eAAa,KALiB;AAM9BJ,eAAa,KANiB;AAO9BY,qBAAmBwB,SAPW;AAQ9BvB,iCAA+BuB,SARD;AAS9BtB,kCAAgCsB;AATF,CAAhC;;kBAYe/D,gB","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport RecipientsInput from '../RecipientsInput';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport NoSenderAlert from './NoSenderAlert';\nimport FromField from '../FromField';\n\n\nclass ComposeTextPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSenderChange = (value) => {\n      this.props.updateSenderNumber(value);\n    };\n\n\n    this.cleanReceiverValue = () => {\n      this.props.cleanTypingToNumber();\n    };\n\n    this.addToRecipients = (receiver, shouldClean = true) => {\n      this.props.addToNumber(receiver);\n      if (shouldClean) {\n        this.props.cleanTypingToNumber();\n      }\n    };\n\n    this.removeFromRecipients = (phoneNumber) => {\n      this.props.removeToNumber({ phoneNumber });\n    };\n\n    this.onTextChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateMessageText(value);\n    };\n\n    this.onTextAreaKeyDown = (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        this.props.send();\n      }\n    };\n\n    this.handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.send();\n      console.debug('send message ...');\n    };\n  }\n\n  hasSenderNumbers() {\n    return this.props.senderNumbers.length > 0;\n  }\n\n  render() {\n    if (this.props.showSpinner) {\n      return (\n        <div className={classnames(styles.root, this.props.className)}>\n          <SpinnerOverlay />\n        </div>\n      );\n    }\n    return (\n      <div className={classnames(styles.root, this.props.className)}>\n        <NoSenderAlert\n          currentLocale={this.props.currentLocale}\n          outboundSMS={this.props.outboundSMS}\n          hasSenderNumbers={this.hasSenderNumbers()}\n        />\n        <form onSubmit={this.handleSubmit}>\n          <RecipientsInput\n            value={this.props.typingToNumber}\n            onChange={this.props.updateTypingToNumber}\n            onClean={this.cleanReceiverValue}\n            recipients={this.props.toNumbers}\n            addToRecipients={this.addToRecipients}\n            removeFromRecipients={this.removeFromRecipients}\n            searchContact={this.props.searchContact}\n            searchContactList={this.props.searchContactList}\n            formatContactPhone={this.props.formatContactPhone}\n            currentLocale={this.props.currentLocale}\n            phoneTypeRenderer={this.props.phoneTypeRenderer}\n            contactInfoRenderer={this.props.recipientsContactInfoRenderer}\n            contactPhoneRenderer={this.props.recipientsContactPhoneRenderer}\n            titleEnabled\n            autoFocus\n            multiple\n          />\n          <div className={styles.senderField}>\n            <FromField\n              currentLocale={this.props.currentLocale}\n              fromNumber={this.props.senderNumber}\n              fromNumbers={this.props.senderNumbers}\n              formatPhone={this.props.formatPhone}\n              onChange={this.onSenderChange}\n              hidden={!this.hasSenderNumbers()}\n              showAnonymous={false}\n            />\n          </div>\n          <div className={styles.buttomField}>\n            <div className={styles.textField}>\n              <textarea\n                placeholder={i18n.getString('typeMessage', this.props.currentLocale)}\n                value={this.props.messageText}\n                maxLength=\"1000\"\n                onChange={this.onTextChange}\n                onKeyPressCapture={this.onTextAreaKeyDown}\n              />\n            </div>\n            <div className={styles.submitField}>\n              <input\n                type=\"submit\"\n                value={i18n.getString('send', this.props.currentLocale)}\n                className={styles.submitButton}\n                disabled={this.props.sendButtonDisabled}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nComposeTextPanel.propTypes = {\n  className: PropTypes.string,\n  send: PropTypes.func.isRequired,\n  senderNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  updateSenderNumber: PropTypes.func.isRequired,\n  updateTypingToNumber: PropTypes.func.isRequired,\n  cleanTypingToNumber: PropTypes.func.isRequired,\n  addToNumber: PropTypes.func.isRequired,\n  removeToNumber: PropTypes.func.isRequired,\n  updateMessageText: PropTypes.func.isRequired,\n  messageText: PropTypes.string,\n  typingToNumber: PropTypes.string,\n  senderNumber: PropTypes.string,\n  toNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string,\n  })).isRequired,\n  outboundSMS: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  phoneTypeRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n};\n\nComposeTextPanel.defaultProps = {\n  className: null,\n  messageText: '',\n  typingToNumber: '',\n  senderNumber: '',\n  outboundSMS: false,\n  showSpinner: false,\n  phoneTypeRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n};\n\nexport default ComposeTextPanel;\n"]}