{"version":3,"sources":["components/ComposeTextPanel/index.js"],"names":["ComposeTextPanel","props","state","messageText","onSenderChange","value","updateSenderNumber","cleanReceiverValue","cleanTypingToNumber","addToRecipients","receiver","shouldClean","addToNumber","isAdded","removeFromRecipients","phoneNumber","removeToNumber","onTextChange","e","currentTarget","setState","updateMessageText","onTextAreaKeyDown","key","preventDefault","send","handleSubmit","console","debug","nextProps","senderNumbers","length","showSpinner","root","className","currentLocale","outboundSMS","hasSenderNumbers","brand","typingToNumber","updateTypingToNumber","toNumbers","searchContact","searchContactList","formatContactPhone","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","autoFocus","senderField","senderNumber","formatPhone","buttomField","textField","getString","submitField","submitButton","sendButtonDisabled","propTypes","string","func","isRequired","arrayOf","shape","bool","name","entityType","phoneType","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport RecipientsInput from '../RecipientsInput';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport NoSenderAlert from './NoSenderAlert';\nimport FromField from '../FromField';\n\n\nclass ComposeTextPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messageText: props.messageText,\n    };\n\n    this.onSenderChange = (value) => {\n      this.props.updateSenderNumber(value);\n    };\n\n\n    this.cleanReceiverValue = () => {\n      this.props.cleanTypingToNumber();\n    };\n\n    this.addToRecipients = async (receiver, shouldClean = true) => {\n      const isAdded = await this.props.addToNumber(receiver);\n      if (isAdded && shouldClean) {\n        this.props.cleanTypingToNumber();\n      }\n    };\n\n    this.removeFromRecipients = (phoneNumber) => {\n      this.props.removeToNumber({ phoneNumber });\n    };\n\n    this.onTextChange = (e) => {\n      const value = e.currentTarget.value;\n      this.setState({\n        messageText: value,\n      });\n      this.props.updateMessageText(value);\n    };\n\n    this.onTextAreaKeyDown = (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        this.props.send();\n      }\n    };\n\n    this.handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.send();\n      console.debug('send message ...');\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.messageText !== this.state.messageText) {\n      this.setState({\n        messageText: nextProps.messageText,\n      });\n    }\n  }\n\n  hasSenderNumbers() {\n    return this.props.senderNumbers.length > 0;\n  }\n\n  render() {\n    if (this.props.showSpinner) {\n      return (\n        <div className={classnames(styles.root, this.props.className)}>\n          <SpinnerOverlay />\n        </div>\n      );\n    }\n    return (\n      <div className={classnames(styles.root, this.props.className)}>\n        <NoSenderAlert\n          currentLocale={this.props.currentLocale}\n          outboundSMS={this.props.outboundSMS}\n          hasSenderNumbers={this.hasSenderNumbers()}\n          brand={this.props.brand}\n        />\n        <form onSubmit={this.handleSubmit}>\n          <RecipientsInput\n            value={this.props.typingToNumber}\n            onChange={this.props.updateTypingToNumber}\n            onClean={this.cleanReceiverValue}\n            recipients={this.props.toNumbers}\n            addToRecipients={this.addToRecipients}\n            removeFromRecipients={this.removeFromRecipients}\n            searchContact={this.props.searchContact}\n            searchContactList={this.props.searchContactList}\n            formatContactPhone={this.props.formatContactPhone}\n            currentLocale={this.props.currentLocale}\n            phoneTypeRenderer={this.props.phoneTypeRenderer}\n            contactInfoRenderer={this.props.recipientsContactInfoRenderer}\n            contactPhoneRenderer={this.props.recipientsContactPhoneRenderer}\n            titleEnabled\n            autoFocus={this.props.autoFocus}\n            multiple\n          />\n          <div className={styles.senderField}>\n            <FromField\n              currentLocale={this.props.currentLocale}\n              fromNumber={this.props.senderNumber}\n              fromNumbers={this.props.senderNumbers}\n              formatPhone={this.props.formatPhone}\n              onChange={this.onSenderChange}\n              hidden={!this.hasSenderNumbers()}\n              showAnonymous={false}\n            />\n          </div>\n          <div className={styles.buttomField}>\n            <div className={styles.textField}>\n              <textarea\n                placeholder={i18n.getString('typeMessage', this.props.currentLocale)}\n                value={this.state.messageText}\n                maxLength=\"1000\"\n                onChange={this.onTextChange}\n                onKeyPressCapture={this.onTextAreaKeyDown}\n              />\n            </div>\n            <div className={styles.submitField}>\n              <input\n                type=\"submit\"\n                value={i18n.getString('send', this.props.currentLocale)}\n                className={styles.submitButton}\n                disabled={this.props.sendButtonDisabled}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nComposeTextPanel.propTypes = {\n  brand: PropTypes.string,\n  className: PropTypes.string,\n  send: PropTypes.func.isRequired,\n  senderNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  updateSenderNumber: PropTypes.func.isRequired,\n  updateTypingToNumber: PropTypes.func.isRequired,\n  cleanTypingToNumber: PropTypes.func.isRequired,\n  addToNumber: PropTypes.func.isRequired,\n  removeToNumber: PropTypes.func.isRequired,\n  updateMessageText: PropTypes.func.isRequired,\n  messageText: PropTypes.string,\n  typingToNumber: PropTypes.string,\n  senderNumber: PropTypes.string,\n  toNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string,\n  })).isRequired,\n  outboundSMS: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  phoneTypeRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  autoFocus: PropTypes.bool,\n};\n\nComposeTextPanel.defaultProps = {\n  brand: 'RingCentral',\n  className: null,\n  messageText: '',\n  typingToNumber: '',\n  senderNumber: '',\n  outboundSMS: false,\n  showSpinner: false,\n  phoneTypeRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n  autoFocus: false,\n};\n\nexport default ComposeTextPanel;\n"]}