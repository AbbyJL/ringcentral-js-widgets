{"version":3,"sources":["components/ComposeTextPanel/index.js"],"names":["SenderSelectInput","props","className","value","onChange","options","map","number","formatPhone","propTypes","string","isRequired","func","arrayOf","defaultProps","ComposeTextPanel","onSenderChange","e","currentTarget","updateSenderNumber","onReceiverChange","updateTypingToNumber","cleanReceiverValue","cleanTypingToNumber","onReceiverInputKeyDown","key","preventDefault","addToNumber","name","typingToNumber","phoneNumber","onReceiverInputKeyUp","searchContact","addToRecipients","receiver","removeFromRecipients","removeToNumber","onTextChange","updateMessageText","handleSubmit","send","console","debug","messageSenderField","getString","currentLocale","valueInput","select","senderNumber","senderNumbers","messageReceiverField","rightPanel","toNumbers","searchContactList","messageTextField","messageText","submitButton","sendButtonDisabled","bool","shape","entityType","phoneType","PropTypes"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport RecipientsInput from '../RecipientsInput';\n\nfunction SenderSelectInput(props) {\n  return (\n    <select\n      className={props.className}\n      value={props.value}\n      onChange={props.onChange}>\n      {\n        props.options.map(number => (\n          <option key={number} value={number}>\n            {props.formatPhone(number)}\n          </option>\n        ))\n      }\n    </select>\n  );\n}\n\nSenderSelectInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nSenderSelectInput.defaultProps = {\n  className: null,\n};\n\nclass ComposeTextPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSenderChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateSenderNumber(value);\n    };\n\n    this.onReceiverChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateTypingToNumber(value);\n    };\n\n    this.cleanReceiverValue = () => {\n      this.props.cleanTypingToNumber();\n    };\n\n    this.onReceiverInputKeyDown = (e) => {\n      if (e.key === ',' || e.key === ';' || e.key === 'Enter') {\n        e.preventDefault();\n        this.props.addToNumber({\n          name: this.props.formatPhone(this.props.typingToNumber),\n          phoneNumber: this.props.typingToNumber,\n        });\n        this.props.cleanTypingToNumber();\n      }\n    };\n\n    this.onReceiverInputKeyUp = (e) => {\n      this.props.searchContact(e.currentTarget.value);\n    };\n\n    this.addToRecipients = (receiver) => {\n      this.props.addToNumber(receiver);\n      this.props.cleanTypingToNumber();\n    };\n\n    this.removeFromRecipients = (phoneNumber) => {\n      this.props.removeToNumber({ phoneNumber });\n    };\n\n    this.onTextChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateMessageText(value);\n    };\n\n    this.handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.send();\n      console.debug('send message ...');\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div className={styles.messageSenderField}>\n            <label>{i18n.getString('sendMessageFrom', this.props.currentLocale)}</label>\n            <div className={styles.valueInput}>\n              <SenderSelectInput\n                className={styles.select}\n                value={this.props.senderNumber}\n                onChange={this.onSenderChange}\n                options={this.props.senderNumbers}\n                formatPhone={this.props.formatPhone}\n              />\n            </div>\n          </div>\n          <div className={styles.messageReceiverField}>\n            <label>{i18n.getString('to', this.props.currentLocale)}:</label>\n            <div className={styles.rightPanel}>\n              <RecipientsInput\n                value={this.props.typingToNumber}\n                onChange={this.onReceiverChange}\n                onClean={this.cleanReceiverValue}\n                placeholder={i18n.getString('enterNameOrNumber', this.props.currentLocale)}\n                recipients={this.props.toNumbers}\n                addToRecipients={this.addToRecipients}\n                removeFromRecipients={this.removeFromRecipients}\n                searchContactList={this.props.searchContactList}\n                onKeyUp={this.onReceiverInputKeyUp}\n                onKeyDown={this.onReceiverInputKeyDown}\n                formatPhone={this.props.formatPhone}\n              />\n            </div>\n          </div>\n          <div className={styles.messageTextField}>\n            <textarea\n              placeholder={i18n.getString('typeAnyToSend', this.props.currentLocale)}\n              value={this.props.messageText}\n              maxLength=\"1000\"\n              onChange={this.onTextChange}\n            />\n          </div>\n          <input\n            type=\"submit\"\n            value={i18n.getString('send', this.props.currentLocale)}\n            className={styles.submitButton}\n            disabled={this.props.sendButtonDisabled}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nComposeTextPanel.propTypes = {\n  send: PropTypes.func.isRequired,\n  senderNumbers: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  updateSenderNumber: PropTypes.func.isRequired,\n  updateTypingToNumber: PropTypes.func.isRequired,\n  cleanTypingToNumber: PropTypes.func.isRequired,\n  addToNumber: PropTypes.func.isRequired,\n  removeToNumber: PropTypes.func.isRequired,\n  updateMessageText: PropTypes.func.isRequired,\n  messageText: PropTypes.string,\n  typingToNumber: PropTypes.string,\n  senderNumber: PropTypes.string,\n  toNumbers: React.PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nComposeTextPanel.defaultProps = {\n  messageText: '',\n  typingToNumber: '',\n  senderNumber: '',\n};\n\nexport default ComposeTextPanel;\n"]}