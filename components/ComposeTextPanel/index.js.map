{"version":3,"sources":["components/ComposeTextPanel/index.js"],"names":["ComposeTextPanel","props","state","showAlert","senderNumbers","length","onSenderChange","e","value","currentTarget","updateSenderNumber","onReceiverChange","updateTypingToNumber","cleanReceiverValue","cleanTypingToNumber","onReceiverInputKeyDown","key","preventDefault","typingToNumber","addToNumber","name","phoneNumber","onReceiverInputKeyUp","searchContact","addToRecipients","receiver","removeFromRecipients","removeToNumber","onTextChange","updateMessageText","onTextAreaKeyDown","send","handleSubmit","console","debug","onDismissAlert","setState","getRenderer","messages","id","level","message","senderNumberInvalids","AlertDiv","currentLocale","root","receiverField","getString","rightPanel","toNumbers","searchContactList","formatContactPhone","senderField","senderInput","senderSelect","senderNumber","option","formatPhone","buttomField","textField","messageText","submitField","submitButton","sendButtonDisabled","propTypes","func","isRequired","arrayOf","string","bool","shape","entityType","phoneType","PropTypes","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport messageSenderMessages from\n'ringcentral-integration/modules/MessageSender/messageSenderMessages';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport RecipientsInput from '../RecipientsInput';\nimport AlertDisplay from '../AlertDisplay';\nimport MessageSenderAlert from '../MessageSenderAlert';\nimport Select from '../Select';\n\nclass ComposeTextPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAlert: this.props.senderNumbers.length === 0\n    };\n\n    this.onSenderChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateSenderNumber(value);\n    };\n\n    this.onReceiverChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateTypingToNumber(value);\n    };\n\n    this.cleanReceiverValue = () => {\n      this.props.cleanTypingToNumber();\n    };\n\n    this.onReceiverInputKeyDown = (e) => {\n      if (e.key === ',' || e.key === ';' || e.key === 'Enter') {\n        e.preventDefault();\n        if (this.props.typingToNumber.length === 0) {\n          return;\n        }\n        this.props.addToNumber({\n          name: this.props.typingToNumber,\n          phoneNumber: this.props.typingToNumber,\n        });\n        this.props.cleanTypingToNumber();\n      }\n    };\n\n    this.onReceiverInputKeyUp = (e) => {\n      this.props.searchContact(e.currentTarget.value);\n    };\n\n    this.addToRecipients = (receiver) => {\n      this.props.addToNumber(receiver);\n      this.props.cleanTypingToNumber();\n    };\n\n    this.removeFromRecipients = (phoneNumber) => {\n      this.props.removeToNumber({ phoneNumber });\n    };\n\n    this.onTextChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateMessageText(value);\n    };\n\n    this.onTextAreaKeyDown = (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        this.props.send();\n      }\n    };\n\n    this.handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.send();\n      console.debug('send message ...');\n    };\n    this.onDismissAlert = () => {\n      this.setState({\n        showAlert: false\n      });\n    };\n    this.getRenderer = () => MessageSenderAlert;\n    this.messages = [\n      {\n        id: '1',\n        level: 'warning',\n        message: messageSenderMessages.senderNumberInvalids,\n      }\n    ];\n  }\n  render() {\n    const AlertDiv = this.state.showAlert ? (\n      <AlertDisplay\n        currentLocale={this.props.currentLocale}\n        messages={this.messages}\n        dismiss={this.onDismissAlert}\n        getRenderer={this.getRenderer}\n      />\n    ) : '';\n    return (\n      <div className={styles.root}>\n        {AlertDiv}\n        <form onSubmit={this.handleSubmit}>\n          <div className={styles.receiverField}>\n            <label>{i18n.getString('to', this.props.currentLocale)}:</label>\n            <div className={styles.rightPanel}>\n              <RecipientsInput\n                value={this.props.typingToNumber}\n                onChange={this.onReceiverChange}\n                onClean={this.cleanReceiverValue}\n                placeholder={i18n.getString('enterNameOrNumber', this.props.currentLocale)}\n                recipients={this.props.toNumbers}\n                addToRecipients={this.addToRecipients}\n                removeFromRecipients={this.removeFromRecipients}\n                searchContactList={this.props.searchContactList}\n                onKeyUp={this.onReceiverInputKeyUp}\n                onKeyDown={this.onReceiverInputKeyDown}\n                formatContactPhone={this.props.formatContactPhone}\n              />\n            </div>\n          </div>\n          <div className={styles.senderField}>\n            <label>{i18n.getString('from', this.props.currentLocale)}:</label>\n            <div className={styles.senderInput}>\n              <Select\n                className={styles.senderSelect}\n                value={this.props.senderNumber}\n                onChange={this.onSenderChange}\n                options={this.props.senderNumbers}\n                paddingLeft={0}\n                valueFunction={option => option}\n                renderFunction={this.props.formatPhone}\n              />\n            </div>\n          </div>\n          <div className={styles.buttomField}>\n            <div className={styles.textField}>\n              <textarea\n                placeholder={i18n.getString('typeMessage', this.props.currentLocale)}\n                value={this.props.messageText}\n                maxLength=\"1000\"\n                onChange={this.onTextChange}\n                onKeyDown={this.onTextAreaKeyDown}\n              />\n            </div>\n            <div className={styles.submitField}>\n              <input\n                type=\"submit\"\n                value={i18n.getString('send', this.props.currentLocale)}\n                className={styles.submitButton}\n                disabled={this.props.sendButtonDisabled}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nComposeTextPanel.propTypes = {\n  send: PropTypes.func.isRequired,\n  senderNumbers: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  updateSenderNumber: PropTypes.func.isRequired,\n  updateTypingToNumber: PropTypes.func.isRequired,\n  cleanTypingToNumber: PropTypes.func.isRequired,\n  addToNumber: PropTypes.func.isRequired,\n  removeToNumber: PropTypes.func.isRequired,\n  updateMessageText: PropTypes.func.isRequired,\n  messageText: PropTypes.string,\n  typingToNumber: PropTypes.string,\n  senderNumber: PropTypes.string,\n  toNumbers: React.PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nComposeTextPanel.defaultProps = {\n  messageText: '',\n  typingToNumber: '',\n  senderNumber: '',\n};\n\nexport default ComposeTextPanel;\n"]}