{"version":3,"sources":["components/ActionMenu/index.js"],"names":["ClickToDialButton","className","currentLocale","onClickToDial","disableLinks","disableClickToDial","phoneNumber","call","propTypes","string","func","bool","isRequired","defaultProps","undefined","ClickToSmsButton","onClickToSms","sms","composeText","LogButton","onLogCall","isLogged","isLogging","spinner","spinnerContainer","log","edit","callLog","EntityButton","onViewEntity","onCreateEntity","hasEntity","isCreating","icon","record","addEntity","onClick","entity","ActionMenu","props","state","entityModalVisible","openEntityModal","setState","closeEntityModal","onCreateEnityModal","entityType","onCancelEntityModal","logButton","baseGroup","entityButton","entityModal","hasBaseGroup","clickToDialButton","secondGroup","clickToSmsButton","hasSecondGroup","root"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport Spinner from '../Spinner';\nimport SlideMenu from '../SlideMenu';\nimport EntityModal from '../EntityModal';\nimport Button from '../Button';\nimport styles from './styles.scss';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nfunction ClickToDialButton({\n  className,\n  currentLocale,\n  onClickToDial,\n  disableLinks,\n  disableClickToDial,\n  phoneNumber,\n}) {\n  return (\n    <Button\n      className={classnames(styles.call, className)}\n      onClick={onClickToDial}\n      disabled={disableLinks || disableClickToDial || !phoneNumber} >\n      <span className={dynamicsFont.call} />\n    </Button>\n  );\n}\nClickToDialButton.propTypes = {\n  className: PropTypes.string,\n  onClickToDial: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  phoneNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n};\nClickToDialButton.defaultProps = {\n  className: undefined,\n  onClickToDial: undefined,\n  disableLinks: false,\n  disableClickToDial: false,\n  phoneNumber: undefined,\n};\n\nfunction ClickToSmsButton({\n  className,\n  currentLocale,\n  onClickToSms,\n  disableLinks,\n  phoneNumber,\n}) {\n  return (\n    <Button\n      className={classnames(styles.sms, className)}\n      onClick={onClickToSms}\n      disabled={disableLinks || !phoneNumber} >\n      <span className={dynamicsFont.composeText} />\n    </Button>\n  );\n}\nClickToSmsButton.propTypes = {\n  className: PropTypes.string,\n  onClickToSms: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  phoneNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n};\nClickToSmsButton.defaultProps = {\n  className: undefined,\n  onClickToSms: undefined,\n  disableLinks: false,\n  phoneNumber: undefined,\n};\n\nfunction LogButton({\n  className,\n  currentLocale,\n  onLogCall,\n  isLogged,\n  disableLinks,\n  isLogging,\n}) {\n  const spinner = isLogging ?\n    (\n      <div className={styles.spinnerContainer}>\n        <Spinner ringWidth={2} />\n      </div>\n    ) :\n    null;\n  return (\n    <Button\n      className={classnames(styles.log, className)}\n      onClick={onLogCall}\n      disabled={disableLinks || isLogging}\n    >\n      <span\n        className={isLogged ?\n          dynamicsFont.edit :\n          dynamicsFont.callLog\n        } />\n      {spinner}\n    </Button>\n  );\n}\nLogButton.propTypes = {\n  className: PropTypes.string,\n  onLogCall: PropTypes.func,\n  isLogged: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n  isLogging: PropTypes.bool,\n  currentLocale: PropTypes.string.isRequired,\n};\nLogButton.defaultProps = {\n  className: undefined,\n  onLogCall: undefined,\n  isLogged: false,\n  disableLinks: false,\n  isLogging: false,\n};\n\nfunction EntityButton({\n  className,\n  currentLocale,\n  onViewEntity,\n  onCreateEntity,\n  hasEntity,\n  isCreating,\n  disableLinks,\n}) {\n  // console.debug('isCreating', isCreating);\n  const spinner = isCreating ?\n    (\n      <div className={styles.spinnerContainer}>\n        <Spinner ringWidth={2} />\n      </div>\n    ) :\n    null;\n  const icon = hasEntity ? dynamicsFont.record : dynamicsFont.addEntity;\n  const onClick = hasEntity ? onViewEntity : onCreateEntity;\n\n  return (\n    <Button\n      className={classnames(styles.entity, className)}\n      onClick={onClick}\n      disabled={disableLinks} >\n\n      <span className={icon} />\n      {spinner}\n    </Button>\n  );\n}\nEntityButton.propTypes = {\n  className: PropTypes.string,\n  onViewEntity: PropTypes.func,\n  onCreateEntity: PropTypes.func,\n  hasEntity: PropTypes.bool,\n  isCreating: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n  currentLocale: PropTypes.string.isRequired,\n};\nEntityButton.defaultProps = {\n  className: undefined,\n  onViewEntity: undefined,\n  hasEntity: false,\n  onCreateEntity: undefined,\n  isCreating: false,\n  disableLinks: false,\n};\n\n\nexport default class ActionMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      entityModalVisible: false,\n    };\n\n    this.openEntityModal = () => {\n      this.setState({\n        entityModalVisible: true\n      });\n    };\n    this.closeEntityModal = () => {\n      this.setState({\n        entityModalVisible: false\n      });\n    };\n    this.onCreateEnityModal = (entityType) => {\n      this.props.onCreateEntity(entityType);\n      this.closeEntityModal();\n    };\n    this.onCancelEntityModal = () => {\n      this.closeEntityModal();\n    };\n  }\n\n  render() {\n    const {\n      className,\n      currentLocale,\n      onLogCall,\n      isLogged,\n      isLogging,\n      isCreating,\n      onViewEntity,\n      onCreateEntity,\n      hasEntity,\n      onClickToDial,\n      onClickToSms,\n      phoneNumber,\n      disableLinks,\n      disableClickToDial,\n    } = this.props;\n\n    const logButton = onLogCall ?\n    (\n      <LogButton\n        className={styles.baseGroup}\n        onLogCall={onLogCall}\n        disableLinks={disableLinks}\n        isLogged={isLogged}\n        isLogging={isLogging}\n        currentLocale={currentLocale}\n      />\n    ) :\n    null;\n\n    let entityButton;\n    if (hasEntity && onViewEntity) {\n      entityButton = (<EntityButton\n        className={styles.baseGroup}\n        onViewEntity={onViewEntity}\n        hasEntity={hasEntity}\n        disableLinks={disableLinks}\n        currentLocale={currentLocale}\n        />);\n    } else if (!hasEntity && phoneNumber && onCreateEntity) {\n      entityButton = (<EntityButton\n        className={styles.baseGroup}\n        onCreateEntity={this.openEntityModal}\n        hasEntity={hasEntity}\n        disableLinks={disableLinks}\n        currentLocale={currentLocale}\n        />);\n    } else {\n      entityButton = null;\n    }\n\n    const entityModal = (!hasEntity && phoneNumber) ?\n      (<EntityModal\n        currentLocale={currentLocale}\n        show={this.state.entityModalVisible}\n        onCreate={this.onCreateEnityModal}\n        onCancel={this.onCancelEntityModal}\n        />\n      ) : null;\n\n    const hasBaseGroup = !!(logButton || entityButton);\n\n    const clickToDialButton = onClickToDial ?\n      (\n        <ClickToDialButton\n          className={hasBaseGroup ? styles.secondGroup : styles.baseGroup}\n          onClickToDial={onClickToDial}\n          phoneNumber={phoneNumber}\n          disableLinks={disableLinks}\n          disableClickToDial={disableClickToDial}\n          currentLocale={currentLocale}\n        />\n      ) :\n      null;\n    const clickToSmsButton = onClickToSms ?\n      (\n        <ClickToSmsButton\n          className={hasBaseGroup ? styles.secondGroup : styles.baseGroup}\n          onClickToSms={onClickToSms}\n          phoneNumber={phoneNumber}\n          disableLinks={disableLinks}\n          currentLocale={currentLocale}\n        />\n      ) :\n      null;\n    const hasSecondGroup = hasBaseGroup && !!(clickToDialButton || clickToSmsButton);\n    if (hasSecondGroup) {\n      // slide menu\n      return (\n        <SlideMenu\n          className={classnames(styles.root, className)}\n          minWidth={40}\n          maxWidth={75} >\n          {clickToDialButton}\n          {clickToSmsButton}\n          {entityButton}\n          {logButton}\n          {entityModal}\n        </SlideMenu>\n\n      );\n    } else if (\n      !clickToDialButton &&\n      !clickToSmsButton &&\n      !entityButton &&\n      !logButton\n    ) {\n      return null;\n    }\n    // no slide menu\n    return (\n      <div>\n        <div className={classnames(styles.root, className)}>\n          {clickToDialButton}\n          {clickToSmsButton}\n          {entityButton}\n          {logButton}\n          {entityModal}\n        </div>\n      </div>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  onLogCall: PropTypes.func,\n  isLogged: PropTypes.bool,\n  isLogging: PropTypes.bool,\n  isCreating: PropTypes.bool,\n  onViewEntity: PropTypes.func,\n  onCreateEntity: PropTypes.func,\n  hasEntity: PropTypes.bool,\n  onClickToDial: PropTypes.func,\n  onClickToSms: PropTypes.func,\n  phoneNumber: PropTypes.string,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n};\nActionMenu.defaultProps = {\n  className: undefined,\n  onLogCall: undefined,\n  isLogged: false,\n  isLogging: false,\n  isCreating: false,\n  onViewEntity: undefined,\n  onCreateEntity: undefined,\n  hasEntity: false,\n  onClickToDial: undefined,\n  onClickToSms: undefined,\n  phoneNumber: undefined,\n  disableLinks: false,\n  disableClickToDial: false,\n};\n"]}