{"version":3,"sources":["components/ActionMenu/index.js"],"names":["ClickToDialButton","className","onClickToDial","disableLinks","disableClickToDial","phoneNumber","title","call","propTypes","string","func","bool","defaultProps","undefined","ClickToSmsButton","onClickToSms","sms","composeText","ActionMenu","props","onCreateEnityModal","entityType","onCreateEntity","closeEntityModal","onCancelEntityModal","openEntityModal","setState","entityModalVisible","captureClick","e","stopPropagation","state","reference","currentLocale","onLog","isLogged","isLogging","isCreating","onViewEntity","hasEntity","addLogTitle","editLogTitle","callTitle","textTitle","createEntityTitle","viewEntityTitle","logButton","baseGroup","entityButton","entity","entityModal","hasBaseGroup","clickToDialButton","secondGroup","clickToSmsButton","hasSecondGroup","root","isRequired"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport SlideMenu from '../SlideMenu';\nimport EntityButton from '../EntityButton';\nimport EntityModal from '../EntityModal';\nimport Button from '../Button';\nimport LogButton from '../LogButton';\nimport styles from './styles.scss';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nfunction ClickToDialButton({\n  className,\n  onClickToDial,\n  disableLinks,\n  disableClickToDial,\n  phoneNumber,\n  title,\n}) {\n  return (\n    <Button\n      className={classnames(styles.call, className)}\n      onClick={onClickToDial}\n      disabled={disableLinks || disableClickToDial || !phoneNumber} >\n      <span\n        className={dynamicsFont.call}\n        title={title} />\n    </Button>\n  );\n}\nClickToDialButton.propTypes = {\n  className: PropTypes.string,\n  onClickToDial: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  phoneNumber: PropTypes.string,\n  title: PropTypes.string,\n};\nClickToDialButton.defaultProps = {\n  className: undefined,\n  onClickToDial: undefined,\n  disableLinks: false,\n  disableClickToDial: false,\n  phoneNumber: undefined,\n  title: undefined,\n};\n\nfunction ClickToSmsButton({\n  className,\n  onClickToSms,\n  disableLinks,\n  phoneNumber,\n  title,\n}) {\n  return (\n    <Button\n      className={classnames(styles.sms, className)}\n      onClick={onClickToSms}\n      disabled={disableLinks || !phoneNumber} >\n      <span\n        className={dynamicsFont.composeText}\n        title={title}/>\n    </Button>\n  );\n}\nClickToSmsButton.propTypes = {\n  className: PropTypes.string,\n  onClickToSms: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  phoneNumber: PropTypes.string,\n};\nClickToSmsButton.defaultProps = {\n  className: undefined,\n  onClickToSms: undefined,\n  disableLinks: false,\n  phoneNumber: undefined,\n};\n\nexport default class ActionMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      entityModalVisible: false,\n    };\n  }\n  onCreateEnityModal = (entityType) => {\n    this.props.onCreateEntity(entityType);\n    this.closeEntityModal();\n  }\n  onCancelEntityModal = () => {\n    this.closeEntityModal();\n  }\n  openEntityModal = () => {\n    this.setState({\n      entityModalVisible: true\n    });\n  }\n  closeEntityModal = () => {\n    this.setState({\n      entityModalVisible: false\n    });\n  }\n  captureClick = (e) => {\n    // e.captureClick = this.props.captureClick;\n    if (this.props.stopPropagation) {\n      e.stopPropagation();\n    }\n  }\n\n  render() {\n    const {\n      reference,\n      className,\n      currentLocale,\n      onLog,\n      isLogged,\n      isLogging,\n      isCreating,\n      onViewEntity,\n      onCreateEntity,\n      hasEntity,\n      onClickToDial,\n      onClickToSms,\n      phoneNumber,\n      disableLinks,\n      disableClickToDial,\n      addLogTitle,\n      editLogTitle,\n      callTitle,\n      textTitle,\n      createEntityTitle,\n      viewEntityTitle,\n    } = this.props;\n\n    const logButton = onLog ?\n      (\n        <LogButton\n          className={styles.baseGroup}\n          onLog={onLog}\n          disableLinks={disableLinks}\n          isLogged={isLogged}\n          isLogging={isLogging}\n          currentLocale={currentLocale}\n          addTitle={addLogTitle}\n          editTitle={editLogTitle}\n        />\n      ) :\n      null;\n\n    let entityButton;\n    if (hasEntity && onViewEntity) {\n      entityButton = (<EntityButton\n        className={classnames(styles.entity, styles.baseGroup)}\n        onViewEntity={onViewEntity}\n        hasEntity={hasEntity}\n        disableLinks={disableLinks}\n        viewEntityTitle={viewEntityTitle}\n      />);\n    } else if (!hasEntity && phoneNumber && onCreateEntity) {\n      entityButton = (<EntityButton\n        className={classnames(styles.entity, styles.baseGroup)}\n        onCreateEntity={this.openEntityModal}\n        hasEntity={hasEntity}\n        disableLinks={disableLinks}\n        createEntityTitle={createEntityTitle}\n      />);\n    } else {\n      entityButton = null;\n    }\n\n    const entityModal = (!hasEntity && phoneNumber) ?\n      (<EntityModal\n        currentLocale={currentLocale}\n        show={this.state.entityModalVisible}\n        onCreate={this.onCreateEnityModal}\n        onCancel={this.onCancelEntityModal}\n      />\n      ) : null;\n\n    const hasBaseGroup = !!(logButton || entityButton);\n\n    const clickToDialButton = onClickToDial ?\n      (\n        <ClickToDialButton\n          className={hasBaseGroup ? styles.secondGroup : styles.baseGroup}\n          onClickToDial={onClickToDial}\n          phoneNumber={phoneNumber}\n          disableLinks={disableLinks}\n          disableClickToDial={disableClickToDial}\n          currentLocale={currentLocale}\n          title={callTitle}\n        />\n      ) :\n      null;\n    const clickToSmsButton = onClickToSms ?\n      (\n        <ClickToSmsButton\n          className={hasBaseGroup ? styles.secondGroup : styles.baseGroup}\n          onClickToSms={onClickToSms}\n          phoneNumber={phoneNumber}\n          disableLinks={disableLinks}\n          currentLocale={currentLocale}\n          title={textTitle}\n        />\n      ) :\n      null;\n    const hasSecondGroup = hasBaseGroup && !!(clickToDialButton || clickToSmsButton);\n    if (hasSecondGroup) {\n      // slide menu\n      return (\n        <div\n          ref={reference}\n          onClick={this.captureClick}>\n          <SlideMenu\n            className={classnames(styles.root, className)}\n            minWidth={40}\n            maxWidth={75} >\n            {clickToDialButton}\n            {clickToSmsButton}\n            {entityButton}\n            {logButton}\n            {entityModal}\n          </SlideMenu>\n        </div>\n      );\n    } else if (\n      !clickToDialButton &&\n      !clickToSmsButton &&\n      !entityButton &&\n      !logButton\n    ) {\n      return null;\n    }\n    // no slide menu\n    return (\n      <div\n        ref={reference}\n        onClick={this.captureClick} >\n        <div className={classnames(styles.root, className)}>\n          {clickToDialButton}\n          {clickToSmsButton}\n          {entityButton}\n          {logButton}\n          {entityModal}\n        </div>\n      </div>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  reference: PropTypes.func,\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  onLog: PropTypes.func,\n  isLogged: PropTypes.bool,\n  isLogging: PropTypes.bool,\n  isCreating: PropTypes.bool,\n  onViewEntity: PropTypes.func,\n  onCreateEntity: PropTypes.func,\n  hasEntity: PropTypes.bool,\n  onClickToDial: PropTypes.func,\n  onClickToSms: PropTypes.func,\n  phoneNumber: PropTypes.string,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  stopPropagation: PropTypes.bool,\n  addLogTitle: PropTypes.string,\n  editLogTitle: PropTypes.string,\n  textTitle: PropTypes.string,\n  callTitle: PropTypes.string,\n  createEntityTitle: PropTypes.string,\n  viewEntityTitle: PropTypes.string,\n};\nActionMenu.defaultProps = {\n  reference: undefined,\n  className: undefined,\n  onLog: undefined,\n  isLogged: false,\n  isLogging: false,\n  isCreating: false,\n  onViewEntity: undefined,\n  onCreateEntity: undefined,\n  hasEntity: false,\n  onClickToDial: undefined,\n  onClickToSms: undefined,\n  phoneNumber: undefined,\n  disableLinks: false,\n  disableClickToDial: false,\n  stopPropagation: false,\n  addLogTitle: undefined,\n  editLogTitle: undefined,\n  textTitle: undefined,\n  callTitle: undefined,\n  createEntityTitle: undefined,\n  viewEntityTitle: undefined,\n};\n"]}