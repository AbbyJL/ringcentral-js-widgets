{"version":3,"sources":["components/SettingsPanel/index.js"],"names":["SettingsPanel","children","className","onLogoutButtonClick","loginNumber","version","currentLocale","brandId","EulaRenderer","onCallingSettingsLinkClick","onRegionSettingsLinkClick","onAudioSettingsLinkClick","showAutoLog","autoLogEnabled","onAutoLogChange","showAutoLogSMS","autoLogSMSEnabled","onAutoLogSMSChange","showClickToDial","clickToDialEnabled","onClickToDialChange","showRegion","showHeader","ringoutEnabled","outboundSMS","showSpinner","dndStatus","userStatus","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","isCallQueueMember","showPresenceSettings","additional","supportedLocales","savedLocale","saveLocale","locale","length","getString","region","presenceSetting","clickToDialText","clickToDial","autoLog","autoLogSMS","header","root","content","contentWithHeader","section","eula","logout","versionContainer","propTypes","string","isRequired","func","node","bool","arrayOf","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport Header from '../Header';\nimport Panel from '../Panel';\nimport Line from '../Line';\nimport LinkLine from '../LinkLine';\nimport IconLine from '../IconLine';\nimport Eula from '../Eula';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport PresenceSettingSection from '../PresenceSettingSection';\nimport styles from './styles.scss';\nimport Switch from '../Switch';\nimport InputLine from '../InputLine';\nimport LocalePicker from '../LocalePicker';\nimport i18n from './i18n';\n\n\nexport default function SettingsPanel({\n  children,\n  className,\n  onLogoutButtonClick,\n  loginNumber,\n  version,\n  currentLocale,\n  brandId,\n  EulaRenderer,\n  onCallingSettingsLinkClick,\n  onRegionSettingsLinkClick,\n  onAudioSettingsLinkClick,\n  showAutoLog,\n  autoLogEnabled,\n  onAutoLogChange,\n  showAutoLogSMS,\n  autoLogSMSEnabled,\n  onAutoLogSMSChange,\n  showClickToDial,\n  clickToDialEnabled,\n  onClickToDialChange,\n  showRegion,\n  showHeader,\n  ringoutEnabled,\n  outboundSMS,\n  showSpinner,\n  dndStatus,\n  userStatus,\n  setAvailable,\n  setBusy,\n  setDoNotDisturb,\n  setInvisible,\n  toggleAcceptCallQueueCalls,\n  isCallQueueMember,\n  showPresenceSettings,\n  additional,\n  supportedLocales,\n  savedLocale,\n  saveLocale,\n}) {\n  if (showSpinner) {\n    return (\n      <SpinnerOverlay />\n    );\n  }\n\n  const locale = supportedLocales && supportedLocales.length > 1 && (\n    <InputLine\n      label={i18n.getString('language', currentLocale)}\n    >\n      <LocalePicker\n        value={savedLocale}\n        onChange={saveLocale}\n        options={supportedLocales}\n      />\n    </InputLine>\n  );\n\n  const region = showRegion ?\n    (\n      <LinkLine\n        onClick={onRegionSettingsLinkClick} >\n        {i18n.getString('region', currentLocale)}\n      </LinkLine>\n    ) :\n    null;\n  const presenceSetting = (dndStatus && userStatus) ?\n    (\n      <PresenceSettingSection\n        currentLocale={currentLocale}\n        dndStatus={dndStatus}\n        userStatus={userStatus}\n        isCallQueueMember={isCallQueueMember}\n        setAvailable={setAvailable}\n        setBusy={setBusy}\n        setDoNotDisturb={setDoNotDisturb}\n        setInvisible={setInvisible}\n        toggleAcceptCallQueueCalls={toggleAcceptCallQueueCalls}\n        showPresenceSettings={showPresenceSettings}\n      />\n    ) :\n    null;\n  let clickToDialText;\n  if (outboundSMS && ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToDialSMS', currentLocale);\n  } else if (!outboundSMS && ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToDial', currentLocale);\n  } else if (outboundSMS && !ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToSMS', currentLocale);\n  } else {\n    clickToDialText = '';\n  }\n  const clickToDial = showClickToDial && (\n    outboundSMS || ringoutEnabled) ?\n    (\n      <IconLine\n        icon={\n          <Switch\n            checked={clickToDialEnabled}\n            onChange={onClickToDialChange}\n          />\n        }\n      >\n        {clickToDialText}\n      </IconLine>\n    ) :\n    null;\n  const autoLog = showAutoLog ? (\n    <IconLine\n      icon={\n        <Switch\n          checked={autoLogEnabled}\n          onChange={onAutoLogChange}\n        />\n      }\n    >\n      {i18n.getString('autoLogCalls', currentLocale)}\n    </IconLine>\n  ) :\n    null;\n  const autoLogSMS = showAutoLogSMS ? (\n    <IconLine\n      icon={\n        <Switch\n          checked={autoLogSMSEnabled}\n          onChange={onAutoLogSMSChange}\n        />\n      }\n    >\n      {i18n.getString('autoLogSMS', currentLocale)}\n    </IconLine>\n  ) :\n    null;\n  const header = showHeader ? (\n    <Header>\n      {i18n.getString('settings', currentLocale)}\n    </Header>\n  ) : null;\n  return (\n    <div className={classnames(styles.root, className)}>\n      {header}\n      <Panel\n        className={classnames(\n          styles.content,\n          showHeader && styles.contentWithHeader,\n        )}>\n        {locale}\n        <LinkLine\n          onClick={onCallingSettingsLinkClick} >\n          {i18n.getString('calling', currentLocale)}\n        </LinkLine>\n        {region}\n        <LinkLine\n          onClick={onAudioSettingsLinkClick} >\n          {i18n.getString('audio', currentLocale)}\n        </LinkLine>\n        {presenceSetting}\n        {children}\n        {autoLog}\n        {autoLogSMS}\n        {clickToDial}\n        {additional}\n        <section className={styles.section}>\n          <Line>\n            <EulaRenderer\n              className={styles.eula}\n              currentLocale={currentLocale}\n              brandId={brandId} />\n          </Line>\n        </section>\n        <section className={styles.section}>\n          <IconLine\n            onClick={onLogoutButtonClick}\n            icon={\n              <span className={dynamicsFont.logout} />\n            } >\n            {i18n.getString('logout', currentLocale)}\n            <span className={styles.loginNumber}>\n              {` ${loginNumber}`}\n            </span>\n          </IconLine>\n        </section>\n        <div className={styles.versionContainer} >\n          {i18n.getString('version', currentLocale)} {version}\n        </div>\n      </Panel>\n    </div>\n  );\n}\n\nSettingsPanel.propTypes = {\n  brandId: PropTypes.string.isRequired,\n  onCallingSettingsLinkClick: PropTypes.func.isRequired,\n  onAudioSettingsLinkClick: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  EulaRenderer: PropTypes.func,\n  loginNumber: PropTypes.string.isRequired,\n  onLogoutButtonClick: PropTypes.func.isRequired,\n  onRegionSettingsLinkClick: PropTypes.func.isRequired,\n  showAutoLog: PropTypes.bool,\n  autoLogEnabled: PropTypes.bool,\n  onAutoLogChange: PropTypes.func,\n  showAutoLogSMS: PropTypes.bool,\n  autoLogSMSEnabled: PropTypes.bool,\n  onAutoLogSMSChange: PropTypes.func,\n  showRegion: PropTypes.bool.isRequired,\n  showClickToDial: PropTypes.bool,\n  clickToDialEnabled: PropTypes.bool,\n  onClickToDialChange: PropTypes.func,\n  version: PropTypes.string.isRequired,\n  showHeader: PropTypes.bool,\n  ringoutEnabled: PropTypes.bool,\n  outboundSMS: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  dndStatus: PropTypes.string,\n  userStatus: PropTypes.string,\n  isCallQueueMember: PropTypes.bool,\n  setAvailable: PropTypes.func,\n  setBusy: PropTypes.func,\n  setDoNotDisturb: PropTypes.func,\n  setInvisible: PropTypes.func,\n  toggleAcceptCallQueueCalls: PropTypes.func,\n  showPresenceSettings: PropTypes.bool,\n  additional: PropTypes.node,\n  supportedLocales: PropTypes.arrayOf(PropTypes.string),\n  savedLocale: PropTypes.string,\n  saveLocale: PropTypes.func,\n};\nSettingsPanel.defaultProps = {\n  className: null,\n  EulaRenderer: Eula,\n  children: null,\n  showClickToDial: false,\n  clickToDialEnabled: false,\n  onClickToDialChange: undefined,\n  showAutoLog: false,\n  autoLogEnabled: false,\n  onAutoLogChange: undefined,\n  showAutoLogSMS: false,\n  autoLogSMSEnabled: false,\n  onAutoLogSMSChange: undefined,\n  showHeader: false,\n  ringoutEnabled: false,\n  outboundSMS: false,\n  showSpinner: false,\n  dndStatus: undefined,\n  userStatus: undefined,\n  isCallQueueMember: false,\n  setAvailable: () => null,\n  setBusy: () => null,\n  setDoNotDisturb: () => null,\n  setInvisible: () => null,\n  toggleAcceptCallQueueCalls: () => null,\n  showPresenceSettings: false,\n  additional: null,\n  supportedLocales: undefined,\n  savedLocale: undefined,\n  saveLocale: undefined,\n};\n"]}