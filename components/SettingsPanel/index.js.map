{"version":3,"sources":["components/SettingsPanel/index.js"],"names":["SettingsPanel","children","className","onLogoutButtonClick","loginNumber","version","currentLocale","brandId","EulaRenderer","onCallingSettingsLinkClick","onRegionSettingsLinkClick","onAudioSettingsLinkClick","onFeedbackSettingsLinkClick","onUserGuideClick","showCalling","showAutoLog","showAudio","autoLogEnabled","disableAutoLogEnabled","onAutoLogChange","showAutoLogSMS","autoLogSMSEnabled","onAutoLogSMSChange","showClickToDial","clickToDialEnabled","onClickToDialChange","showRegion","showHeader","ringoutEnabled","outboundSMS","showSpinner","dndStatus","userStatus","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","isCallQueueMember","showPresenceSettings","openPresenceSettings","showFeedback","showUserGuide","additional","supportedLocales","savedLocale","saveLocale","locale","length","getString","region","calling","audio","feedback","presenceSetting","clickToDialText","clickToDial","autoLog","autoLogSMS","header","userGuide","root","content","contentWithHeader","section","eula","logout","versionContainer","propTypes","string","isRequired","func","node","bool","arrayOf","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport Header from '../Header';\nimport Panel from '../Panel';\nimport Line from '../Line';\nimport LinkLine from '../LinkLine';\nimport IconLine from '../IconLine';\nimport Eula from '../Eula';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport PresenceSettingSection from '../PresenceSettingSection';\nimport styles from './styles.scss';\nimport Switch from '../Switch';\nimport InputLine from '../InputLine';\nimport LocalePicker from '../LocalePicker';\nimport i18n from './i18n';\n\n\nexport default function SettingsPanel({\n  children,\n  className,\n  onLogoutButtonClick,\n  loginNumber,\n  version,\n  currentLocale,\n  brandId,\n  EulaRenderer,\n  onCallingSettingsLinkClick,\n  onRegionSettingsLinkClick,\n  onAudioSettingsLinkClick,\n  onFeedbackSettingsLinkClick,\n  onUserGuideClick,\n  showCalling,\n  showAutoLog,\n  showAudio,\n  autoLogEnabled,\n  disableAutoLogEnabled,\n  onAutoLogChange,\n  showAutoLogSMS,\n  autoLogSMSEnabled,\n  onAutoLogSMSChange,\n  showClickToDial,\n  clickToDialEnabled,\n  onClickToDialChange,\n  showRegion,\n  showHeader,\n  ringoutEnabled,\n  outboundSMS,\n  showSpinner,\n  dndStatus,\n  userStatus,\n  setAvailable,\n  setBusy,\n  setDoNotDisturb,\n  setInvisible,\n  toggleAcceptCallQueueCalls,\n  isCallQueueMember,\n  showPresenceSettings,\n  openPresenceSettings,\n  showFeedback,\n  showUserGuide,\n  additional,\n  supportedLocales,\n  savedLocale,\n  saveLocale,\n}) {\n  if (showSpinner) {\n    return (\n      <SpinnerOverlay />\n    );\n  }\n\n  const locale = supportedLocales && supportedLocales.length > 1 && (\n    <InputLine\n      label={i18n.getString('language', currentLocale)}\n    >\n      <LocalePicker\n        value={savedLocale}\n        onChange={saveLocale}\n        options={supportedLocales}\n      />\n    </InputLine>\n  );\n\n  const region = showRegion ?\n    (\n      <LinkLine\n        onClick={onRegionSettingsLinkClick} >\n        {i18n.getString('region', currentLocale)}\n      </LinkLine>\n    ) :\n    null;\n\n  const calling = showCalling\n    ? (\n      <LinkLine\n        onClick={onCallingSettingsLinkClick} >\n        {i18n.getString('calling', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const audio = showAudio\n    ? (\n      <LinkLine\n        onClick={onAudioSettingsLinkClick} >\n        {i18n.getString('audio', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const feedback = showFeedback\n    ? (\n      <LinkLine\n        onClick={onFeedbackSettingsLinkClick} >\n        {i18n.getString('feedback', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const presenceSetting = (showPresenceSettings && dndStatus && userStatus) ?\n    (\n      <PresenceSettingSection\n        currentLocale={currentLocale}\n        dndStatus={dndStatus}\n        userStatus={userStatus}\n        isCallQueueMember={isCallQueueMember}\n        setAvailable={setAvailable}\n        setBusy={setBusy}\n        setDoNotDisturb={setDoNotDisturb}\n        setInvisible={setInvisible}\n        toggleAcceptCallQueueCalls={toggleAcceptCallQueueCalls}\n        showPresenceSettings={openPresenceSettings}\n      />\n    ) :\n    null;\n  let clickToDialText;\n  if (outboundSMS && ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToDialSMS', currentLocale);\n  } else if (!outboundSMS && ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToDial', currentLocale);\n  } else if (outboundSMS && !ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToSMS', currentLocale);\n  } else {\n    clickToDialText = '';\n  }\n  const clickToDial = showClickToDial && (\n    outboundSMS || ringoutEnabled) ?\n    (\n      <IconLine\n        icon={\n          <Switch\n            checked={clickToDialEnabled}\n            onChange={onClickToDialChange}\n          />\n        }\n      >\n        {clickToDialText}\n      </IconLine>\n    ) :\n    null;\n  const autoLog = showAutoLog ? (\n    <IconLine\n      icon={\n        <Switch\n          disable={disableAutoLogEnabled}\n          checked={autoLogEnabled}\n          onChange={onAutoLogChange}\n        />\n      }\n    >\n      {i18n.getString('autoLogCalls', currentLocale)}\n    </IconLine>\n  ) :\n    null;\n  const autoLogSMS = showAutoLogSMS ? (\n    <IconLine\n      icon={\n        <Switch\n          checked={autoLogSMSEnabled}\n          onChange={onAutoLogSMSChange}\n        />\n      }\n    >\n      {i18n.getString('autoLogSMS', currentLocale)}\n    </IconLine>\n  ) :\n    null;\n  const header = showHeader ? (\n    <Header>\n      {i18n.getString('settings', currentLocale)}\n    </Header>\n  ) : null;\n  const userGuide = showUserGuide ?  (\n    <LinkLine\n      onClick={onUserGuideClick} >\n      {i18n.getString('userGuide', currentLocale)}\n    </LinkLine>\n  ) : null;\n  return (\n    <div className={classnames(styles.root, className)}>\n      {header}\n      <Panel\n        className={classnames(\n          styles.content,\n          showHeader && styles.contentWithHeader,\n        )}>\n        {locale}\n        {calling}\n        {region}\n        {audio}\n        {presenceSetting}\n        {children}\n        {autoLog}\n        {autoLogSMS}\n        {clickToDial}\n        {additional}\n        {feedback}\n        {userGuide}\n        <section className={styles.section}>\n          <Line>\n            <EulaRenderer\n              className={styles.eula}\n              currentLocale={currentLocale}\n              brandId={brandId} />\n          </Line>\n        </section>\n        <section className={styles.section}>\n          <IconLine\n            onClick={onLogoutButtonClick}\n            icon={\n              <span className={dynamicsFont.logout} />\n            } >\n            {i18n.getString('logout', currentLocale)}\n            <span className={styles.loginNumber}>\n              {` ${loginNumber}`}\n            </span>\n          </IconLine>\n        </section>\n        <div className={styles.versionContainer} >\n          {i18n.getString('version', currentLocale)} {version}\n        </div>\n      </Panel>\n    </div>\n  );\n}\n\nSettingsPanel.propTypes = {\n  brandId: PropTypes.string.isRequired,\n  onCallingSettingsLinkClick: PropTypes.func.isRequired,\n  onAudioSettingsLinkClick: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  EulaRenderer: PropTypes.func,\n  loginNumber: PropTypes.string.isRequired,\n  onLogoutButtonClick: PropTypes.func.isRequired,\n  onRegionSettingsLinkClick: PropTypes.func.isRequired,\n  showCalling: PropTypes.bool,\n  showRegion: PropTypes.bool,\n  showAudio: PropTypes.bool,\n  showAutoLog: PropTypes.bool,\n  autoLogEnabled: PropTypes.bool,\n  disableAutoLogEnabled: PropTypes.bool,\n  onAutoLogChange: PropTypes.func,\n  showAutoLogSMS: PropTypes.bool,\n  autoLogSMSEnabled: PropTypes.bool,\n  onAutoLogSMSChange: PropTypes.func,\n  showClickToDial: PropTypes.bool,\n  clickToDialEnabled: PropTypes.bool,\n  onClickToDialChange: PropTypes.func,\n  version: PropTypes.string.isRequired,\n  showHeader: PropTypes.bool,\n  ringoutEnabled: PropTypes.bool,\n  outboundSMS: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  dndStatus: PropTypes.string,\n  userStatus: PropTypes.string,\n  isCallQueueMember: PropTypes.bool,\n  setAvailable: PropTypes.func,\n  setBusy: PropTypes.func,\n  setDoNotDisturb: PropTypes.func,\n  setInvisible: PropTypes.func,\n  toggleAcceptCallQueueCalls: PropTypes.func,\n  openPresenceSettings: PropTypes.bool,\n  showPresenceSettings: PropTypes.bool,\n  showFeedback: PropTypes.bool,\n  additional: PropTypes.node,\n  supportedLocales: PropTypes.arrayOf(PropTypes.string),\n  savedLocale: PropTypes.string,\n  saveLocale: PropTypes.func,\n  onFeedbackSettingsLinkClick: PropTypes.func.isRequired,\n  onUserGuideClick: PropTypes.func.isRequired,\n  showUserGuide: PropTypes.bool\n};\nSettingsPanel.defaultProps = {\n  className: null,\n  EulaRenderer: Eula,\n  children: null,\n  showClickToDial: false,\n  clickToDialEnabled: false,\n  onClickToDialChange: undefined,\n  showCalling: false,\n  showAudio: false,\n  showAutoLog: false,\n  showRegion: false,\n  showUserGuide: false,\n  autoLogEnabled: false,\n  disableAutoLogEnabled: false,\n  onAutoLogChange: undefined,\n  showAutoLogSMS: false,\n  autoLogSMSEnabled: false,\n  onAutoLogSMSChange: undefined,\n  showHeader: false,\n  ringoutEnabled: false,\n  outboundSMS: false,\n  showSpinner: false,\n  dndStatus: undefined,\n  userStatus: undefined,\n  isCallQueueMember: false,\n  setAvailable: () => null,\n  setBusy: () => null,\n  setDoNotDisturb: () => null,\n  setInvisible: () => null,\n  toggleAcceptCallQueueCalls: () => null,\n  openPresenceSettings: false,\n  showPresenceSettings: true,\n  additional: null,\n  supportedLocales: undefined,\n  savedLocale: undefined,\n  saveLocale: undefined,\n  showFeedback: true,\n};\n"]}