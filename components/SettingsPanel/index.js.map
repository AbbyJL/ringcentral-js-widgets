{"version":3,"sources":["components/SettingsPanel/index.js"],"names":["SettingsPanel","children","className","onLogoutButtonClick","loginNumber","version","currentLocale","brandId","EulaRenderer","onCallingSettingsLinkClick","onRegionSettingsLinkClick","onAudioSettingsLinkClick","onFeedbackSettingsLinkClick","showCalling","showAutoLog","showAudio","autoLogEnabled","onAutoLogChange","showAutoLogSMS","autoLogSMSEnabled","onAutoLogSMSChange","showClickToDial","clickToDialEnabled","onClickToDialChange","showRegion","showHeader","ringoutEnabled","outboundSMS","showSpinner","dndStatus","userStatus","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","isCallQueueMember","showPresenceSettings","showAudioSettings","showFeedback","additional","supportedLocales","savedLocale","saveLocale","locale","length","getString","region","calling","audio","feedback","presenceSetting","clickToDialText","clickToDial","autoLog","autoLogSMS","header","root","content","contentWithHeader","section","eula","logout","versionContainer","propTypes","string","isRequired","func","node","bool","arrayOf","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport Header from '../Header';\nimport Panel from '../Panel';\nimport Line from '../Line';\nimport LinkLine from '../LinkLine';\nimport IconLine from '../IconLine';\nimport Eula from '../Eula';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport PresenceSettingSection from '../PresenceSettingSection';\nimport styles from './styles.scss';\nimport Switch from '../Switch';\nimport InputLine from '../InputLine';\nimport LocalePicker from '../LocalePicker';\nimport i18n from './i18n';\n\n\nexport default function SettingsPanel({\n  children,\n  className,\n  onLogoutButtonClick,\n  loginNumber,\n  version,\n  currentLocale,\n  brandId,\n  EulaRenderer,\n  onCallingSettingsLinkClick,\n  onRegionSettingsLinkClick,\n  onAudioSettingsLinkClick,\n  onFeedbackSettingsLinkClick,\n  showCalling,\n  showAutoLog,\n  showAudio,\n  autoLogEnabled,\n  onAutoLogChange,\n  showAutoLogSMS,\n  autoLogSMSEnabled,\n  onAutoLogSMSChange,\n  showClickToDial,\n  clickToDialEnabled,\n  onClickToDialChange,\n  showRegion,\n  showHeader,\n  ringoutEnabled,\n  outboundSMS,\n  showSpinner,\n  dndStatus,\n  userStatus,\n  setAvailable,\n  setBusy,\n  setDoNotDisturb,\n  setInvisible,\n  toggleAcceptCallQueueCalls,\n  isCallQueueMember,\n  showPresenceSettings,\n  showAudioSettings,\n  showFeedback,\n  additional,\n  supportedLocales,\n  savedLocale,\n  saveLocale,\n}) {\n  if (showSpinner) {\n    return (\n      <SpinnerOverlay />\n    );\n  }\n\n  const locale = supportedLocales && supportedLocales.length > 1 && (\n    <InputLine\n      label={i18n.getString('language', currentLocale)}\n    >\n      <LocalePicker\n        value={savedLocale}\n        onChange={saveLocale}\n        options={supportedLocales}\n      />\n    </InputLine>\n  );\n\n  const region = showRegion ?\n    (\n      <LinkLine\n        onClick={onRegionSettingsLinkClick} >\n        {i18n.getString('region', currentLocale)}\n      </LinkLine>\n    ) :\n    null;\n\n  const calling = showCalling\n    ? (\n      <LinkLine\n        onClick={onCallingSettingsLinkClick} >\n        {i18n.getString('calling', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const audio = showAudio\n    ? (\n      <LinkLine\n        onClick={onAudioSettingsLinkClick} >\n        {i18n.getString('audio', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const feedback = showFeedback\n    ? (\n      <LinkLine\n        onClick={onFeedbackSettingsLinkClick} >\n        {i18n.getString('feedback', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const presenceSetting = (dndStatus && userStatus) ?\n    (\n      <PresenceSettingSection\n        currentLocale={currentLocale}\n        dndStatus={dndStatus}\n        userStatus={userStatus}\n        isCallQueueMember={isCallQueueMember}\n        setAvailable={setAvailable}\n        setBusy={setBusy}\n        setDoNotDisturb={setDoNotDisturb}\n        setInvisible={setInvisible}\n        toggleAcceptCallQueueCalls={toggleAcceptCallQueueCalls}\n        showPresenceSettings={showPresenceSettings}\n      />\n    ) :\n    null;\n  let clickToDialText;\n  if (outboundSMS && ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToDialSMS', currentLocale);\n  } else if (!outboundSMS && ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToDial', currentLocale);\n  } else if (outboundSMS && !ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToSMS', currentLocale);\n  } else {\n    clickToDialText = '';\n  }\n  const clickToDial = showClickToDial && (\n    outboundSMS || ringoutEnabled) ?\n    (\n      <IconLine\n        icon={\n          <Switch\n            checked={clickToDialEnabled}\n            onChange={onClickToDialChange}\n          />\n        }\n      >\n        {clickToDialText}\n      </IconLine>\n    ) :\n    null;\n  const autoLog = showAutoLog ? (\n    <IconLine\n      icon={\n        <Switch\n          checked={autoLogEnabled}\n          onChange={onAutoLogChange}\n        />\n      }\n    >\n      {i18n.getString('autoLogCalls', currentLocale)}\n    </IconLine>\n  ) :\n    null;\n  const autoLogSMS = showAutoLogSMS ? (\n    <IconLine\n      icon={\n        <Switch\n          checked={autoLogSMSEnabled}\n          onChange={onAutoLogSMSChange}\n        />\n      }\n    >\n      {i18n.getString('autoLogSMS', currentLocale)}\n    </IconLine>\n  ) :\n    null;\n  const header = showHeader ? (\n    <Header>\n      {i18n.getString('settings', currentLocale)}\n    </Header>\n  ) : null;\n  return (\n    <div className={classnames(styles.root, className)}>\n      {header}\n      <Panel\n        className={classnames(\n          styles.content,\n          showHeader && styles.contentWithHeader,\n        )}>\n        {locale}\n        {calling}\n        {region}\n        {audio}\n        {presenceSetting}\n        {children}\n        {autoLog}\n        {autoLogSMS}\n        {clickToDial}\n        {additional}\n        {feedback}\n        <section className={styles.section}>\n          <Line>\n            <EulaRenderer\n              className={styles.eula}\n              currentLocale={currentLocale}\n              brandId={brandId} />\n          </Line>\n        </section>\n        <section className={styles.section}>\n          <IconLine\n            onClick={onLogoutButtonClick}\n            icon={\n              <span className={dynamicsFont.logout} />\n            } >\n            {i18n.getString('logout', currentLocale)}\n            <span className={styles.loginNumber}>\n              {` ${loginNumber}`}\n            </span>\n          </IconLine>\n        </section>\n        <div className={styles.versionContainer} >\n          {i18n.getString('version', currentLocale)} {version}\n        </div>\n      </Panel>\n    </div>\n  );\n}\n\nSettingsPanel.propTypes = {\n  brandId: PropTypes.string.isRequired,\n  onCallingSettingsLinkClick: PropTypes.func.isRequired,\n  onAudioSettingsLinkClick: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  EulaRenderer: PropTypes.func,\n  loginNumber: PropTypes.string.isRequired,\n  onLogoutButtonClick: PropTypes.func.isRequired,\n  onRegionSettingsLinkClick: PropTypes.func.isRequired,\n  showCalling: PropTypes.bool,\n  showRegion: PropTypes.bool,\n  showAudio: PropTypes.bool,\n  showAutoLog: PropTypes.bool,\n  autoLogEnabled: PropTypes.bool,\n  onAutoLogChange: PropTypes.func,\n  showAutoLogSMS: PropTypes.bool,\n  autoLogSMSEnabled: PropTypes.bool,\n  onAutoLogSMSChange: PropTypes.func,\n  showClickToDial: PropTypes.bool,\n  clickToDialEnabled: PropTypes.bool,\n  onClickToDialChange: PropTypes.func,\n  version: PropTypes.string.isRequired,\n  showHeader: PropTypes.bool,\n  ringoutEnabled: PropTypes.bool,\n  outboundSMS: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  dndStatus: PropTypes.string,\n  userStatus: PropTypes.string,\n  isCallQueueMember: PropTypes.bool,\n  setAvailable: PropTypes.func,\n  setBusy: PropTypes.func,\n  setDoNotDisturb: PropTypes.func,\n  setInvisible: PropTypes.func,\n  toggleAcceptCallQueueCalls: PropTypes.func,\n  showPresenceSettings: PropTypes.bool,\n  showAudioSettings: PropTypes.bool,\n  showFeedback: PropTypes.bool,\n  additional: PropTypes.node,\n  supportedLocales: PropTypes.arrayOf(PropTypes.string),\n  savedLocale: PropTypes.string,\n  saveLocale: PropTypes.func,\n  onFeedbackSettingsLinkClick: PropTypes.func.isRequired,\n};\nSettingsPanel.defaultProps = {\n  className: null,\n  EulaRenderer: Eula,\n  children: null,\n  showClickToDial: false,\n  clickToDialEnabled: false,\n  onClickToDialChange: undefined,\n  showCalling: false,\n  showAudio: false,\n  showAutoLog: false,\n  showRegion: false,\n  autoLogEnabled: false,\n  onAutoLogChange: undefined,\n  showAutoLogSMS: false,\n  autoLogSMSEnabled: false,\n  onAutoLogSMSChange: undefined,\n  showHeader: false,\n  ringoutEnabled: false,\n  outboundSMS: false,\n  showSpinner: false,\n  dndStatus: undefined,\n  userStatus: undefined,\n  isCallQueueMember: false,\n  setAvailable: () => null,\n  setBusy: () => null,\n  setDoNotDisturb: () => null,\n  setInvisible: () => null,\n  toggleAcceptCallQueueCalls: () => null,\n  showPresenceSettings: false,\n  showAudioSettings: true,\n  additional: null,\n  supportedLocales: undefined,\n  savedLocale: undefined,\n  saveLocale: undefined,\n  showFeedback: true,\n};\n"]}