{"version":3,"sources":["components/SettingsPanel/index.js"],"names":["SettingsPanel","children","className","onLogoutButtonClick","loginNumber","version","currentLocale","brandId","EulaRenderer","onCallingSettingsLinkClick","onRegionSettingsLinkClick","onAudioSettingsLinkClick","showAutoLog","autoLogEnabled","onAutoLogChange","showAutoLogSMS","autoLogSMSEnabled","onAutoLogSMSChange","showClickToDial","clickToDialEnabled","onClickToDialChange","showRegion","showHeader","ringoutEnabled","outboundSMS","showSpinner","dndStatus","userStatus","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","isCallQueueMember","showPresenceSettings","additional","region","getString","presenceSetting","clickToDialText","clickToDial","autoLog","autoLogSMS","header","root","content","contentWithHeader","section","eula","logout","versionContainer","propTypes","string","isRequired","func","node","bool","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport Header from '../Header';\nimport Panel from '../Panel';\nimport Line from '../Line';\nimport LinkLine from '../LinkLine';\nimport IconLine from '../IconLine';\nimport Eula from '../Eula';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport PresenceSettingSection from '../PresenceSettingSection';\nimport styles from './styles.scss';\nimport Switch from '../Switch';\nimport i18n from './i18n';\n\nexport default function SettingsPanel({\n  children,\n  className,\n  onLogoutButtonClick,\n  loginNumber,\n  version,\n  currentLocale,\n  brandId,\n  EulaRenderer,\n  onCallingSettingsLinkClick,\n  onRegionSettingsLinkClick,\n  onAudioSettingsLinkClick,\n  showAutoLog,\n  autoLogEnabled,\n  onAutoLogChange,\n  showAutoLogSMS,\n  autoLogSMSEnabled,\n  onAutoLogSMSChange,\n  showClickToDial,\n  clickToDialEnabled,\n  onClickToDialChange,\n  showRegion,\n  showHeader,\n  ringoutEnabled,\n  outboundSMS,\n  showSpinner,\n  dndStatus,\n  userStatus,\n  setAvailable,\n  setBusy,\n  setDoNotDisturb,\n  setInvisible,\n  toggleAcceptCallQueueCalls,\n  isCallQueueMember,\n  showPresenceSettings,\n  additional,\n}) {\n  if (showSpinner) {\n    return (\n      <SpinnerOverlay />\n    );\n  }\n  const region = showRegion ?\n    (\n      <LinkLine\n        onClick={onRegionSettingsLinkClick} >\n        {i18n.getString('region', currentLocale)}\n      </LinkLine>\n    ) :\n    null;\n  const presenceSetting = (dndStatus && userStatus) ?\n    (\n      <PresenceSettingSection\n        currentLocale={currentLocale}\n        dndStatus={dndStatus}\n        userStatus={userStatus}\n        isCallQueueMember={isCallQueueMember}\n        setAvailable={setAvailable}\n        setBusy={setBusy}\n        setDoNotDisturb={setDoNotDisturb}\n        setInvisible={setInvisible}\n        toggleAcceptCallQueueCalls={toggleAcceptCallQueueCalls}\n        showPresenceSettings={showPresenceSettings}\n      />\n    ) :\n    null;\n  let clickToDialText;\n  if (outboundSMS && ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToDialSMS', currentLocale);\n  } else if (!outboundSMS && ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToDial', currentLocale);\n  } else if (outboundSMS && !ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToSMS', currentLocale);\n  } else {\n    clickToDialText = '';\n  }\n  const clickToDial = showClickToDial && (\n    outboundSMS || ringoutEnabled) ?\n    (\n      <IconLine\n        icon={\n          <Switch\n            checked={clickToDialEnabled}\n            onChange={onClickToDialChange}\n          />\n        }\n      >\n        {clickToDialText}\n      </IconLine>\n    ) :\n    null;\n  const autoLog = showAutoLog ? (\n    <IconLine\n      icon={\n        <Switch\n          checked={autoLogEnabled}\n          onChange={onAutoLogChange}\n        />\n      }\n    >\n      {i18n.getString('autoLogCalls', currentLocale)}\n    </IconLine>\n  ) :\n    null;\n  const autoLogSMS = showAutoLogSMS ? (\n    <IconLine\n      icon={\n        <Switch\n          checked={autoLogSMSEnabled}\n          onChange={onAutoLogSMSChange}\n        />\n      }\n    >\n      {i18n.getString('autoLogSMS', currentLocale)}\n    </IconLine>\n  ) :\n    null;\n  const header = showHeader ? (\n    <Header>\n      {i18n.getString('settings', currentLocale)}\n    </Header>\n  ) : null;\n  return (\n    <div className={classnames(styles.root, className)}>\n      {header}\n      <Panel\n        className={classnames(\n          styles.content,\n          showHeader && styles.contentWithHeader,\n        )}>\n        <LinkLine\n          onClick={onCallingSettingsLinkClick} >\n          {i18n.getString('calling', currentLocale)}\n        </LinkLine>\n        {region}\n        <LinkLine\n          onClick={onAudioSettingsLinkClick} >\n          {i18n.getString('audio', currentLocale)}\n        </LinkLine>\n        {presenceSetting}\n        {children}\n        {autoLog}\n        {autoLogSMS}\n        {clickToDial}\n        {additional}\n        <section className={styles.section}>\n          <Line>\n            <EulaRenderer\n              className={styles.eula}\n              currentLocale={currentLocale}\n              brandId={brandId} />\n          </Line>\n        </section>\n        <section className={styles.section}>\n          <IconLine\n            onClick={onLogoutButtonClick}\n            icon={\n              <span className={dynamicsFont.logout} />\n            } >\n            {i18n.getString('logout', currentLocale)}\n            <span className={styles.loginNumber}>\n              {` ${loginNumber}`}\n            </span>\n          </IconLine>\n        </section>\n        <div className={styles.versionContainer} >\n          {i18n.getString('version', currentLocale)} {version}\n        </div>\n      </Panel>\n    </div>\n  );\n}\n\nSettingsPanel.propTypes = {\n  brandId: PropTypes.string.isRequired,\n  onCallingSettingsLinkClick: PropTypes.func.isRequired,\n  onAudioSettingsLinkClick: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  EulaRenderer: PropTypes.func,\n  loginNumber: PropTypes.string.isRequired,\n  onLogoutButtonClick: PropTypes.func.isRequired,\n  onRegionSettingsLinkClick: PropTypes.func.isRequired,\n  showAutoLog: PropTypes.bool,\n  autoLogEnabled: PropTypes.bool,\n  onAutoLogChange: PropTypes.func,\n  showAutoLogSMS: PropTypes.bool,\n  autoLogSMSEnabled: PropTypes.bool,\n  onAutoLogSMSChange: PropTypes.func,\n  showRegion: PropTypes.bool.isRequired,\n  showClickToDial: PropTypes.bool,\n  clickToDialEnabled: PropTypes.bool,\n  onClickToDialChange: PropTypes.func,\n  version: PropTypes.string.isRequired,\n  showHeader: PropTypes.bool,\n  ringoutEnabled: PropTypes.bool,\n  outboundSMS: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  dndStatus: PropTypes.string,\n  userStatus: PropTypes.string,\n  isCallQueueMember: PropTypes.bool,\n  setAvailable: PropTypes.func,\n  setBusy: PropTypes.func,\n  setDoNotDisturb: PropTypes.func,\n  setInvisible: PropTypes.func,\n  toggleAcceptCallQueueCalls: PropTypes.func,\n  showPresenceSettings: PropTypes.bool,\n  additional: PropTypes.node,\n};\nSettingsPanel.defaultProps = {\n  className: null,\n  EulaRenderer: Eula,\n  children: null,\n  showClickToDial: false,\n  clickToDialEnabled: false,\n  onClickToDialChange: undefined,\n  showAutoLog: false,\n  autoLogEnabled: false,\n  onAutoLogChange: undefined,\n  showAutoLogSMS: false,\n  autoLogSMSEnabled: false,\n  onAutoLogSMSChange: undefined,\n  showHeader: false,\n  ringoutEnabled: false,\n  outboundSMS: false,\n  showSpinner: false,\n  dndStatus: undefined,\n  userStatus: undefined,\n  isCallQueueMember: false,\n  setAvailable: () => null,\n  setBusy: () => null,\n  setDoNotDisturb: () => null,\n  setInvisible: () => null,\n  toggleAcceptCallQueueCalls: () => null,\n  showPresenceSettings: false,\n  additional: null,\n};\n"]}