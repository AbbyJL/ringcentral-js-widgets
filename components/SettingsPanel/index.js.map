{"version":3,"sources":["components/SettingsPanel/index.js"],"names":["SettingsPanel","children","className","onLogoutButtonClick","loginNumber","version","currentLocale","brandId","EulaRenderer","onCallingSettingsLinkClick","onRegionSettingsLinkClick","onAudioSettingsLinkClick","onFeedbackSettingsLinkClick","showCalling","showAutoLog","showAudio","autoLogEnabled","onAutoLogChange","showAutoLogSMS","autoLogSMSEnabled","onAutoLogSMSChange","showClickToDial","clickToDialEnabled","onClickToDialChange","showRegion","showHeader","ringoutEnabled","outboundSMS","showSpinner","dndStatus","userStatus","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","isCallQueueMember","showPresenceSettings","showFeedback","additional","supportedLocales","savedLocale","saveLocale","locale","length","getString","region","calling","audio","feedback","presenceSetting","clickToDialText","clickToDial","autoLog","autoLogSMS","header","root","content","contentWithHeader","section","eula","logout","versionContainer","propTypes","string","isRequired","func","node","bool","arrayOf","defaultProps","undefined"],"mappings":";;;;;kBAoBwBA,a;;AApBxB;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGe,SAASA,aAAT,OA2CZ;AAAA,MA1CDC,QA0CC,QA1CDA,QA0CC;AAAA,MAzCDC,SAyCC,QAzCDA,SAyCC;AAAA,MAxCDC,mBAwCC,QAxCDA,mBAwCC;AAAA,MAvCDC,WAuCC,QAvCDA,WAuCC;AAAA,MAtCDC,OAsCC,QAtCDA,OAsCC;AAAA,MArCDC,aAqCC,QArCDA,aAqCC;AAAA,MApCDC,OAoCC,QApCDA,OAoCC;AAAA,MAnCDC,YAmCC,QAnCDA,YAmCC;AAAA,MAlCDC,0BAkCC,QAlCDA,0BAkCC;AAAA,MAjCDC,yBAiCC,QAjCDA,yBAiCC;AAAA,MAhCDC,wBAgCC,QAhCDA,wBAgCC;AAAA,MA/BDC,2BA+BC,QA/BDA,2BA+BC;AAAA,MA9BDC,WA8BC,QA9BDA,WA8BC;AAAA,MA7BDC,WA6BC,QA7BDA,WA6BC;AAAA,MA5BDC,SA4BC,QA5BDA,SA4BC;AAAA,MA3BDC,cA2BC,QA3BDA,cA2BC;AAAA,MA1BDC,eA0BC,QA1BDA,eA0BC;AAAA,MAzBDC,cAyBC,QAzBDA,cAyBC;AAAA,MAxBDC,iBAwBC,QAxBDA,iBAwBC;AAAA,MAvBDC,kBAuBC,QAvBDA,kBAuBC;AAAA,MAtBDC,eAsBC,QAtBDA,eAsBC;AAAA,MArBDC,kBAqBC,QArBDA,kBAqBC;AAAA,MApBDC,mBAoBC,QApBDA,mBAoBC;AAAA,MAnBDC,UAmBC,QAnBDA,UAmBC;AAAA,MAlBDC,UAkBC,QAlBDA,UAkBC;AAAA,MAjBDC,cAiBC,QAjBDA,cAiBC;AAAA,MAhBDC,WAgBC,QAhBDA,WAgBC;AAAA,MAfDC,WAeC,QAfDA,WAeC;AAAA,MAdDC,SAcC,QAdDA,SAcC;AAAA,MAbDC,UAaC,QAbDA,UAaC;AAAA,MAZDC,YAYC,QAZDA,YAYC;AAAA,MAXDC,OAWC,QAXDA,OAWC;AAAA,MAVDC,eAUC,QAVDA,eAUC;AAAA,MATDC,YASC,QATDA,YASC;AAAA,MARDC,0BAQC,QARDA,0BAQC;AAAA,MAPDC,iBAOC,QAPDA,iBAOC;AAAA,MANDC,oBAMC,QANDA,oBAMC;AAAA,MALDC,YAKC,QALDA,YAKC;AAAA,MAJDC,UAIC,QAJDA,UAIC;AAAA,MAHDC,gBAGC,QAHDA,gBAGC;AAAA,MAFDC,WAEC,QAFDA,WAEC;AAAA,MADDC,UACC,QADDA,UACC;;AACD,MAAId,WAAJ,EAAiB;AACf,WACE,6DADF;AAGD;;AAED,MAAMe,SAASH,oBAAoBA,iBAAiBI,MAAjB,GAA0B,CAA9C,IACb;AAAA;AAAA;AACE,aAAO,eAAKC,SAAL,CAAe,UAAf,EAA2BvC,aAA3B;AADT;AAGE;AACE,aAAOmC,WADT;AAEE,gBAAUC,UAFZ;AAGE,eAASF;AAHX;AAHF,GADF;;AAYA,MAAMM,SAAStB,aAEX;AAAA;AAAA;AACE,eAASd,yBADX;AAEG,mBAAKmC,SAAL,CAAe,QAAf,EAAyBvC,aAAzB;AAFH,GAFW,GAOb,IAPF;;AASA,MAAMyC,UAAUlC,cAEZ;AAAA;AAAA;AACE,eAASJ,0BADX;AAEG,mBAAKoC,SAAL,CAAe,SAAf,EAA0BvC,aAA1B;AAFH,GAFY,GAOZ,IAPJ;AAQA,MAAM0C,QAAQjC,YAEV;AAAA;AAAA;AACE,eAASJ,wBADX;AAEG,mBAAKkC,SAAL,CAAe,OAAf,EAAwBvC,aAAxB;AAFH,GAFU,GAOV,IAPJ;AAQA,MAAM2C,WAAWX,eAEb;AAAA;AAAA;AACE,eAAS1B,2BADX;AAEG,mBAAKiC,SAAL,CAAe,UAAf,EAA2BvC,aAA3B;AAFH,GAFa,GAOb,IAPJ;AAQA,MAAM4C,kBAAmBrB,aAAaC,UAAd,GAEpB;AACE,mBAAexB,aADjB;AAEE,eAAWuB,SAFb;AAGE,gBAAYC,UAHd;AAIE,uBAAmBM,iBAJrB;AAKE,kBAAcL,YALhB;AAME,aAASC,OANX;AAOE,qBAAiBC,eAPnB;AAQE,kBAAcC,YARhB;AASE,gCAA4BC,0BAT9B;AAUE,0BAAsBE;AAVxB,IAFoB,GAetB,IAfF;AAgBA,MAAIc,wBAAJ;AACA,MAAIxB,eAAeD,cAAnB,EAAmC;AACjCyB,sBAAkB,eAAKN,SAAL,CAAe,gBAAf,EAAiCvC,aAAjC,CAAlB;AACD,GAFD,MAEO,IAAI,CAACqB,WAAD,IAAgBD,cAApB,EAAoC;AACzCyB,sBAAkB,eAAKN,SAAL,CAAe,aAAf,EAA8BvC,aAA9B,CAAlB;AACD,GAFM,MAEA,IAAIqB,eAAe,CAACD,cAApB,EAAoC;AACzCyB,sBAAkB,eAAKN,SAAL,CAAe,YAAf,EAA6BvC,aAA7B,CAAlB;AACD,GAFM,MAEA;AACL6C,sBAAkB,EAAlB;AACD;AACD,MAAMC,cAAc/B,oBAClBM,eAAeD,cADG,IAGhB;AAAA;AAAA;AACE,YACE;AACE,iBAASJ,kBADX;AAEE,kBAAUC;AAFZ;AAFJ;AAQG4B;AARH,GAHgB,GAclB,IAdF;AAeA,MAAME,UAAUvC,cACd;AAAA;AAAA;AACE,YACE;AACE,iBAASE,cADX;AAEE,kBAAUC;AAFZ;AAFJ;AAQG,mBAAK4B,SAAL,CAAe,cAAf,EAA+BvC,aAA/B;AARH,GADc,GAYd,IAZF;AAaA,MAAMgD,aAAapC,iBACjB;AAAA;AAAA;AACE,YACE;AACE,iBAASC,iBADX;AAEE,kBAAUC;AAFZ;AAFJ;AAQG,mBAAKyB,SAAL,CAAe,YAAf,EAA6BvC,aAA7B;AARH,GADiB,GAYjB,IAZF;AAaA,MAAMiD,SAAS9B,aACb;AAAA;AAAA;AACG,mBAAKoB,SAAL,CAAe,UAAf,EAA2BvC,aAA3B;AADH,GADa,GAIX,IAJJ;AAKA,SACE;AAAA;AAAA,MAAK,WAAW,0BAAW,iBAAOkD,IAAlB,EAAwBtD,SAAxB,CAAhB;AACGqD,UADH;AAEE;AAAA;AAAA;AACE,mBAAW,0BACT,iBAAOE,OADE,EAEThC,cAAc,iBAAOiC,iBAFZ,CADb;AAKGf,YALH;AAMGI,aANH;AAOGD,YAPH;AAQGE,WARH;AASGE,qBATH;AAUGjD,cAVH;AAWGoD,aAXH;AAYGC,gBAZH;AAaGF,iBAbH;AAcGb,gBAdH;AAeGU,cAfH;AAgBE;AAAA;AAAA,UAAS,WAAW,iBAAOU,OAA3B;AACE;AAAA;AAAA;AACE,wCAAC,YAAD;AACE,uBAAW,iBAAOC,IADpB;AAEE,2BAAetD,aAFjB;AAGE,qBAASC,OAHX;AADF;AADF,OAhBF;AAwBE;AAAA;AAAA,UAAS,WAAW,iBAAOoD,OAA3B;AACE;AAAA;AAAA;AACE,qBAASxD,mBADX;AAEE,kBACE,wCAAM,WAAW,uBAAa0D,MAA9B,GAHJ;AAKG,yBAAKhB,SAAL,CAAe,QAAf,EAAyBvC,aAAzB,CALH;AAME;AAAA;AAAA,cAAM,WAAW,iBAAOF,WAAxB;AAAA,kBACOA;AADP;AANF;AADF,OAxBF;AAoCE;AAAA;AAAA,UAAK,WAAW,iBAAO0D,gBAAvB;AACG,uBAAKjB,SAAL,CAAe,SAAf,EAA0BvC,aAA1B,CADH;AAAA;AAC8CD;AAD9C;AApCF;AAFF,GADF;AA6CD;;AAEDL,cAAc+D,SAAd,GAA0B;AACxBxD,WAAS,oBAAUyD,MAAV,CAAiBC,UADF;AAExBxD,8BAA4B,oBAAUyD,IAAV,CAAeD,UAFnB;AAGxBtD,4BAA0B,oBAAUuD,IAAV,CAAeD,UAHjB;AAIxBhE,YAAU,oBAAUkE,IAJI;AAKxBjE,aAAW,oBAAU8D,MALG;AAMxB1D,iBAAe,oBAAU0D,MAAV,CAAiBC,UANR;AAOxBzD,gBAAc,oBAAU0D,IAPA;AAQxB9D,eAAa,oBAAU4D,MAAV,CAAiBC,UARN;AASxB9D,uBAAqB,oBAAU+D,IAAV,CAAeD,UATZ;AAUxBvD,6BAA2B,oBAAUwD,IAAV,CAAeD,UAVlB;AAWxBpD,eAAa,oBAAUuD,IAXC;AAYxB5C,cAAY,oBAAU4C,IAZE;AAaxBrD,aAAW,oBAAUqD,IAbG;AAcxBtD,eAAa,oBAAUsD,IAdC;AAexBpD,kBAAgB,oBAAUoD,IAfF;AAgBxBnD,mBAAiB,oBAAUiD,IAhBH;AAiBxBhD,kBAAgB,oBAAUkD,IAjBF;AAkBxBjD,qBAAmB,oBAAUiD,IAlBL;AAmBxBhD,sBAAoB,oBAAU8C,IAnBN;AAoBxB7C,mBAAiB,oBAAU+C,IApBH;AAqBxB9C,sBAAoB,oBAAU8C,IArBN;AAsBxB7C,uBAAqB,oBAAU2C,IAtBP;AAuBxB7D,WAAS,oBAAU2D,MAAV,CAAiBC,UAvBF;AAwBxBxC,cAAY,oBAAU2C,IAxBE;AAyBxB1C,kBAAgB,oBAAU0C,IAzBF;AA0BxBzC,eAAa,oBAAUyC,IA1BC;AA2BxBxC,eAAa,oBAAUwC,IA3BC;AA4BxBvC,aAAW,oBAAUmC,MA5BG;AA6BxBlC,cAAY,oBAAUkC,MA7BE;AA8BxB5B,qBAAmB,oBAAUgC,IA9BL;AA+BxBrC,gBAAc,oBAAUmC,IA/BA;AAgCxBlC,WAAS,oBAAUkC,IAhCK;AAiCxBjC,mBAAiB,oBAAUiC,IAjCH;AAkCxBhC,gBAAc,oBAAUgC,IAlCA;AAmCxB/B,8BAA4B,oBAAU+B,IAnCd;AAoCxB7B,wBAAsB,oBAAU+B,IApCR;AAqCxB9B,gBAAc,oBAAU8B,IArCA;AAsCxB7B,cAAY,oBAAU4B,IAtCE;AAuCxB3B,oBAAkB,oBAAU6B,OAAV,CAAkB,oBAAUL,MAA5B,CAvCM;AAwCxBvB,eAAa,oBAAUuB,MAxCC;AAyCxBtB,cAAY,oBAAUwB,IAzCE;AA0CxBtD,+BAA6B,oBAAUsD,IAAV,CAAeD;AA1CpB,CAA1B;AA4CAjE,cAAcsE,YAAd,GAA6B;AAC3BpE,aAAW,IADgB;AAE3BM,8BAF2B;AAG3BP,YAAU,IAHiB;AAI3BoB,mBAAiB,KAJU;AAK3BC,sBAAoB,KALO;AAM3BC,uBAAqBgD,SANM;AAO3B1D,eAAa,KAPc;AAQ3BE,aAAW,KARgB;AAS3BD,eAAa,KATc;AAU3BU,cAAY,KAVe;AAW3BR,kBAAgB,KAXW;AAY3BC,mBAAiBsD,SAZU;AAa3BrD,kBAAgB,KAbW;AAc3BC,qBAAmB,KAdQ;AAe3BC,sBAAoBmD,SAfO;AAgB3B9C,cAAY,KAhBe;AAiB3BC,kBAAgB,KAjBW;AAkB3BC,eAAa,KAlBc;AAmB3BC,eAAa,KAnBc;AAoB3BC,aAAW0C,SApBgB;AAqB3BzC,cAAYyC,SArBe;AAsB3BnC,qBAAmB,KAtBQ;AAuB3BL,gBAAc;AAAA,WAAM,IAAN;AAAA,GAvBa;AAwB3BC,WAAS;AAAA,WAAM,IAAN;AAAA,GAxBkB;AAyB3BC,mBAAiB;AAAA,WAAM,IAAN;AAAA,GAzBU;AA0B3BC,gBAAc;AAAA,WAAM,IAAN;AAAA,GA1Ba;AA2B3BC,8BAA4B;AAAA,WAAM,IAAN;AAAA,GA3BD;AA4B3BE,wBAAsB,KA5BK;AA6B3BE,cAAY,IA7Be;AA8B3BC,oBAAkB+B,SA9BS;AA+B3B9B,eAAa8B,SA/Bc;AAgC3B7B,cAAY6B,SAhCe;AAiC3BjC,gBAAc;AAjCa,CAA7B","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport Header from '../Header';\nimport Panel from '../Panel';\nimport Line from '../Line';\nimport LinkLine from '../LinkLine';\nimport IconLine from '../IconLine';\nimport Eula from '../Eula';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport PresenceSettingSection from '../PresenceSettingSection';\nimport styles from './styles.scss';\nimport Switch from '../Switch';\nimport InputLine from '../InputLine';\nimport LocalePicker from '../LocalePicker';\nimport i18n from './i18n';\n\n\nexport default function SettingsPanel({\n  children,\n  className,\n  onLogoutButtonClick,\n  loginNumber,\n  version,\n  currentLocale,\n  brandId,\n  EulaRenderer,\n  onCallingSettingsLinkClick,\n  onRegionSettingsLinkClick,\n  onAudioSettingsLinkClick,\n  onFeedbackSettingsLinkClick,\n  showCalling,\n  showAutoLog,\n  showAudio,\n  autoLogEnabled,\n  onAutoLogChange,\n  showAutoLogSMS,\n  autoLogSMSEnabled,\n  onAutoLogSMSChange,\n  showClickToDial,\n  clickToDialEnabled,\n  onClickToDialChange,\n  showRegion,\n  showHeader,\n  ringoutEnabled,\n  outboundSMS,\n  showSpinner,\n  dndStatus,\n  userStatus,\n  setAvailable,\n  setBusy,\n  setDoNotDisturb,\n  setInvisible,\n  toggleAcceptCallQueueCalls,\n  isCallQueueMember,\n  showPresenceSettings,\n  showFeedback,\n  additional,\n  supportedLocales,\n  savedLocale,\n  saveLocale,\n}) {\n  if (showSpinner) {\n    return (\n      <SpinnerOverlay />\n    );\n  }\n\n  const locale = supportedLocales && supportedLocales.length > 1 && (\n    <InputLine\n      label={i18n.getString('language', currentLocale)}\n    >\n      <LocalePicker\n        value={savedLocale}\n        onChange={saveLocale}\n        options={supportedLocales}\n      />\n    </InputLine>\n  );\n\n  const region = showRegion ?\n    (\n      <LinkLine\n        onClick={onRegionSettingsLinkClick} >\n        {i18n.getString('region', currentLocale)}\n      </LinkLine>\n    ) :\n    null;\n\n  const calling = showCalling\n    ? (\n      <LinkLine\n        onClick={onCallingSettingsLinkClick} >\n        {i18n.getString('calling', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const audio = showAudio\n    ? (\n      <LinkLine\n        onClick={onAudioSettingsLinkClick} >\n        {i18n.getString('audio', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const feedback = showFeedback\n    ? (\n      <LinkLine\n        onClick={onFeedbackSettingsLinkClick} >\n        {i18n.getString('feedback', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const presenceSetting = (dndStatus && userStatus) ?\n    (\n      <PresenceSettingSection\n        currentLocale={currentLocale}\n        dndStatus={dndStatus}\n        userStatus={userStatus}\n        isCallQueueMember={isCallQueueMember}\n        setAvailable={setAvailable}\n        setBusy={setBusy}\n        setDoNotDisturb={setDoNotDisturb}\n        setInvisible={setInvisible}\n        toggleAcceptCallQueueCalls={toggleAcceptCallQueueCalls}\n        showPresenceSettings={showPresenceSettings}\n      />\n    ) :\n    null;\n  let clickToDialText;\n  if (outboundSMS && ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToDialSMS', currentLocale);\n  } else if (!outboundSMS && ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToDial', currentLocale);\n  } else if (outboundSMS && !ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToSMS', currentLocale);\n  } else {\n    clickToDialText = '';\n  }\n  const clickToDial = showClickToDial && (\n    outboundSMS || ringoutEnabled) ?\n    (\n      <IconLine\n        icon={\n          <Switch\n            checked={clickToDialEnabled}\n            onChange={onClickToDialChange}\n          />\n        }\n      >\n        {clickToDialText}\n      </IconLine>\n    ) :\n    null;\n  const autoLog = showAutoLog ? (\n    <IconLine\n      icon={\n        <Switch\n          checked={autoLogEnabled}\n          onChange={onAutoLogChange}\n        />\n      }\n    >\n      {i18n.getString('autoLogCalls', currentLocale)}\n    </IconLine>\n  ) :\n    null;\n  const autoLogSMS = showAutoLogSMS ? (\n    <IconLine\n      icon={\n        <Switch\n          checked={autoLogSMSEnabled}\n          onChange={onAutoLogSMSChange}\n        />\n      }\n    >\n      {i18n.getString('autoLogSMS', currentLocale)}\n    </IconLine>\n  ) :\n    null;\n  const header = showHeader ? (\n    <Header>\n      {i18n.getString('settings', currentLocale)}\n    </Header>\n  ) : null;\n  return (\n    <div className={classnames(styles.root, className)}>\n      {header}\n      <Panel\n        className={classnames(\n          styles.content,\n          showHeader && styles.contentWithHeader,\n        )}>\n        {locale}\n        {calling}\n        {region}\n        {audio}\n        {presenceSetting}\n        {children}\n        {autoLog}\n        {autoLogSMS}\n        {clickToDial}\n        {additional}\n        {feedback}\n        <section className={styles.section}>\n          <Line>\n            <EulaRenderer\n              className={styles.eula}\n              currentLocale={currentLocale}\n              brandId={brandId} />\n          </Line>\n        </section>\n        <section className={styles.section}>\n          <IconLine\n            onClick={onLogoutButtonClick}\n            icon={\n              <span className={dynamicsFont.logout} />\n            } >\n            {i18n.getString('logout', currentLocale)}\n            <span className={styles.loginNumber}>\n              {` ${loginNumber}`}\n            </span>\n          </IconLine>\n        </section>\n        <div className={styles.versionContainer} >\n          {i18n.getString('version', currentLocale)} {version}\n        </div>\n      </Panel>\n    </div>\n  );\n}\n\nSettingsPanel.propTypes = {\n  brandId: PropTypes.string.isRequired,\n  onCallingSettingsLinkClick: PropTypes.func.isRequired,\n  onAudioSettingsLinkClick: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  EulaRenderer: PropTypes.func,\n  loginNumber: PropTypes.string.isRequired,\n  onLogoutButtonClick: PropTypes.func.isRequired,\n  onRegionSettingsLinkClick: PropTypes.func.isRequired,\n  showCalling: PropTypes.bool,\n  showRegion: PropTypes.bool,\n  showAudio: PropTypes.bool,\n  showAutoLog: PropTypes.bool,\n  autoLogEnabled: PropTypes.bool,\n  onAutoLogChange: PropTypes.func,\n  showAutoLogSMS: PropTypes.bool,\n  autoLogSMSEnabled: PropTypes.bool,\n  onAutoLogSMSChange: PropTypes.func,\n  showClickToDial: PropTypes.bool,\n  clickToDialEnabled: PropTypes.bool,\n  onClickToDialChange: PropTypes.func,\n  version: PropTypes.string.isRequired,\n  showHeader: PropTypes.bool,\n  ringoutEnabled: PropTypes.bool,\n  outboundSMS: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  dndStatus: PropTypes.string,\n  userStatus: PropTypes.string,\n  isCallQueueMember: PropTypes.bool,\n  setAvailable: PropTypes.func,\n  setBusy: PropTypes.func,\n  setDoNotDisturb: PropTypes.func,\n  setInvisible: PropTypes.func,\n  toggleAcceptCallQueueCalls: PropTypes.func,\n  showPresenceSettings: PropTypes.bool,\n  showFeedback: PropTypes.bool,\n  additional: PropTypes.node,\n  supportedLocales: PropTypes.arrayOf(PropTypes.string),\n  savedLocale: PropTypes.string,\n  saveLocale: PropTypes.func,\n  onFeedbackSettingsLinkClick: PropTypes.func.isRequired,\n};\nSettingsPanel.defaultProps = {\n  className: null,\n  EulaRenderer: Eula,\n  children: null,\n  showClickToDial: false,\n  clickToDialEnabled: false,\n  onClickToDialChange: undefined,\n  showCalling: false,\n  showAudio: false,\n  showAutoLog: false,\n  showRegion: false,\n  autoLogEnabled: false,\n  onAutoLogChange: undefined,\n  showAutoLogSMS: false,\n  autoLogSMSEnabled: false,\n  onAutoLogSMSChange: undefined,\n  showHeader: false,\n  ringoutEnabled: false,\n  outboundSMS: false,\n  showSpinner: false,\n  dndStatus: undefined,\n  userStatus: undefined,\n  isCallQueueMember: false,\n  setAvailable: () => null,\n  setBusy: () => null,\n  setDoNotDisturb: () => null,\n  setInvisible: () => null,\n  toggleAcceptCallQueueCalls: () => null,\n  showPresenceSettings: false,\n  additional: null,\n  supportedLocales: undefined,\n  savedLocale: undefined,\n  saveLocale: undefined,\n  showFeedback: true,\n};\n"]}