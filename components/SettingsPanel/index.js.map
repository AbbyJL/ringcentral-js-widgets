{"version":3,"sources":["components/SettingsPanel/index.js"],"names":["SettingsPanel","children","className","onLogoutButtonClick","loginNumber","version","currentLocale","brandId","EulaRenderer","callingSettingsUrl","regionSettingsUrl","showAutoLog","autoLogEnabled","onAutoLogChange","showClickToDial","clickToDialEnabled","onClickToDialChange","showRegion","region","getString","clickToDial","autoLog","root","content","RC_Logout","eulaContainer","eula","propTypes","string","isRequired","node","func","bool","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport classnames from 'classnames';\n\nimport rcFont from '../../assets/RcFont/RcFont.scss';\nimport Header from '../Header';\nimport Panel from '../Panel';\nimport Line from '../Line';\nimport LinkLine from '../LinkLine';\nimport IconLine from '../IconLine';\nimport Eula from '../Eula';\nimport styles from './styles.scss';\nimport Switch from '../Switch';\nimport i18n from './i18n';\n\nexport default function SettingsPanel({\n  children,\n  className,\n  onLogoutButtonClick,\n  loginNumber,\n  version,\n  currentLocale,\n  brandId,\n  EulaRenderer,\n  callingSettingsUrl,\n  regionSettingsUrl,\n  showAutoLog,\n  autoLogEnabled,\n  onAutoLogChange,\n  showClickToDial,\n  clickToDialEnabled,\n  onClickToDialChange,\n  showRegion,\n}) {\n  const region = showRegion ?\n    (\n      <LinkLine\n        to={regionSettingsUrl} >\n        {i18n.getString('region')}\n      </LinkLine>\n    ) :\n    null;\n  const clickToDial = showClickToDial ?\n    (\n      <IconLine\n        icon={\n          <Switch\n            checked={clickToDialEnabled}\n            onChange={onClickToDialChange}\n            />\n        }\n        >\n        {i18n.getString('clickToDial')}\n      </IconLine>\n    ) :\n    null;\n  const autoLog = showAutoLog ? (\n    <IconLine\n      icon={\n        <Switch\n          checked={autoLogEnabled}\n          onChange={onAutoLogChange}\n          />\n      }\n      >\n      {i18n.getString('autoCreateLog')}\n    </IconLine>\n  ) :\n    null;\n  return (\n    <div className={classnames(styles.root, className)}>\n      <Header>\n        {i18n.getString('settings')}\n      </Header>\n      <Panel className={styles.content}>\n        <LinkLine\n          to={callingSettingsUrl}\n          >\n          {i18n.getString('calling')}\n        </LinkLine>\n        {region}\n        {children}\n        {autoLog}\n        {clickToDial}\n        <IconLine\n          onClick={onLogoutButtonClick}\n          icon={<span className={rcFont.RC_Logout} />}\n          >\n          {i18n.getString('logout')} {loginNumber}\n        </IconLine>\n        <Line>\n          {i18n.getString('version')} {version}\n        </Line>\n        <div className={styles.eulaContainer} >\n          <EulaRenderer\n            className={styles.eula}\n            currentLocale={currentLocale}\n            brandId={brandId}\n            />\n        </div>\n      </Panel>\n    </div>\n  );\n}\n\nSettingsPanel.propTypes = {\n  brandId: PropTypes.string.isRequired,\n  callingSettingsUrl: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  EulaRenderer: PropTypes.func,\n  loginNumber: PropTypes.string.isRequired,\n  onLogoutButtonClick: PropTypes.func.isRequired,\n  regionSettingsUrl: PropTypes.string.isRequired,\n  showAutoLog: PropTypes.bool,\n  autoLogEnabled: PropTypes.bool,\n  onAutoLogChange: PropTypes.func,\n  showRegion: PropTypes.bool.isRequired,\n  showClickToDial: PropTypes.bool,\n  clickToDialEnabled: PropTypes.bool,\n  onClickToDialChange: PropTypes.func,\n  version: PropTypes.string.isRequired,\n};\nSettingsPanel.defaultProps = {\n  className: null,\n  EulaRenderer: Eula,\n  children: null,\n  showClickToDial: false,\n  clickToDialEnabled: false,\n  onClickToDialChange: () => {},\n  showAutoLog: false,\n  autoLogEnabled: false,\n  onAutoLogChange: () => {},\n};\n"]}