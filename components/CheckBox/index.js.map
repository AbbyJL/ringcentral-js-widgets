{"version":3,"sources":["components/CheckBox/index.js"],"names":["CheckBox","data","selected","onSelect","valueField","textField","className","isListObject","map","item","key","isSelected","checkStyle","styles","selectedCheckButton","onClick","checkButton","text","propTypes","PropTypes","string","any","isRequired","array","func","defaultProps"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,QAAT,OASE;AAAA,MAPEC,IAOF,QAPEA,IAOF;AAAA,MANEC,QAMF,QANEA,QAMF;AAAA,MALEC,QAKF,QALEA,QAKF;AAAA,MAJEC,UAIF,QAJEA,UAIF;AAAA,MAHEC,SAGF,QAHEA,SAGF;AAAA,MAFEC,SAEF,QAFEA,SAEF;;AACA,MAAMC,eAAe,CAAC,EAAEF,aAAaD,UAAf,CAAtB;AACA,SACE;AAAA;AAAA,MAAK,WAAWE,SAAhB;AAEIL,SAAKO,GAAL,CAAS,UAACC,IAAD,EAAOC,GAAP,EAAe;AACtB,UAAMC,aAAaT,cAAcK,eAAeE,KAAKL,UAAL,CAAf,GAAkCK,IAAhD,CAAnB;AACA,UAAMG,aAAaD,aAAaE,iBAAOC,mBAApB,GAA0C,IAA7D;AACA,UAAMC,UAAU,SAAVA,OAAU;AAAA,eAAMZ,SAASM,IAAT,CAAN;AAAA,OAAhB;AACA,aACE;AAAA;AAAA,UAAK,SAASM,OAAd,EAAuB,WAAWF,iBAAOJ,IAAzC,EAA+C,KAAKC,GAApD;AACE,+CAAK,WAAW,0BAAWG,iBAAOG,WAAlB,EAA+BJ,UAA/B,CAAhB,GADF;AAEE;AAAA;AAAA,YAAK,WAAWC,iBAAOI,IAAvB;AACIV,yBAAeE,KAAKJ,SAAL,CAAf,GAAiCI;AADrC;AAFF,OADF;AAQD,KAZD;AAFJ,GADF;AAmBD;;AAEDT,SAASkB,SAAT,GAAqB;AACnBd,cAAYe,oBAAUC,MADH;AAEnBf,aAAWc,oBAAUC,MAFF;AAGnBlB,YAAUiB,oBAAUE,GAAV,CAAcC,UAHL;AAInBrB,QAAMkB,oBAAUI,KAAV,CAAgBD,UAJH;AAKnBnB,YAAUgB,oBAAUK,IAAV,CAAeF,UALN;AAMnBhB,aAAWa,oBAAUC;AANF,CAArB;;AASApB,SAASyB,YAAT,GAAwB;AACtBpB,aAAW,IADW;AAEtBD,cAAY,IAFU;AAGtBE,aAAW;AAHW,CAAxB;;kBAMeN,Q","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nfunction CheckBox(\n  {\n    data,\n    selected,\n    onSelect,\n    valueField,\n    textField,\n    className\n  }\n) {\n  const isListObject = !!(textField && valueField);\n  return (\n    <div className={className}>\n      {\n        data.map((item, key) => {\n          const isSelected = selected === (isListObject ? item[valueField] : item);\n          const checkStyle = isSelected ? styles.selectedCheckButton : null;\n          const onClick = () => onSelect(item);\n          return (\n            <div onClick={onClick} className={styles.item} key={key}>\n              <div className={classnames(styles.checkButton, checkStyle)} />\n              <div className={styles.text}>\n                { isListObject ? item[textField] : item }\n              </div>\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n}\n\nCheckBox.propTypes = {\n  valueField: PropTypes.string,\n  textField: PropTypes.string,\n  selected: PropTypes.any.isRequired,\n  data: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nCheckBox.defaultProps = {\n  textField: null,\n  valueField: null,\n  className: null,\n};\n\nexport default CheckBox;\n"]}