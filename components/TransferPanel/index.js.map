{"version":3,"sources":["components/TransferPanel/index.js"],"names":["TransferPanel","props","onButtonOutput","key","setState","preState","value","onTransfer","state","clearText","handleChange","event","target","showClearButton","display","isButtonDisabled","isOnTransfer","root","toggleTransferPanel","backButton","arrow","backIcon","getString","currentLocale","dialInput","input","clear","padContainer","dialPad","buttonRow","button","propTypes","func","isRequired","string","bool"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DialPad from '../DialPad';\nimport BackHeader from '../BackHeader';\nimport ActiveCallButton from '../ActiveCallButton';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport TransferIcon from '../../assets/images/Transfer.svg';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class TransferPanel extends PureComponent {\n  static propTypes = {\n    onTransfer: PropTypes.func.isRequired,\n    currentLocale: PropTypes.string.isRequired,\n    toggleTransferPanel: PropTypes.func.isRequired,\n    isOnTransfer: PropTypes.bool.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n    };\n  }\n\n  onButtonOutput = (key) => {\n    this.setState((preState) => {\n      const value = preState.value + key;\n      return { value };\n    });\n  }\n\n  onTransfer = () => {\n    this.props.onTransfer(this.state.value);\n  }\n\n  clearText = () => {\n    this.setState({\n      value: ''\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const showClearButton = this.state.value === '' ? { display: 'none' } : { display: 'block' };\n    const isButtonDisabled = this.state.value === '' || this.props.isOnTransfer;\n    return (\n      <div className={styles.root}>\n        <BackHeader\n          onBackClick={this.props.toggleTransferPanel}\n          backButton={(\n            <span className={styles.backButton}>\n              <i className={classnames(dynamicsFont.arrow, styles.backIcon)} />\n            </span>\n          )}\n          buttons={[]}\n        >\n          {i18n.getString('transferTo', this.props.currentLocale)}\n        </BackHeader>\n        <div className={styles.dialInput}>\n          <label>\n            {i18n.getString('to', this.props.currentLocale)}\n          </label>\n          <input\n            className={styles.input}\n            onChange={this.handleChange}\n            value={this.state.value}\n          />\n          <span\n            style={showClearButton}\n            className={classnames(styles.clear, dynamicsFont.clear)}\n            onClick={this.clearText}\n          />\n        </div>\n        <div className={styles.padContainer}>\n          <DialPad\n            className={styles.dialPad}\n            onButtonOutput={this.onButtonOutput}\n          />\n          <div className={styles.buttonRow}>\n            <ActiveCallButton\n              onClick={this.onTransfer}\n              className={styles.button}\n              icon={TransferIcon}\n              title={i18n.getString('blindTransfer', this.props.currentLocale)}\n              disabled={isButtonDisabled}\n              showBorder\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]}