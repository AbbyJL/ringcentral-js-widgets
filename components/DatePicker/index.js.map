{"version":3,"sources":["components/DatePicker/index.js"],"names":["DatePicker","props","_handleDocumentClick","e","mounted","date","contains","target","open","setState","onClickFunc","document","querySelector","openState","state","window","addEventListener","removeEventListener","collapseDatePicker","Moment","locale","currentLocale","dueDate","Date","toISOString","showDate","format","styles","datePicker","datePickerClassName","ref","currentStartTime","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","onChange","dateText","dateTextClassName","label","Component","propTypes","PropTypes","string","instanceOf","func","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport styles from './styles.scss';\n\nexport default class DatePicker extends Component {\n  constructor(props) {\n    super(props);\n    Moment.locale(this.props.currentLocale);\n    momentLocalizer();\n    this.state = {\n      open: false\n    };\n  }\n  componentDidMount() {\n    this.mounted = true;\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n    window.removeEventListener('click', this._handleDocumentClick, false);\n  }\n  _handleDocumentClick = (e) => {\n    if (!this.mounted) {\n      return;\n    }\n    if (this.date && this.date.contains(e.target)) {\n      return;\n    }\n    const open = false;\n    this.setState({\n      open\n    });\n  }\n  onClickFunc = () => {\n    const open = !!document.querySelector('.rw-open');\n    const openState = !open ? 'date' : false;\n    if (!this.state.open) {\n      window.addEventListener('click', this._handleDocumentClick, false);\n    } else {\n      window.removeEventListener('click', this._handleDocumentClick, false);\n    }\n    this.setState({\n      open: openState\n    });\n  }\n  collapseDatePicker = () => {\n    this.setState({\n      open: false\n    });\n  }\n  render() {\n    const {\n      currentLocale,\n    } = this.props;\n    const dueDate = new Date().toISOString();\n    const showDate = this.props.date ? Moment(this.props.date).format('MM/DD/YY') : '';\n    return (\n      <div\n        className={classnames(styles.datePicker, this.props.datePickerClassName)}\n        ref={(ref) => { this.date = ref; }}\n      >\n        <DateTimePicker\n          className=\"dateTimePicker\"\n          culture={currentLocale}\n          time={false}\n          open={this.state.open}\n          value={this.props.date}\n          onChange={(currentStartTime) => {\n            if (currentStartTime) {\n              const date = new Date(dueDate);\n              date.setFullYear(currentStartTime.getFullYear());\n              date.setMonth(currentStartTime.getMonth());\n              date.setDate(currentStartTime.getDate());\n              this.props.onChange(date);\n            }\n            this.collapseDatePicker();\n          }}\n          format=\"MM/DD/YY\"\n          min={new Date()}\n          onToggle={() => {}}\n        />\n        <div\n          onClick={() => this.onClickFunc()}\n          className={classnames(styles.dateText, this.props.dateTextClassName)}>\n          {`${this.props.label}: ${showDate}`}\n        </div>\n      </div>\n    );\n  }\n}\nDatePicker.propTypes = {\n  currentLocale: PropTypes.string,\n  label: PropTypes.string,\n  date: PropTypes.instanceOf(Date),\n  onChange: PropTypes.func,\n  datePickerClassName: PropTypes.string,\n  dateTextClassName: PropTypes.string,\n};\nDatePicker.defaultProps = {\n  currentLocale: 'en-US',\n  label: '',\n  date: null,\n  onChange: undefined,\n  datePickerClassName: '',\n  dateTextClassName: ''\n};\n"]}