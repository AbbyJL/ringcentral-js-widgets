{"version":3,"sources":["components/MeetingPanel/index.js"],"names":["MINUTE_SCALE","HOUR_SCALE","getMinutesList","Array","fill","map","_","key","value","text","slice","getHoursList","Error","minutesList","hoursList","Topic","update","currentLocale","meeting","inline","label","getString","input","topic","target","length","propTypes","func","isRequired","string","object","When","isRecurring","that","onToggle","minTime","dateTimeBox","list","datePicker","Date","schedule","startTime","getTime","ref","date","dateTimeText","dateText","format","dateIcon","icon","timePicker","time","timeInput","hours","parseInt","setHours","setTimeout","colon","minutes","setMinutes","timeIcon","bool","Duration","spaceBetween","duration","durationInMinutes","restMinutes","isMax","restHours","RecurringMeeting","section","isCheckRecurring","meetingType","recurringDescribe","Video","labelLight","fixTopMargin","startHostVideo","startParticipantsVideo","AudioOptions","data","audioOptions","split","join","array","MeetingOptions","_requireMeetingPassword","password","focus","passwordBox","test","allowJoinBeforeHost","MeetingPanel","args","props","init","locale","hidden","disabled","invite","ScheduleButton","scheduleButton","type","_values","open","refs","inner","close","toggle","telephonyOnly","voIPOnly","both","AUDIO_OPTIONS","min","meetingPanel","scroll","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\nimport DropdownList from 'react-widgets/lib/DropdownList';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport DateIcon from '../../assets/images/Date.svg';\nimport TimeIcon from '../../assets/images/Time.svg';\n\nimport styles from './styles.scss';\nimport Switch from '../Switch';\nimport CheckBox from '../CheckBox';\nimport i18n from './i18n';\nimport MeetingSection from '../MeetingSection';\n\n\nconst MINUTE_SCALE = 4;\nconst HOUR_SCALE = 13;\n\nfunction getMinutesList(MINUTE_SCALE) {\n  return new Array(MINUTE_SCALE).fill(0).map((_, key) => {\n    const value = 60 / MINUTE_SCALE * key;\n    const text = `${(`${value}0`).slice(0, 2)} m.`;\n    return {\n      value,\n      text\n    };\n  });\n}\n\nfunction getHoursList(HOUR_SCALE) {\n  if (HOUR_SCALE > 23) {\n    throw new Error('HOUR_SCALE must be less than 23.');\n  }\n  return new Array(HOUR_SCALE).fill(0).map((_, value) => {\n    const text = `${(`0${value}0`).slice(-3, -1)} h.`;\n    return {\n      value,\n      text\n    };\n  });\n}\n\nconst minutesList = getMinutesList(MINUTE_SCALE);\nconst hoursList = getHoursList(HOUR_SCALE);\n\nconst Topic = ({ update, currentLocale, meeting }) => (\n  <MeetingSection hideTopBorderLine>\n    <div className={styles.inline}>\n      <span className={styles.label}>\n        {i18n.getString('topic', currentLocale)}\n      </span>\n      <input\n        type=\"text\"\n        className={styles.input}\n        defaultValue={meeting.topic || ''}\n        onChange={({ target }) => {\n          const topic = target.value;\n          if (topic.length >= 0 && topic.length < 128) {\n            update({\n              ...meeting,\n              topic,\n            });\n          } else {\n            target.value = meeting.topic || '';\n          }\n        }} />\n    </div>\n  </MeetingSection>\n);\n\nTopic.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n};\n\nconst When = (\n  {\n    isRecurring,\n    currentLocale,\n    meeting,\n    update,\n    that,\n    onToggle,\n    minTime\n  }\n) => (\n  !isRecurring ? (\n    <MeetingSection title={i18n.getString('when', currentLocale)}>\n      <div className={styles.dateTimeBox}>\n        <div className={styles.list}>\n          <div className={styles.datePicker}>\n            <DateTimePicker\n              culture={currentLocale}\n              time={false}\n              value={new Date(meeting.schedule.startTime)}\n              onChange={(startTime) => {\n                if (startTime) {\n                  update({\n                    ...meeting,\n                    schedule: {\n                      ...meeting.schedule,\n                      startTime: startTime.getTime(),\n                    }\n                  });\n                }\n              }}\n              ref={(ref) => { that.date = ref; }}\n              format=\"MM/DD/YY\"\n              min={new Date()}\n            />\n            <div\n              onClick={() => onToggle('date')}\n              className={classnames(styles.dateTimeText, styles.dateText)}>\n              {Moment(meeting.schedule.startTime).format('MM/DD/YY')}\n            </div>\n          </div>\n          <div className={styles.dateIcon}>\n            <DateIcon\n              onClick={() => onToggle('date')}\n              className={styles.icon} />\n          </div>\n        </div>\n        <div className={styles.list}>\n          <div className={styles.timePicker}>\n            <DateTimePicker\n              culture=\"en\"\n              date={false}\n              ref={(ref) => { that.time = ref; }}\n              value={new Date(meeting.schedule.startTime)}\n              onChange={(startTime) => {\n                if (startTime) {\n                  update({\n                    ...meeting,\n                    schedule: {\n                      ...meeting.schedule,\n                      startTime: startTime.getTime(),\n                    }\n                  });\n                }\n              }}\n              format=\"hh:mm A\"\n              {...minTime}\n            />\n            <div className={styles.dateTimeText}>\n              <input\n                className={styles.timeInput}\n                defaultValue={Moment(meeting.schedule.startTime).format('HH')}\n                onBlur={({ target }) => {\n                  const hours = parseInt(target.value, 10);\n                  const time = new Date(meeting.schedule.startTime);\n                  time.setHours(hours);\n                  const startTime = time.getTime();\n                  if (startTime >= (new Date()).getTime() && hours < 24 && hours > 0) {\n                    setTimeout(() => {\n                      target.value = Moment(startTime).format('HH');\n                    });\n                    update({\n                      ...meeting,\n                      schedule: {\n                        ...meeting.schedule,\n                        startTime,\n                      }\n                    });\n                  } else {\n                    target.value = Moment(meeting.schedule.startTime).format('HH');\n                  }\n                }}\n                maxLength={2}\n                type=\"text\" />\n              <div className={styles.colon}>{':'}</div>\n              <input\n                className={styles.timeInput}\n                defaultValue={Moment(meeting.schedule.startTime).format('mm')}\n                onBlur={({ target }) => {\n                  const minutes = parseInt(target.value, 10);\n                  const time = new Date(meeting.schedule.startTime);\n                  time.setMinutes(minutes);\n                  const startTime = time.getTime();\n                  if (startTime >= (new Date()).getTime() && minutes < 60 && minutes > 0) {\n                    setTimeout(() => {\n                      target.value = Moment(startTime).format('mm');\n                    });\n                    update({\n                      ...meeting,\n                      schedule: {\n                        ...meeting.schedule,\n                        startTime,\n                      }\n                    });\n                  } else {\n                    target.value = Moment(meeting.schedule.startTime).format('mm');\n                  }\n                }}\n                maxLength={2}\n                type=\"text\" />\n            </div>\n          </div>\n          <div className={styles.timeIcon}>\n            <TimeIcon\n              className={styles.icon} />\n          </div>\n        </div>\n      </div>\n    </MeetingSection>\n  ) : null\n);\n\nWhen.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n  isRecurring: PropTypes.bool.isRequired,\n  that: PropTypes.object.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  minTime: PropTypes.object.isRequired,\n};\n\nconst Duration = (\n  {\n    isRecurring,\n    currentLocale,\n    meeting,\n    update\n  }\n) => (\n  !isRecurring ? (\n    <MeetingSection title={i18n.getString('duration', currentLocale)}>\n      <div className={classnames(styles.spaceBetween, styles.duration)}>\n        <div className={styles.list}>\n          <div className={styles.hoursList}>\n            <DropdownList\n              data={hoursList}\n              valueField=\"value\"\n              textField=\"text\"\n              value={parseInt((meeting.schedule.durationInMinutes / 60), 10)}\n              onChange={({ value }) => {\n                let restMinutes = meeting.schedule.durationInMinutes % 60;\n                const isMax = value === hoursList.slice(-1)[0].value;\n                restMinutes = isMax ? 0 : restMinutes;\n                const durationInMinutes = value * 60 + restMinutes;\n                update({\n                  ...meeting,\n                  schedule: {\n                    ...meeting.schedule,\n                    durationInMinutes,\n                  }\n                });\n              }} />\n          </div>\n        </div>\n        <div className={styles.list}>\n          <div className={styles.minutesList}>\n            <DropdownList\n              data={minutesList}\n              valueField=\"value\"\n              textField=\"text\"\n              value={(meeting.schedule.durationInMinutes % 60) || 0}\n              onChange={({ value }) => {\n                const restHours = parseInt((meeting.schedule.durationInMinutes / 60), 10);\n                const isMax = restHours === hoursList.slice(-1)[0].value;\n                const minutes = isMax ? 0 : value;\n                const durationInMinutes = restHours * 60 + minutes;\n                update({\n                  ...meeting,\n                  schedule: {\n                    ...meeting.schedule,\n                    durationInMinutes,\n                  }\n                });\n              }} />\n          </div>\n        </div>\n      </div>\n    </MeetingSection>\n  ) : null\n);\n\nDuration.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n  isRecurring: PropTypes.bool.isRequired,\n};\n\nconst RecurringMeeting = (\n  {\n    isRecurring,\n    currentLocale,\n    update,\n    meeting,\n  }\n) => (\n  <MeetingSection className={styles.section}>\n    <div>\n      <div className={styles.spaceBetween}>\n        <span className={styles.label}>\n          {i18n.getString('recurringMeeting', currentLocale)}\n        </span>\n        <Switch\n          checked={isRecurring}\n          onChange={(isCheckRecurring) => {\n            const meetingType = isCheckRecurring ? 'Recurring' : 'Scheduled';\n            update({\n              ...meeting,\n              meetingType,\n            });\n          }} />\n      </div>\n      {\n        isRecurring ? (\n          <div className={styles.recurringDescribe}>\n            {i18n.getString('recurringDescribe', currentLocale)}\n          </div>\n        ) : null\n      }\n    </div>\n  </MeetingSection>\n);\n\nRecurringMeeting.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n  isRecurring: PropTypes.bool.isRequired,\n};\n\nconst Video = (\n  {\n    currentLocale,\n    meeting,\n    update,\n  }\n) => (\n  <MeetingSection title={i18n.getString('video', currentLocale)} withSwitch>\n    <div>\n      <div className={classnames(styles.labelLight, styles.fixTopMargin)}>\n        {i18n.getString('videoDescribe', currentLocale)}\n      </div>\n      <div className={classnames(styles.spaceBetween, styles.fixTopMargin)}>\n        <span className={styles.labelLight}>\n          {i18n.getString('host', currentLocale)}\n        </span>\n        <Switch\n          checked={meeting.startHostVideo}\n          onChange={(startHostVideo) => {\n            update({\n              ...meeting,\n              startHostVideo,\n            });\n          }} />\n      </div>\n      <div className={classnames(styles.spaceBetween, styles.fixTopMargin)}>\n        <span className={styles.labelLight}>\n          {i18n.getString('participants', currentLocale)}\n        </span>\n        <Switch\n          checked={meeting.startParticipantsVideo}\n          onChange={(startParticipantsVideo) => {\n            update({\n              ...meeting,\n              startParticipantsVideo,\n            });\n          }} />\n      </div>\n    </div>\n  </MeetingSection>\n);\n\nVideo.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n};\n\nconst AudioOptions = (\n  {\n    currentLocale,\n    update,\n    meeting,\n    data,\n  }\n) => (\n  <MeetingSection title={i18n.getString('audioOptions', currentLocale)} withSwitch>\n    <CheckBox\n      onSelect={({ key }) => {\n        const audioOptions = key.split('_');\n        update({\n          ...meeting,\n          audioOptions,\n        });\n      }}\n      valueField=\"key\"\n      textField=\"text\"\n      selected={meeting.audioOptions.join('_')}\n      data={data} />\n  </MeetingSection>\n);\n\nAudioOptions.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n};\n\nconst MeetingOptions = (\n  {\n    currentLocale,\n    meeting,\n    update,\n    that,\n  }\n) => (\n  <MeetingSection\n    title={i18n.getString('meetingOptions', currentLocale)}\n    toggle={false}\n    withSwitch>\n    <div>\n      <div className={classnames(styles.spaceBetween, styles.fixTopMargin)}>\n        <span className={styles.labelLight}>\n          {i18n.getString('requirePassword', currentLocale)}\n        </span>\n        <Switch\n          checked={meeting._requireMeetingPassword}\n          onChange={(_requireMeetingPassword) => {\n            if (_requireMeetingPassword) {\n              setTimeout(() => {\n                that.password.focus();\n              });\n            }\n            const password = _requireMeetingPassword ? null : meeting.password;\n            update({\n              ...meeting,\n              _requireMeetingPassword,\n              password,\n            });\n          }} />\n      </div>\n      {\n        meeting._requireMeetingPassword ? (\n          <div className={styles.passwordBox}>\n            <div className={styles.labelLight}>\n              {i18n.getString('password', currentLocale)}\n            </div>\n            <input\n              type=\"text\"\n              className={styles.password}\n              ref={(ref) => { that.password = ref; }}\n              value={meeting.password || ''}\n              onChange={({ target }) => {\n                if (/^[A-Za-z0-9]{0,10}$/.test(target.value)) {\n                  update({\n                    ...meeting,\n                    password: target.value\n                  });\n                }\n              }} />\n          </div>\n        ) : null\n      }\n      <div className={classnames(styles.spaceBetween, styles.fixTopMargin)}>\n        <span className={styles.labelLight}>\n          {i18n.getString('enableJoinBeforeHost', currentLocale)}\n        </span>\n        <Switch\n          checked={meeting.allowJoinBeforeHost}\n          onChange={(allowJoinBeforeHost) => {\n            update({\n              ...meeting,\n              allowJoinBeforeHost,\n            });\n          }} />\n      </div>\n    </div>\n  </MeetingSection>\n);\n\nMeetingOptions.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n  that: PropTypes.object.isRequired,\n};\n\nclass MeetingPanel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.props.init();\n    Moment.locale(this.props.currentLocale);\n    momentLocalizer();\n  }\n  render() {\n    const {\n      update,\n      meeting,\n      hidden,\n      disabled,\n      invite,\n      currentLocale,\n      scheduleButton: ScheduleButton,\n    } = this.props;\n    if (!Object.keys(meeting).length) {\n      return null;\n    }\n    const onToggle = (type) => {\n      if (this[type]._values.open) {\n        this[type].refs.inner.close();\n      } else {\n        this[type].focus();\n        this[type].refs.inner.toggle();\n      }\n    };\n    const isRecurring = meeting.meetingType === 'Recurring';\n    const telephonyOnly = i18n.getString('telephonyOnly', currentLocale);\n    const voIPOnly = i18n.getString('voIPOnly', currentLocale);\n    const both = i18n.getString('both', currentLocale);\n    const AUDIO_OPTIONS = [\n      {\n        key: 'Phone',\n        text: telephonyOnly,\n      },\n      {\n        key: 'ComputerAudio',\n        text: voIPOnly,\n\n      },\n      {\n        key: 'Phone_ComputerAudio',\n        text: both,\n      },\n    ];\n    const minTime = new Date(meeting.schedule.startTime) < +new Date() ? { min: new Date() } : {};\n    return (\n      <div className={styles.meetingPanel}>\n        {\n          !hidden ? (\n            <div className={styles.scroll}>\n              <Topic\n                meeting={meeting}\n                update={update}\n                currentLocale={currentLocale} />\n              <When\n                isRecurring={isRecurring}\n                currentLocale={currentLocale}\n                meeting={meeting}\n                update={update}\n                that={this}\n                onToggle={onToggle}\n                minTime={minTime} />\n              <Duration\n                isRecurring={isRecurring}\n                currentLocale={currentLocale}\n                meeting={meeting}\n                update={update} />\n              <RecurringMeeting\n                isRecurring={isRecurring}\n                currentLocale={currentLocale}\n                meeting={meeting}\n                update={update} />\n              <Video\n                currentLocale={currentLocale}\n                meeting={meeting}\n                update={update} />\n              <AudioOptions\n                data={AUDIO_OPTIONS}\n                currentLocale={currentLocale}\n                meeting={meeting}\n                update={update} />\n              <MeetingOptions\n                currentLocale={currentLocale}\n                meeting={meeting}\n                that={this}\n                update={update} />\n            </div>\n          ) : null\n        }\n        <ScheduleButton\n          hidden={hidden}\n          disabled={disabled}\n          meeting={meeting}\n          onClick={invite} />\n      </div>\n    );\n  }\n}\n\nMeetingPanel.propTypes = {\n  update: PropTypes.func.isRequired,\n  invite: PropTypes.func.isRequired,\n  init: PropTypes.func.isRequired,\n  meeting: PropTypes.object.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  scheduleButton: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  hidden: PropTypes.bool,\n};\n\nMeetingPanel.defaultProps = {\n  disabled: false,\n  hidden: false,\n};\n\nexport default MeetingPanel;\n"]}