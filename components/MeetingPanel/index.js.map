{"version":3,"sources":["components/MeetingPanel/index.js"],"names":["MINUTE_SCALE","HOUR_SCALE","getMinutesList","Array","fill","map","_","key","value","text","slice","getHoursList","Error","minutesList","hoursList","Topic","update","currentLocale","meeting","inline","label","getString","input","topic","target","propTypes","func","isRequired","string","object","When","isRecurring","that","onToggle","minTime","dateTimeBox","list","datePicker","schedule","startTime","ref","date","Date","dateIcon","icon","timePicker","time","timeIcon","bool","Duration","spaceBetween","duration","parseInt","durationInMinutes","restMinutes","isMax","restHours","minutes","RecurringMeeting","section","isCheckRecurring","meetingType","recurringDescribe","Video","labelLight","fixTopMargin","startHostVideo","startParticipantsVideo","AudioOptions","data","audioOptions","split","join","array","MeetingOptions","_requireMeetingPassword","password","passwordBox","allowJoinBeforeHost","InviteBox","hidden","disabled","buttonText","invite","inviteBox","withShadow","button","MeetingPanel","args","props","init","locale","length","type","_values","open","refs","inner","close","focus","toggle","telephonyOnly","voIPOnly","both","AUDIO_OPTIONS","min","meetingPanel","scroll","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\nimport DropdownList from 'react-widgets/lib/DropdownList';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport DateIcon from '../../assets/images/Date.svg';\nimport TimeIcon from '../../assets/images/Time.svg';\n\nimport styles from './styles.scss';\nimport Switch from '../Switch';\nimport CheckBox from '../CheckBox';\nimport i18n from './i18n';\nimport MeetingSection from '../MeetingSection';\n\n\nconst MINUTE_SCALE = 4;\nconst HOUR_SCALE = 13;\n\nfunction getMinutesList(MINUTE_SCALE) {\n  return new Array(MINUTE_SCALE).fill(0).map((_, key) => {\n    const value = 60 / MINUTE_SCALE * key;\n    const text = `${(`${value}0`).slice(0, 2)} m.`;\n    return {\n      value,\n      text\n    };\n  });\n}\n\nfunction getHoursList(HOUR_SCALE) {\n  if (HOUR_SCALE > 23) {\n    throw new Error('HOUR_SCALE must be less than 23.');\n  }\n  return new Array(HOUR_SCALE).fill(0).map((_, value) => {\n    const text = `${(`0${value}0`).slice(-3, -1)} h.`;\n    return {\n      value,\n      text\n    };\n  });\n}\n\nconst minutesList = getMinutesList(MINUTE_SCALE);\nconst hoursList = getHoursList(HOUR_SCALE);\n\nconst Topic = ({ update, currentLocale, meeting }) => (\n  <MeetingSection hideTopBorderLine>\n    <div className={styles.inline}>\n      <span className={styles.label}>\n        {i18n.getString('topic', currentLocale)}\n      </span>\n      <input\n        type=\"text\"\n        className={styles.input}\n        value={meeting.topic || ''}\n        onChange={({ target }) => {\n          update({\n            ...meeting,\n            topic: target.value\n          });\n        }} />\n    </div>\n  </MeetingSection>\n);\n\nTopic.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n};\n\nconst When = (\n  {\n    isRecurring,\n    currentLocale,\n    meeting,\n    update,\n    that,\n    onToggle,\n    minTime\n  }\n) => (\n  !isRecurring ? (\n    <MeetingSection title={i18n.getString('when', currentLocale)}>\n      <div className={styles.dateTimeBox}>\n        <div className={styles.list}>\n          <div className={styles.datePicker}>\n            <DateTimePicker\n              culture={currentLocale}\n              time={false}\n              value={meeting.schedule.startTime}\n              onChange={(startTime) => {\n                update({\n                  ...meeting,\n                  schedule: {\n                    ...meeting.schedule,\n                    startTime,\n                  }\n                });\n              }}\n              ref={(ref) => { that.date = ref; }}\n              format={'MM/DD/YY'}\n              min={new Date()}\n            />\n          </div>\n          <div className={styles.dateIcon}>\n            <DateIcon\n              onClick={() => onToggle('date')}\n              className={styles.icon} />\n          </div>\n        </div>\n        <div className={styles.list}>\n          <div className={styles.timePicker}>\n            <DateTimePicker\n              culture={'en'}\n              date={false}\n              ref={(ref) => { that.time = ref; }}\n              value={meeting.schedule.startTime}\n              onChange={(startTime) => {\n                update({\n                  ...meeting,\n                  schedule: {\n                    ...meeting.schedule,\n                    startTime,\n                  }\n                });\n              }}\n              format={'hh:mm A'}\n              {...minTime}\n            />\n          </div>\n          <div className={styles.timeIcon}>\n            <TimeIcon\n              onClick={() => onToggle('time')}\n              className={styles.icon} />\n          </div>\n        </div>\n      </div>\n    </MeetingSection>\n  ) : null\n);\n\nWhen.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n  isRecurring: PropTypes.bool.isRequired,\n  that: PropTypes.object.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  minTime: PropTypes.object.isRequired,\n};\n\nconst Duration = (\n  {\n    isRecurring,\n    currentLocale,\n    meeting,\n    update\n  }\n) => (\n  !isRecurring ? (\n    <MeetingSection title={i18n.getString('duration', currentLocale)}>\n      <div className={classnames(styles.spaceBetween, styles.duration)}>\n        <div className={styles.list}>\n          <div className={styles.hoursList}>\n            <DropdownList\n              data={hoursList}\n              valueField={'value'}\n              textField={'text'}\n              value={parseInt((meeting.schedule.durationInMinutes / 60), 10)}\n              onChange={({ value }) => {\n                let restMinutes = meeting.schedule.durationInMinutes % 60;\n                const isMax = value === hoursList.slice(-1)[0].value;\n                restMinutes = isMax ? 0 : restMinutes;\n                const durationInMinutes = value * 60 + restMinutes;\n                update({\n                  ...meeting,\n                  schedule: {\n                    ...meeting.schedule,\n                    durationInMinutes,\n                  }\n                });\n              }} />\n          </div>\n        </div>\n        <div className={styles.list}>\n          <div className={styles.minutesList}>\n            <DropdownList\n              data={minutesList}\n              valueField={'value'}\n              textField={'text'}\n              value={(meeting.schedule.durationInMinutes % 60) || 0}\n              onChange={({ value }) => {\n                const restHours = parseInt((meeting.schedule.durationInMinutes / 60), 10);\n                const isMax = restHours === hoursList.slice(-1)[0].value;\n                const minutes = isMax ? 0 : value;\n                const durationInMinutes = restHours * 60 + minutes;\n                update({\n                  ...meeting,\n                  schedule: {\n                    ...meeting.schedule,\n                    durationInMinutes,\n                  }\n                });\n              }} />\n          </div>\n        </div>\n      </div>\n    </MeetingSection>\n  ) : null\n);\n\nDuration.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n  isRecurring: PropTypes.bool.isRequired,\n};\n\nconst RecurringMeeting = (\n  {\n    isRecurring,\n    currentLocale,\n    update,\n    meeting,\n  }\n) => (\n  <MeetingSection className={styles.section}>\n    <div>\n      <div className={styles.spaceBetween}>\n        <span className={styles.label}>\n          {i18n.getString('recurringMeeting', currentLocale)}\n        </span>\n        <Switch\n          checked={isRecurring}\n          onChange={(isCheckRecurring) => {\n            const meetingType = isCheckRecurring ? 'Recurring' : 'Scheduled';\n            update({\n              ...meeting,\n              meetingType,\n            });\n          }} />\n      </div>\n      {\n        isRecurring ? (\n          <div className={styles.recurringDescribe}>\n            {i18n.getString('recurringDescribe', currentLocale)}\n          </div>\n        ) : null\n      }\n    </div>\n  </MeetingSection>\n);\n\nRecurringMeeting.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n  isRecurring: PropTypes.bool.isRequired,\n};\n\nconst Video = (\n  {\n    currentLocale,\n    meeting,\n    update,\n  }\n) => (\n  <MeetingSection title={i18n.getString('video', currentLocale)} withSwitch>\n    <div>\n      <div className={classnames(styles.labelLight, styles.fixTopMargin)}>\n        {i18n.getString('videoDescribe', currentLocale)}\n      </div>\n      <div className={classnames(styles.spaceBetween, styles.fixTopMargin)}>\n        <span className={styles.labelLight}>\n          {i18n.getString('host', currentLocale)}\n        </span>\n        <Switch\n          checked={meeting.startHostVideo}\n          onChange={(startHostVideo) => {\n            update({\n              ...meeting,\n              startHostVideo,\n            });\n          }} />\n      </div>\n      <div className={classnames(styles.spaceBetween, styles.fixTopMargin)}>\n        <span className={styles.labelLight}>\n          {i18n.getString('participants', currentLocale)}\n        </span>\n        <Switch\n          checked={meeting.startParticipantsVideo}\n          onChange={(startParticipantsVideo) => {\n            update({\n              ...meeting,\n              startParticipantsVideo,\n            });\n          }} />\n      </div>\n    </div>\n  </MeetingSection>\n);\n\nVideo.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n};\n\nconst AudioOptions = (\n  {\n    currentLocale,\n    update,\n    meeting,\n    data,\n  }\n) => (\n  <MeetingSection title={i18n.getString('audioOptions', currentLocale)} withSwitch>\n    <CheckBox\n      onSelect={({ key }) => {\n        const audioOptions = key.split('_');\n        update({\n          ...meeting,\n          audioOptions,\n        });\n      }}\n      valueField={'key'}\n      textField={'text'}\n      selected={meeting.audioOptions.join('_')}\n      data={data} />\n  </MeetingSection>\n);\n\nAudioOptions.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n};\n\nconst MeetingOptions = (\n  {\n    currentLocale,\n    meeting,\n    update,\n  }\n) => (\n  <MeetingSection title={i18n.getString('meetingOptions', currentLocale)} withSwitch>\n    <div>\n      <div className={classnames(styles.spaceBetween, styles.fixTopMargin)}>\n        <span className={styles.labelLight}>\n          {i18n.getString('requirePassword', currentLocale)}\n        </span>\n        <Switch\n          checked={meeting._requireMeetingPassword}\n          onChange={(_requireMeetingPassword) => {\n            const password = _requireMeetingPassword ? null : meeting.password;\n            update({\n              ...meeting,\n              _requireMeetingPassword,\n              password,\n            });\n          }} />\n      </div>\n      {\n        meeting._requireMeetingPassword ? (\n          <div className={styles.passwordBox}>\n            <div className={styles.labelLight}>\n              {i18n.getString('password', currentLocale)}\n            </div>\n            <input\n              type=\"password\"\n              className={styles.password}\n              value={meeting.password || ''}\n              onChange={({ target }) => {\n                update({\n                  ...meeting,\n                  password: target.value\n                });\n              }} />\n          </div>\n        ) : null\n      }\n      <div className={classnames(styles.spaceBetween, styles.fixTopMargin)}>\n        <span className={styles.labelLight}>\n          {i18n.getString('enableJoinBeforeHost', currentLocale)}\n        </span>\n        <Switch\n          checked={meeting.allowJoinBeforeHost}\n          onChange={(allowJoinBeforeHost) => {\n            update({\n              ...meeting,\n              allowJoinBeforeHost,\n            });\n          }} />\n      </div>\n    </div>\n  </MeetingSection>\n);\n\nMeetingOptions.propTypes = {\n  update: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  meeting: PropTypes.object.isRequired,\n};\n\nconst InviteBox = (\n  {\n    hidden,\n    disabled,\n    meeting,\n    buttonText,\n    invite\n  }\n) => (\n  <div className={classnames(styles.inviteBox, !hidden ? styles.withShadow : null)}>\n    <button\n      onClick={() => invite(meeting)}\n      disabled={disabled}\n      className={classnames(styles.button, disabled ? styles.disabled : null)}>\n      {buttonText}\n    </button>\n  </div>\n);\n\nInviteBox.propTypes = {\n  meeting: PropTypes.object.isRequired,\n  hidden: PropTypes.bool.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  buttonText: PropTypes.string.isRequired,\n  invite: PropTypes.func.isRequired,\n};\n\nclass MeetingPanel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.props.init();\n    Moment.locale(this.props.currentLocale);\n    momentLocalizer();\n  }\n  render() {\n    const {\n      update,\n      meeting,\n      hidden,\n      disabled,\n      invite,\n      buttonText,\n      currentLocale,\n    } = this.props;\n    if (!Object.keys(meeting).length) {\n      return null;\n    }\n    const onToggle = (type) => {\n      if (this[type]._values.open) {\n        this[type].refs.inner.close();\n      } else {\n        this[type].focus();\n        this[type].refs.inner.toggle();\n      }\n    };\n    const isRecurring = meeting.meetingType === 'Recurring';\n    const telephonyOnly = i18n.getString('telephonyOnly', currentLocale);\n    const voIPOnly = i18n.getString('voIPOnly', currentLocale);\n    const both = i18n.getString('both', currentLocale);\n    const AUDIO_OPTIONS = [\n      {\n        key: 'Phone',\n        text: telephonyOnly,\n      },\n      {\n        key: 'ComputerAudio',\n        text: voIPOnly,\n\n      },\n      {\n        key: 'Phone_ComputerAudio',\n        text: both,\n      },\n    ];\n    const minTime = new Date(meeting.schedule.startTime) < +new Date() ? { min: new Date() } : {};\n    return (\n      <div className={styles.meetingPanel}>\n        {\n          !hidden ? (\n            <div className={styles.scroll}>\n              <Topic\n                meeting={meeting}\n                update={update}\n                currentLocale={currentLocale} />\n              <When\n                isRecurring={isRecurring}\n                currentLocale={currentLocale}\n                meeting={meeting}\n                update={update}\n                that={this}\n                onToggle={onToggle}\n                minTime={minTime} />\n              <Duration\n                isRecurring={isRecurring}\n                currentLocale={currentLocale}\n                meeting={meeting}\n                update={update} />\n              <RecurringMeeting\n                isRecurring={isRecurring}\n                currentLocale={currentLocale}\n                meeting={meeting}\n                update={update} />\n              <Video\n                currentLocale={currentLocale}\n                meeting={meeting}\n                update={update} />\n              <AudioOptions\n                data={AUDIO_OPTIONS}\n                currentLocale={currentLocale}\n                meeting={meeting}\n                update={update} />\n              <MeetingOptions\n                currentLocale={currentLocale}\n                meeting={meeting}\n                update={update} />\n            </div>\n          ) : null\n        }\n        <InviteBox\n          hidden={hidden}\n          disabled={disabled}\n          meeting={meeting}\n          buttonText={buttonText}\n          invite={invite} />\n      </div>\n    );\n  }\n}\n\nMeetingPanel.propTypes = {\n  update: PropTypes.func.isRequired,\n  invite: PropTypes.func.isRequired,\n  init: PropTypes.func.isRequired,\n  meeting: PropTypes.object.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  buttonText: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  hidden: PropTypes.bool,\n};\n\nMeetingPanel.defaultProps = {\n  disabled: false,\n  hidden: false,\n};\n\nexport default MeetingPanel;\n"]}