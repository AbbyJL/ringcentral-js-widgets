{"version":3,"sources":["components/ContactsAlert/index.js"],"names":["ContactsAlert","message","currentLocale","getString","propTypes","shape","string","isRequired","handleMessage","inexistence"],"mappings":";;;;;kBAKwBA,a;;AALxB;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,aAAT,OAKZ;AAAA,MAHCC,OAGD,QAJDA,OAIC,CAHCA,OAGD;AAAA,MADDC,aACC,QADDA,aACC;;AACD,SACE;AAAA;AAAA;AACG,mBAAKC,SAAL,CAAeF,OAAf,EAAwBC,aAAxB;AADH,GADF;AAKD;;AAEDF,cAAcI,SAAd,GAA0B;AACxBH,WAAS,oBAAUI,KAAV,CAAgB;AACvBJ,aAAS,oBAAUK,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAHqB;AAIxBL,iBAAe,oBAAUI,MAAV,CAAiBC;AAJR,CAA1B;;AAOAP,cAAcQ,aAAd,GAA8B;AAAA,MAAGP,OAAH,SAAGA,OAAH;AAAA,SAC5BA,YAAY,2BAAiBQ,WADD;AAAA,CAA9B","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactsMessages from 'ringcentral-integration/modules/Contacts/contactsMessages';\nimport i18n from './i18n';\n\nexport default function ContactsAlert({\n  message: {\n    message,\n  },\n  currentLocale,\n}) {\n  return (\n    <div>\n      {i18n.getString(message, currentLocale)}\n    </div>\n  );\n}\n\nContactsAlert.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nContactsAlert.handleMessage = ({ message }) => (\n  message === ContactsMessages.inexistence\n);\n"]}