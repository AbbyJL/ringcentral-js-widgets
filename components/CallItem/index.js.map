{"version":3,"sources":["components/CallItem/index.js"],"names":["callIconMap","inbound","outbound","missed","CallIcon","direction","active","ringing","inboundTitle","outboundTitle","missedTitle","title","callIcon","activeCall","propTypes","string","isRequired","bool","defaultProps","CallItem","props","onSelectContact","value","idx","selected","parseInt","_userSelection","setState","call","activityMatches","length","autoLog","logCall","redirect","getSelectedContact","state","contactMatches","getContactMatches","bind","viewSelectedContact","onViewContact","phoneNumber","getPhoneNumber","contact","createSelectedContact","entityType","onCreateContact","_mounted","isCreating","name","enableContactFallback","getFallbackContactName","clickToSms","countryCode","areaCode","onClickToSms","formatted","clickToDial","onClickToDial","getInitialContactIndex","isLogging","loading","setTimeout","nextProps","fromMatches","toMatches","activity","index","findIndex","isLoggedContact","toNumberEntity","id","from","extensionNumber","to","onLogCall","root","telephonyStatus","result","startTime","duration","offset","brand","currentLocale","disableLinks","disableClickToDial","outboundSmsPermission","internalSmsPermission","dateTimeFormatter","fallbackContactName","parsedInfo","isExtension","hasPlus","number","showClickToSms","durationEl","getString","dateEl","utcTimestamp","statusEl","contactDisplay","details","undefined","shape","array","webphoneSession","object","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport 'core-js/fn/array/find';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n// import sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\nimport {\n  isInbound,\n  isRinging,\n  isMissed,\n} from 'ringcentral-integration/lib/callLogHelpers';\nimport parseNumber from 'ringcentral-integration/lib/parseNumber';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport DurationCounter from '../DurationCounter';\nimport ContactDisplay from '../ContactDisplay';\nimport formatDuration from '../../lib/formatDuration';\nimport ActionMenu from '../ActionMenu';\n// import Button from '../Button';\nimport styles from './styles.scss';\n\nimport i18n from './i18n';\n\nconst callIconMap = {\n  [callDirections.inbound]: dynamicsFont.inbound,\n  [callDirections.outbound]: dynamicsFont.outbound,\n  missed: dynamicsFont.missed,\n};\n\nfunction CallIcon({\n  direction,\n  missed,\n  active,\n  ringing,\n  inboundTitle,\n  outboundTitle,\n  missedTitle,\n}) {\n  const title = missed ? missedTitle :\n    (direction === callDirections.inbound) ? inboundTitle : outboundTitle;\n  return (\n    <div className={styles.callIcon}>\n      <span\n        className={classnames(\n          missed ? callIconMap.missed : callIconMap[direction],\n          active && styles.activeCall,\n          ringing && styles.ringing,\n          missed && styles.missed,\n        )}\n        title={title}\n      />\n    </div>\n  );\n}\nCallIcon.propTypes = {\n  direction: PropTypes.string.isRequired,\n  missed: PropTypes.bool,\n  active: PropTypes.bool,\n  ringing: PropTypes.bool,\n};\nCallIcon.defaultProps = {\n  missed: false,\n  active: false,\n  ringing: false,\n};\n\nexport default class CallItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: this.getInitialContactIndex(),\n      isLogging: false,\n      isCreating: false,\n      loading: true,\n    };\n    this._userSelection = false;\n  }\n  componentDidMount() {\n    this._mounted = true;\n    setTimeout(() => {\n      // clear timeout is probably not necessary\n      if (this._mounted) {\n        this.setState({\n          loading: false,\n        });\n      }\n    }, 10);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (\n      !this._userSelection &&\n      (\n        nextProps.call.activityMatches !== this.props.call.activityMatches ||\n        nextProps.call.fromMatches !== this.props.call.fromMatches ||\n        nextProps.call.toMatches !== this.props.call.toMatches\n      )\n    ) {\n      this.setState({\n        selected: this.getInitialContactIndex(nextProps),\n      });\n    }\n  }\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n  onSelectContact = (value, idx) => {\n    const selected = parseInt(idx, 10) - 1;\n    this._userSelection = true;\n    this.setState({\n      selected,\n    });\n    if (\n      this.props.call.activityMatches.length > 0 &&\n      this.props.autoLog\n    ) {\n      this.logCall({ redirect: false, selected });\n    }\n  }\n  getInitialContactIndex(nextProps = this.props) {\n    const contactMatches = this.getContactMatches(nextProps);\n    const activityMatches = nextProps.call.activityMatches;\n    // console.log('getInitialContactIndex:', nextProps.call.toNumberEntity);\n    for (const activity of activityMatches) {\n      const index = contactMatches.findIndex(contact => (\n        // TODO find a better name or mechanism...\n        this.props.isLoggedContact(nextProps.call, activity, contact)\n      ));\n      if (index > -1) return index;\n    }\n    if (nextProps.call.toNumberEntity) {\n      const index = contactMatches.findIndex(contact => (\n        contact.id === nextProps.call.toNumberEntity\n      ));\n      return index;\n    }\n    return -1;\n  }\n  getSelectedContact = (selected = this.state.selected) => {\n    const contactMatches = this.getContactMatches();\n    return (selected > -1 && contactMatches[selected]) ||\n      (contactMatches.length === 1 && contactMatches[0]) ||\n      null;\n  }\n  getPhoneNumber() {\n    return isInbound(this.props.call) ?\n      (this.props.call.from.phoneNumber || this.props.call.from.extensionNumber) :\n      (this.props.call.to.phoneNumber || this.props.call.to.extensionNumber);\n  }\n  getContactMatches(nextProps = this.props) {\n    return isInbound(nextProps.call) ?\n      nextProps.call.fromMatches :\n      nextProps.call.toMatches;\n  }\n  getFallbackContactName() {\n    return isInbound(this.props.call) ?\n      (this.props.call.from.name) :\n      (this.props.call.to.name);\n  }\n  async logCall({ redirect = true, selected }) {\n    if (\n      typeof this.props.onLogCall === 'function' &&\n      this._mounted &&\n      !this.state.isLogging\n    ) {\n      this.setState({\n        isLogging: true,\n      });\n      await this.props.onLogCall({\n        contact: this.getSelectedContact(selected),\n        call: this.props.call,\n        redirect,\n      });\n      if (this._mounted) {\n        this.setState({\n          isLogging: false,\n        });\n      }\n    }\n  }\n  logCall = this.logCall.bind(this)\n\n  viewSelectedContact = () => {\n    if (typeof this.props.onViewContact === 'function') {\n      this.props.onViewContact({\n        phoneNumber: this.getPhoneNumber(),\n        contact: this.getSelectedContact(),\n      });\n    }\n  }\n\n  createSelectedContact = async (entityType) => {\n    // console.log('click createSelectedContact!!', entityType);\n    if (typeof this.props.onCreateContact === 'function' &&\n      this._mounted &&\n      !this.state.isCreating) {\n      this.setState({\n        isCreating: true,\n      });\n      // console.log('start to create: isCreating...', this.state.isCreating);\n      const phoneNumber = this.getPhoneNumber();\n      await this.props.onCreateContact({\n        phoneNumber,\n        name: this.props.enableContactFallback ? this.getFallbackContactName() : '',\n        entityType,\n      });\n\n      if (this._mounted) {\n        this.setState({\n          isCreating: false,\n        });\n        // console.log('created: isCreating...', this.state.isCreating);\n      }\n    }\n  }\n  clickToSms = ({ countryCode, areaCode }) => {\n    if (this.props.onClickToSms) {\n      const phoneNumber = this.getPhoneNumber();\n      const contact = this.getSelectedContact();\n      if (contact) {\n        this.props.onClickToSms({\n          ...contact,\n          phoneNumber,\n        });\n      } else {\n        const formatted = formatNumber({\n          phoneNumber,\n          countryCode,\n          areaCode,\n        });\n        this.props.onClickToSms({\n          name: this.props.enableContactFallback ? this.getFallbackContactName() : formatted,\n          phoneNumber,\n        }, true);\n      }\n    }\n  }\n  clickToDial = () => {\n    if (this.props.onClickToDial) {\n      this.props.onClickToDial(this.getPhoneNumber());\n    }\n  }\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className={styles.root} />\n      );\n    }\n    const {\n      call: {\n        direction,\n        telephonyStatus,\n        result,\n        startTime,\n        duration,\n        activityMatches,\n        offset,\n      // webphoneSession,\n    },\n      brand,\n      currentLocale,\n      areaCode,\n      countryCode,\n      disableLinks,\n      disableClickToDial,\n      outboundSmsPermission,\n      internalSmsPermission,\n      active,\n      onViewContact,\n      onCreateContact,\n      onLogCall,\n      onClickToDial,\n      onClickToSms,\n      dateTimeFormatter,\n      isLogging,\n      // webphoneAnswer,\n      // webphoneReject,\n      // webphoneHangup,\n      // webphoneResume,\n      enableContactFallback,\n    } = this.props;\n    const phoneNumber = this.getPhoneNumber();\n    const contactMatches = this.getContactMatches();\n    const fallbackContactName = this.getFallbackContactName();\n    const ringing = isRinging(this.props.call);\n    const missed = isInbound(this.props.call) && isMissed(this.props.call);\n    const parsedInfo = parseNumber(phoneNumber);\n    const isExtension = !parsedInfo.hasPlus &&\n      parsedInfo.number.length <= 6;\n    const showClickToSms = !!(\n      onClickToSms &&\n      (\n        isExtension ?\n          internalSmsPermission :\n          outboundSmsPermission\n      )\n    );\n\n    let durationEl;\n    if (typeof duration === 'undefined') {\n      durationEl = disableLinks ?\n        i18n.getString('unavailable', currentLocale) :\n        <DurationCounter startTime={startTime} offset={offset} />;\n    } else {\n      durationEl = formatDuration(duration);\n    }\n    let dateEl;\n    if (!active) {\n      dateEl = dateTimeFormatter({ utcTimestamp: startTime });\n    }\n    let statusEl;\n    if (active) {\n      statusEl = i18n.getString(result || telephonyStatus, currentLocale);\n    }\n    // let webphoneEl;\n    // if (webphoneSession) {\n    //   let hangupFunc = webphoneHangup;\n    //   let resumeFunc = webphoneResume;\n    //   if (\n    //     webphoneSession.direction === callDirections.inbound &&\n    //     webphoneSession.callStatus === sessionStatus.connecting\n    //   ) {\n    //     hangupFunc = webphoneReject;\n    //     resumeFunc = webphoneAnswer;\n    //   }\n    //   webphoneEl = (\n    //     <div className={styles.webphoneButtons}>\n    //       <Button\n    //         className={classnames(styles.webphoneButton, styles.rejectWebphoneButton)}\n    //         onClick={() => hangupFunc(webphoneSession.id)}\n    //       >\n    //         <i className={dynamicsFont.missed} />\n    //       </Button>\n    //       <Button\n    //         className={styles.webphoneButton}\n    //         onClick={() => resumeFunc(webphoneSession.id)}\n    //       >\n    //         <i className={dynamicsFont.call} />\n    //       </Button>\n    //     </div>\n    //   );\n    // }\n    return (\n      <div className={styles.root}>\n        <CallIcon\n          direction={direction}\n          ringing={ringing}\n          active={active}\n          missed={missed}\n          inboundTitle={i18n.getString('inboundCall', currentLocale)}\n          outboundTitle={i18n.getString('outboundCall', currentLocale)}\n          missedTitle={i18n.getString('missedCall', currentLocale)}\n        />\n        <ContactDisplay\n          className={classnames(\n            styles.contactDisplay,\n            missed && styles.missed,\n            active && styles.active,\n          )}\n          brand={brand}\n          contactMatches={contactMatches}\n          selected={this.state.selected}\n          onSelectContact={this.onSelectContact}\n          disabled={disableLinks}\n          isLogging={isLogging || this.state.isLogging}\n          fallBackName={fallbackContactName}\n          enableContactFallback={enableContactFallback}\n          areaCode={areaCode}\n          countryCode={countryCode}\n          phoneNumber={phoneNumber}\n          currentLocale={currentLocale}\n          stopPropagation={false}\n        />\n        <div className={styles.details} >\n          {durationEl} | {dateEl}{statusEl}\n        </div>\n        <ActionMenu\n          currentLocale={currentLocale}\n          onLog={onLogCall && this.logCall}\n          onViewEntity={onViewContact && this.viewSelectedContact}\n          onCreateEntity={onCreateContact && this.createSelectedContact}\n          hasEntity={!!contactMatches.length}\n          onClickToDial={onClickToDial && this.clickToDial}\n          onClickToSms={\n            showClickToSms ?\n              () => this.clickToSms({ countryCode, areaCode })\n              : undefined\n          }\n          phoneNumber={phoneNumber}\n          disableLinks={disableLinks}\n          disableClickToDial={disableClickToDial}\n          isLogging={isLogging || this.state.isLogging}\n          isLogged={activityMatches.length > 0}\n          isCreating={this.state.isCreating}\n          addLogTitle={i18n.getString('addLog', currentLocale)}\n          editLogTitle={i18n.getString('editLog', currentLocale)}\n          textTitle={i18n.getString('text', currentLocale)}\n          callTitle={i18n.getString('call', currentLocale)}\n          createEntityTitle={i18n.getString('addEntity', currentLocale)}\n          viewEntityTitle={i18n.getString('viewDetails', currentLocale)}\n        />\n      </div>\n    );\n  }\n}\n\nCallItem.propTypes = {\n  call: PropTypes.shape({\n    direction: PropTypes.string.isRequired,\n    telephonyStatus: PropTypes.string,\n    startTime: PropTypes.number.isRequired,\n    activityMatches: PropTypes.array.isRequired,\n    fromMatches: PropTypes.array.isRequired,\n    toMatches: PropTypes.array.isRequired,\n    from: PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n    to: PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n      name: PropTypes.string,\n    }),\n    webphoneSession: PropTypes.object,\n  }).isRequired,\n  areaCode: PropTypes.string.isRequired,\n  brand: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onLogCall: PropTypes.func,\n  onViewContact: PropTypes.func,\n  onCreateContact: PropTypes.func,\n  onClickToDial: PropTypes.func,\n  onClickToSms: PropTypes.func,\n  isLoggedContact: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  outboundSmsPermission: PropTypes.bool,\n  internalSmsPermission: PropTypes.bool,\n  active: PropTypes.bool.isRequired,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  isLogging: PropTypes.bool,\n  // webphoneAnswer: PropTypes.func,\n  // webphoneReject: PropTypes.func,\n  // webphoneHangup: PropTypes.func,\n  // webphoneResume: PropTypes.func,\n  enableContactFallback: PropTypes.bool,\n  autoLog: PropTypes.bool,\n};\n\nCallItem.defaultProps = {\n  onLogCall: undefined,\n  onClickToDial: undefined,\n  onClickToSms: undefined,\n  onViewContact: undefined,\n  onCreateContact: undefined,\n  isLoggedContact: () => false,\n  isLogging: false,\n  disableClickToDial: false,\n  outboundSmsPermission: false,\n  internalSmsPermission: false,\n  disableLinks: false,\n  // webphoneAnswer: () => null,\n  // webphoneReject: () => null,\n  // webphoneHangup: () => null,\n  // webphoneResume: () => null,\n  enableContactFallback: undefined,\n  autoLog: false,\n};\n"]}