{"version":3,"sources":["components/Modal/index.js"],"names":["FlatButton","className","disabled","onClick","children","styles","flatBtn","text","propTypes","PropTypes","string","bool","func","node","defaultProps","undefined","Modal","props","_container","document","createElement","appendDOM","body","appendChild","removeChild","title","show","onConfirm","onCancel","textConfirm","textCancel","currentLocale","clickOutToClose","modalClassName","cancelBtnClassName","confirmBtnClassName","closeBtn","maskClassName","headerClassName","contentClassName","footer","btn","i18n","getString","container","containerHidden","mask","maskHidden","modal","modalHidden","header","content","ReactDOM","createPortal","renderDialog","Component","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,UAAT,OAKG;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,MAHDC,QAGC,QAHDA,QAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,QACC,QADDA,QACC;;AACD,SACE;AAAA;AAAA;AACE,iBAAW,0BACTH,SADS,EAETI,iBAAOC,OAFE,EAGTD,iBAAOE,IAHE,EAITL,YAAYG,iBAAOH,QAJV,CADb;AAOE,eAAS,CAACA,QAAD,IAAaC,OAPxB;AAQGC;AARH,GADF;AAYD;AACDJ,WAAWQ,SAAX,GAAuB;AACrBP,aAAWQ,oBAAUC,MADA;AAErBR,YAAUO,oBAAUE,IAFC;AAGrBR,WAASM,oBAAUG,IAHE;AAIrBR,YAAUK,oBAAUI;AAJC,CAAvB;;AAOAb,WAAWc,YAAX,GAA0B;AACxBb,aAAWc,SADa;AAExBb,YAAU,KAFc;AAGxBC,WAASY,SAHe;AAIxBX,YAAUW;AAJc,CAA1B;;IAOqBC,K;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oIACXA,KADW;;AAEjB,UAAKC,UAAL,GAAkBC,SAASC,aAAT,CAAuB,KAAvB,CAAlB;AACA,UAAKC,SAAL,GAAiB,MAAKJ,KAAL,CAAWI,SAAX,IAAwBF,SAASG,IAAlD;AAHiB;AAIlB;;;;wCAEmB;AAClB,WAAKD,SAAL,CAAeE,WAAf,CAA2B,KAAKL,UAAhC;AACD;;;2CAEsB;AACrB,WAAKG,SAAL,CAAeG,WAAf,CAA2B,KAAKN,UAAhC;AACD;;;mCAEc;AAAA,mBAmBT,KAAKD,KAnBI;AAAA,UAEXhB,SAFW,UAEXA,SAFW;AAAA,UAGXG,QAHW,UAGXA,QAHW;AAAA,UAIXqB,KAJW,UAIXA,KAJW;AAAA,UAKXC,IALW,UAKXA,IALW;AAAA,UAMXC,SANW,UAMXA,SANW;AAAA,UAOXC,QAPW,UAOXA,QAPW;AAAA,UAQXC,WARW,UAQXA,WARW;AAAA,UASXC,UATW,UASXA,UATW;AAAA,UAUXC,aAVW,UAUXA,aAVW;AAAA,UAWXC,eAXW,UAWXA,eAXW;AAAA,UAYXC,cAZW,UAYXA,cAZW;AAAA,UAaXC,kBAbW,UAaXA,kBAbW;AAAA,UAcXC,mBAdW,UAcXA,mBAdW;AAAA,UAeXC,QAfW,UAeXA,QAfW;AAAA,UAgBXC,aAhBW,UAgBXA,aAhBW;AAAA,UAiBXC,eAjBW,UAiBXA,eAjBW;AAAA,UAkBXC,gBAlBW,UAkBXA,gBAlBW;AAoBb;;AACA,UAAMC,SAAS,CAACT,aAAD,IACb,CAACH,QAAD,IAAa,CAACD,SADD,GAEX,IAFW,GAGb;AAAA;AAAA,UAAK,WAAWtB,iBAAOmC,MAAvB;AACGZ,mBACC;AAAC,oBAAD;AAAA;AACE,uBAAW,0BAAWvB,iBAAOoC,GAAlB,EAAuBP,kBAAvB,CADb;AAEE,qBAASN,QAFX;AAGGE,wBACDY,eAAKC,SAAL,CAAe,QAAf,EAAyBZ,aAAzB;AAJF,SADD,GAOG,IARN;AASGJ,oBACC;AAAC,oBAAD;AAAA;AACE,uBAAW,0BAAWtB,iBAAOoC,GAAlB,EAAuBN,mBAAvB,CADb;AAEE,qBAASR,SAFX;AAGGE,yBACDa,eAAKC,SAAL,CAAe,SAAf,EAA0BZ,aAA1B;AAJF,SADD,GAOG;AAhBN,OAHF;AAsBA,aACE;AAAA;AAAA,UAAK,WAAWL,OAAO,0BAAWrB,iBAAOuC,SAAlB,EAA6B3C,SAA7B,CAAP,GAAiDI,iBAAOwC,eAAxE;AACE;AACE,qBAAWnB,OAAO,0BAAWrB,iBAAOyC,IAAlB,EAAwBT,aAAxB,CAAP,GAAgDhC,iBAAO0C,UADpE;AAEE,mBAASf,kBAAkBJ,QAAlB,GAA6B,YAAM,CAAE;AAFhD,UADF;AAKE;AAAA;AAAA,YAAK,WAAWF,OAAO,0BAAWrB,iBAAO2C,KAAlB,EAAyBf,cAAzB,CAAP,GAAkD5B,iBAAO4C,WAAzE;AACGxB,kBACC;AAAA;AAAA,cAAK,WAAW,0BAAWpB,iBAAO6C,MAAlB,EAA0BZ,eAA1B,CAAhB;AAA6Db;AAA7D,WADD,GAC6E,IAFhF;AAGGW,kBAHH;AAIE;AAAA;AAAA,cAAK,WAAW,0BAAW/B,iBAAO8C,OAAlB,EAA2BZ,gBAA3B,CAAhB;AACGnC;AADH,WAJF;AAOGoC;AAPH;AALF,OADF;AAiBD;;;6BAEQ;AACP,aAAOY,mBAASC,YAAT,CACL,KAAKC,YAAL,EADK,EAEL,KAAKpC,UAFA,CAAP;AAID;;;EAlFgCqC,gB;;kBAAdvC,K;;;AAqFrBA,MAAMR,SAAN,GAAkB;AAChBP,aAAWQ,oBAAUC,MADL;AAEhBuB,kBAAgBxB,oBAAUC,MAFV;AAGhBwB,sBAAoBzB,oBAAUC,MAHd;AAIhByB,uBAAqB1B,oBAAUC,MAJf;AAKhBN,YAAUK,oBAAUI,IALJ;AAMhBa,QAAMjB,oBAAUE,IANA;AAOhBgB,aAAWlB,oBAAUG,IAPL;AAQhBgB,YAAUnB,oBAAUG,IARJ;AAShBoB,mBAAiBvB,oBAAUE,IATX;AAUhBc,SAAOhB,oBAAUC,MAVD;AAWhBqB,iBAAetB,oBAAUC,MAXT;AAYhBmB,eAAapB,oBAAUC,MAZP;AAahBoB,cAAYrB,oBAAUC,MAbN;AAchB0B,YAAU3B,oBAAUI,IAdJ;AAehBQ,aAAWZ,oBAAU+C,MAfL;AAgBhBnB,iBAAe5B,oBAAUC,MAhBT;AAiBhB4B,mBAAiB7B,oBAAUC,MAjBX;AAkBhB6B,oBAAkB9B,oBAAUC;AAlBZ,CAAlB;AAoBAM,MAAMF,YAAN,GAAqB;AACnBb,aAAW,EADQ;AAEnB8B,iBAAe,EAFI;AAGnBE,kBAAgB,EAHG;AAInBC,sBAAoB,EAJD;AAKnBC,uBAAqB,EALF;AAMnB/B,YAAUW,SANS;AAOnBW,QAAM,KAPa;AAQnBC,aAAWZ,SARQ;AASnBa,YAAUb,SATS;AAUnBiB,mBAAiB,KAVE;AAWnBP,SAAOV,SAXY;AAYnBc,eAAa,EAZM;AAanBC,cAAY,EAbO;AAcnBM,YAAUrB,SAdS;AAenBM,aAAWN,SAfQ;AAgBnBsB,iBAAetB,SAhBI;AAiBnBuB,mBAAiBvB,SAjBE;AAkBnBwB,oBAAkBxB;AAlBC,CAArB","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction FlatButton({\n  className,\n  disabled,\n  onClick,\n  children,\n}) {\n  return (\n    <div\n      className={classnames(\n        className,\n        styles.flatBtn,\n        styles.text,\n        disabled && styles.disabled,\n      )}\n      onClick={!disabled && onClick} >\n      {children}\n    </div>\n  );\n}\nFlatButton.propTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n\nFlatButton.defaultProps = {\n  className: undefined,\n  disabled: false,\n  onClick: undefined,\n  children: undefined,\n};\n\nexport default class Modal extends Component {\n  constructor(props) {\n    super(props);\n    this._container = document.createElement('div');\n    this.appendDOM = this.props.appendDOM || document.body;\n  }\n\n  componentDidMount() {\n    this.appendDOM.appendChild(this._container);\n  }\n\n  componentWillUnmount() {\n    this.appendDOM.removeChild(this._container);\n  }\n\n  renderDialog() {\n    const {\n      className,\n      children,\n      title,\n      show,\n      onConfirm,\n      onCancel,\n      textConfirm,\n      textCancel,\n      currentLocale,\n      clickOutToClose,\n      modalClassName,\n      cancelBtnClassName,\n      confirmBtnClassName,\n      closeBtn,\n      maskClassName,\n      headerClassName,\n      contentClassName,\n    } = this.props;\n    // if (!show) return null;\n    const footer = !currentLocale || (\n      !onCancel && !onConfirm\n    ) ? null : (\n      <div className={styles.footer}>\n        {onCancel ? (\n          <FlatButton\n            className={classnames(styles.btn, cancelBtnClassName)}\n            onClick={onCancel}>\n            {textCancel ||\n            i18n.getString('cancel', currentLocale)}\n          </FlatButton>\n        ) : null}\n        {onConfirm ? (\n          <FlatButton\n            className={classnames(styles.btn, confirmBtnClassName)}\n            onClick={onConfirm}>\n            {textConfirm ||\n            i18n.getString('confirm', currentLocale)}\n          </FlatButton>\n        ) : null}\n      </div>\n      );\n    return (\n      <div className={show ? classnames(styles.container, className) : styles.containerHidden}>\n        <div\n          className={show ? classnames(styles.mask, maskClassName) : styles.maskHidden}\n          onClick={clickOutToClose ? onCancel : () => {}}\n        />\n        <div className={show ? classnames(styles.modal, modalClassName) : styles.modalHidden}>\n          {title ?\n            <div className={classnames(styles.header, headerClassName)}>{title}</div> : null}\n          {closeBtn}\n          <div className={classnames(styles.content, contentClassName)}>\n            {children}\n          </div>\n          {footer}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      this.renderDialog(),\n      this._container,\n    );\n  }\n}\n\nModal.propTypes = {\n  className: PropTypes.string,\n  modalClassName: PropTypes.string,\n  cancelBtnClassName: PropTypes.string,\n  confirmBtnClassName: PropTypes.string,\n  children: PropTypes.node,\n  show: PropTypes.bool,\n  onConfirm: PropTypes.func,\n  onCancel: PropTypes.func,\n  clickOutToClose: PropTypes.bool,\n  title: PropTypes.string,\n  currentLocale: PropTypes.string,\n  textConfirm: PropTypes.string,\n  textCancel: PropTypes.string,\n  closeBtn: PropTypes.node,\n  appendDOM: PropTypes.object,\n  maskClassName: PropTypes.string,\n  headerClassName: PropTypes.string,\n  contentClassName: PropTypes.string,\n};\nModal.defaultProps = {\n  className: '',\n  currentLocale: '',\n  modalClassName: '',\n  cancelBtnClassName: '',\n  confirmBtnClassName: '',\n  children: undefined,\n  show: false,\n  onConfirm: undefined,\n  onCancel: undefined,\n  clickOutToClose: false,\n  title: undefined,\n  textConfirm: '',\n  textCancel: '',\n  closeBtn: undefined,\n  appendDOM: undefined,\n  maskClassName: undefined,\n  headerClassName: undefined,\n  contentClassName: undefined,\n};\n\n"]}