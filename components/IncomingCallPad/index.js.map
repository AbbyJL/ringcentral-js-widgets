{"version":3,"sources":["components/IncomingCallPad/index.js"],"names":["IncomingCallPad","props","state","showForward","replyMessage","showReplyWithMessage","toVoiceMailEnabled","replyMessageEnabled","onShowForwardChange","visible","setState","closeForwardForm","onShowReplyWithMessageChange","onReplyMessageChange","message","closeReplyWithMessage","toVoiceMail","voicemailTimeout","setTimeout","reject","replyWithMessage","value","replyTimeout","newProps","sessionId","clearTimeout","currentLocale","answer","forwardingNumbers","formatPhone","className","hasOtherActiveCall","answerAndEnd","answerAndHold","multiCallButtons","buttonRow","multiCallsButtonGroup","getString","callButton","voiceMailButton","singleCallButtons","answerButtonGroup","bigCallButton","answerButton","root","forwardContainner","containner","replyWithMessageContainner","onForward","searchContact","searchContactList","phoneTypeRenderer","propTypes","func","isRequired","string","array","bool","defaultProps","phone","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap_white.css';\n\nimport ForwardForm from '../ForwardForm';\nimport ReplyWithMessage from '../ReplyWithMessage';\nimport ActiveCallButton from '../ActiveCallButton';\nimport MultiCallAnswerButton from '../MultiCallAnswerButton';\n\nimport MessageIcon from '../../assets/images/MessageFill.svg';\nimport ForwardIcon from '../../assets/images/Forward.svg';\nimport IgnoreIcon from '../../assets/images/Ignore.svg';\nimport VoicemailIcon from '../../assets/images/Voicemail.svg';\nimport AnswerIcon from '../../assets/images/Answer.svg';\nimport styles from './styles.scss';\n\nimport i18n from './i18n';\n\nexport default class IncomingCallPad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForward: false,\n      replyMessage: null,\n      showReplyWithMessage: false,\n      toVoiceMailEnabled: true,\n      replyMessageEnabled: true,\n    };\n    this.onShowForwardChange = (visible) => {\n      this.setState({\n        showForward: visible,\n      });\n    };\n    this.closeForwardForm = () => {\n      this.onShowForwardChange(false);\n    };\n    this.onShowReplyWithMessageChange = (visible) => {\n      this.setState({\n        showReplyWithMessage: visible,\n      });\n    };\n    this.onReplyMessageChange = (message) => {\n      this.setState({ replyMessage: message });\n    };\n    this.closeReplyWithMessage = () => {\n      this.onShowReplyWithMessageChange(false);\n    };\n    this.toVoiceMail = () => {\n      this.props.toVoiceMail();\n      if (this.props.toVoiceMail) {\n        this.setState({\n          toVoiceMailEnabled: false\n        });\n        this.voicemailTimeout = setTimeout(() => {\n          this.props.reject();\n        }, 3000);\n      }\n    };\n    this.replyWithMessage = (value) => {\n      this.props.replyWithMessage(value);\n      if (this.props.replyWithMessage) {\n        this.setState({\n          replyMessageEnabled: false\n        });\n        this.replyTimeout = setTimeout(() => {\n          this.props.reject();\n        }, 3000);\n      }\n    };\n  }\n  componentWillReceiveProps(newProps) {\n    if (this.props.sessionId !== newProps.sessionId) {\n      if (this.replyTimeout) {\n        clearTimeout(this.replyTimeout);\n        this.replyTimeout = null;\n      }\n      if (this.voicemailTimeout) {\n        clearTimeout(this.voicemailTimeout);\n        this.voicemailTimeout = null;\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (this.replyTimeout) {\n      clearTimeout(this.replyTimeout);\n      this.replyTimeout = null;\n    }\n    if (this.voicemailTimeout) {\n      clearTimeout(this.voicemailTimeout);\n      this.voicemailTimeout = null;\n    }\n  }\n  render() {\n    const {\n      currentLocale,\n      reject,\n      answer,\n      forwardingNumbers,\n      formatPhone,\n      className,\n      hasOtherActiveCall,\n      answerAndEnd,\n      answerAndHold,\n    } = this.props;\n    // const isMultiCall = true;\n    const multiCallButtons = (\n      <div className={classnames(styles.buttonRow, styles.multiCallsButtonGroup)}>\n        <MultiCallAnswerButton\n          onClick={answerAndEnd}\n          title={i18n.getString('answerAndEnd', currentLocale)}\n          className={styles.callButton}\n          isEndOtherCall\n        />\n        <ActiveCallButton\n          onClick={this.toVoiceMail}\n          title={i18n.getString('toVoicemail', currentLocale)}\n          buttonClassName={this.state.toVoiceMailEnabled ? styles.voiceMailButton : ''}\n          icon={VoicemailIcon}\n          iconWidth={274}\n          iconX={116}\n          showBorder={!this.state.toVoiceMailEnabled}\n          className={styles.callButton}\n          disabled={!this.state.toVoiceMailEnabled}\n        />\n        <MultiCallAnswerButton\n          onClick={answerAndHold}\n          title={i18n.getString('answerAndHold', currentLocale)}\n          className={styles.callButton}\n          isEndOtherCall={false}\n        />\n      </div>\n    );\n    const singleCallButtons = (\n      <div className={classnames(styles.buttonRow, styles.answerButtonGroup)}>\n        <ActiveCallButton\n          onClick={this.toVoiceMail}\n          title={i18n.getString('toVoicemail', currentLocale)}\n          buttonClassName={this.state.toVoiceMailEnabled ? styles.voiceMailButton : ''}\n          icon={VoicemailIcon}\n          iconWidth={274}\n          iconX={116}\n          showBorder={!this.state.toVoiceMailEnabled}\n          className={styles.bigCallButton}\n          disabled={!this.state.toVoiceMailEnabled}\n        />\n        <ActiveCallButton\n          onClick={answer}\n          title={i18n.getString('answer', currentLocale)}\n          buttonClassName={styles.answerButton}\n          icon={AnswerIcon}\n          showBorder={false}\n          className={styles.bigCallButton}\n        />\n      </div>\n    );\n    return (\n      <div className={classnames(styles.root, className)}>\n        <div\n          className={styles.forwardContainner}\n          ref={(containner) => {\n            this.forwardContainner = containner;\n          }}\n        />\n        <div\n          className={styles.replyWithMessageContainner}\n          ref={(containner) => {\n            this.replyWithMessageContainner = containner;\n          }}\n        />\n        <div className={styles.buttonRow}>\n          <Tooltip\n            defaultVisible={false}\n            visible={this.state.showForward}\n            onVisibleChange={this.onShowForwardChange}\n            placement=\"topRight\"\n            trigger=\"click\"\n            arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n            getTooltipContainer={() => this.forwardContainner}\n            overlay={\n              <ForwardForm\n                forwardingNumbers={forwardingNumbers}\n                currentLocale={currentLocale}\n                onCancel={this.closeForwardForm}\n                formatPhone={formatPhone}\n                onForward={this.props.onForward}\n                searchContact={this.props.searchContact}\n                searchContactList={this.props.searchContactList}\n                phoneTypeRenderer={this.props.phoneTypeRenderer}\n              />\n            }\n          >\n            <ActiveCallButton\n              icon={ForwardIcon}\n              iconWidth={250}\n              iconX={125}\n              onClick={() => null}\n              title={i18n.getString('forward', currentLocale)}\n              className={styles.callButton}\n            />\n          </Tooltip>\n          <Tooltip\n            defaultVisible={false}\n            visible={this.state.showReplyWithMessage}\n            onVisibleChange={this.onShowReplyWithMessageChange}\n            placement=\"top\"\n            trigger=\"click\"\n            arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n            getTooltipContainer={() => this.replyWithMessageContainner}\n            overlay={\n              <ReplyWithMessage\n                currentLocale={currentLocale}\n                onCancel={this.closeReplyWithMessage}\n                value={this.state.replyMessage}\n                onChange={this.onReplyMessageChange}\n                onReply={this.replyWithMessage}\n                disabled={!this.state.replyMessageEnabled}\n              />\n            }\n          >\n            <ActiveCallButton\n              onClick={() => null}\n              icon={MessageIcon}\n              title={i18n.getString('reply', currentLocale)}\n              className={styles.callButton}\n            />\n          </Tooltip>\n          <ActiveCallButton\n            onClick={reject}\n            icon={IgnoreIcon}\n            title={i18n.getString('ignore', currentLocale)}\n            className={styles.callButton}\n          />\n        </div>\n        {hasOtherActiveCall ? multiCallButtons : singleCallButtons}\n      </div>\n    );\n  }\n}\n\nIncomingCallPad.propTypes = {\n  answer: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  toVoiceMail: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  formatPhone: PropTypes.func,\n  onForward: PropTypes.func.isRequired,\n  replyWithMessage: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  answerAndEnd: PropTypes.func,\n  answerAndHold: PropTypes.func,\n  hasOtherActiveCall: PropTypes.bool,\n  sessionId: PropTypes.string.isRequired,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n};\n\nIncomingCallPad.defaultProps = {\n  formatPhone: phone => phone,\n  className: null,\n  answerAndEnd: () => null,\n  answerAndHold: () => null,\n  hasOtherActiveCall: false,\n  phoneTypeRenderer: undefined,\n};\n"]}