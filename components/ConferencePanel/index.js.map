{"version":3,"sources":["components/ConferencePanel/index.js"],"names":["CheckBox","checked","onChange","className","checkbox","propTypes","bool","isRequired","func","defaultProps","DialInNumberItem","region","formattedPhoneNumber","dialInNumberItem","string","DialInNumberList","dialInNumbers","selected","length","dialInNumberList","map","e","indexOf","phoneNumber","selectChange","newSelection","forEach","curNum","push","concat","array","formatPin","number","replace","dialInNumbersLinks","rc","telus","bt","ConferencePanel","props","checkOverlap","mainCtrl","overlappedHeight","scrollHeight","clientHeight","scrollTop","mainCtrlOverlapped","state","setState","onAddionalNumbersSwitch","showAdditionalNumbers","inviteTxt","dialInNumber","additionalNumbers","participantCode","brand","alert","requireAditionalNumbers","formattedDialInNumber","find","additionalNumbersTxt","obj","p","fmt","join","additionalNumbersSection","name","code","inviteWithText","txt","formatDialInNumbers","showAdditionalNumberList","countryCode","areaCode","international","nextProps","window","addEventListener","removeEventListener","currentLocale","hostCode","updateDialInNumber","updateAdditionalNumbers","joinAsHost","allowJoinBeforeHost","additionalButtons","onAllowJoinBeforeHostChange","showHelpCommands","disableTxtBtn","selectNumberPage","getString","filter","additionalNumberObjs","n","additionalNumbersCtrl","width","linkLine","bottomClass","bottom","overlapped","setTimeout","container","main","ref","select","option","console","warn","formGroup","field","link","Date","now","button","primaryButton","object"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport messages from 'ringcentral-integration/modules/Conference/messages';\nimport Switch from '../Switch';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport Select from '../DropdownSelect';\nimport BackHeader from '../BackHeader';\nimport Button from '../Button';\nimport LinkLine from '../LinkLine';\n\n// TODO Move to a separate folder.\nfunction CheckBox({ checked, onChange }) {\n  const className = classNames(styles.checkbox, checked ? styles.checked : '');\n  return (\n    <div\n      className={className}\n      onClick={() => onChange && onChange(!checked)}>\n      ✓\n    </div>\n  );\n}\n\nCheckBox.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func\n};\n\nCheckBox.defaultProps = {\n  onChange: null\n};\n\nfunction DialInNumberItem({ region, formattedPhoneNumber }) {\n  return (\n    <div className={styles.dialInNumberItem}>\n      <span className={styles.region} title={region}>{region}</span>\n      <span>{formattedPhoneNumber}</span>\n    </div>\n  );\n}\nDialInNumberItem.propTypes = {\n  region: PropTypes.string.isRequired,\n  formattedPhoneNumber: PropTypes.string.isRequired,\n};\n\nfunction DialInNumberList({ dialInNumbers, selected, onChange }) {\n  if (dialInNumbers.length === 0) {\n    return '';\n  }\n  return (\n    <ul className={styles.dialInNumberList}>\n      {dialInNumbers.map((e) => {\n        const checked = selected.indexOf(e.phoneNumber) > -1;\n        const selectChange = () => {\n          let newSelection = [];\n          if (checked) {\n            selected.forEach(curNum => curNum !== e.phoneNumber && newSelection.push(curNum));\n          } else {\n            newSelection = selected.concat(e.phoneNumber);\n          }\n          onChange(newSelection);\n        };\n        return (\n          <li\n            key={e.phoneNumber}\n            onClick={selectChange}\n          >\n            <CheckBox className={styles.checkbox} checked={checked} />\n            <div className={styles.region}>{e.region}</div>\n            <div className={styles.phoneNumber}>{e.formattedPhoneNumber}</div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nDialInNumberList.propTypes = {\n  dialInNumbers: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction formatPin(number) {\n  return number.replace(/(\\d{3})/g, '$1-').replace(/-$/, '');\n}\n\nconst dialInNumbersLinks = {\n  rc: 'https://rcconf.net/1L06Hd5',\n  telus: 'https://telus.com/BusinessConnect/ConferencingFrequentlyAskedQuestions',\n  bt: 'https://www.btcloudphone.bt.com/conferencing'\n};\n\nclass ConferencePanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialInNumbers: this.formatDialInNumbers(props),\n      showAdditionalNumbers: false,\n      showAdditionalNumberList: false,\n      mainCtrlOverlapped: false\n    };\n  }\n\n  checkOverlap = () => {\n    const { mainCtrl } = this;\n    const overlappedHeight = mainCtrl.scrollHeight - mainCtrl.clientHeight - mainCtrl.scrollTop;\n    const mainCtrlOverlapped = overlappedHeight > 1;\n    if (mainCtrlOverlapped !== this.state.mainCtrlOverlapped) {\n      this.setState({ mainCtrlOverlapped });\n    }\n  }\n\n  onAddionalNumbersSwitch = (checked) => {\n    this.setState({\n      showAdditionalNumbers: checked,\n    });\n  };\n\n  inviteTxt = () => {\n    const { dialInNumber, additionalNumbers, participantCode, brand, alert } = this.props;\n    const { dialInNumbers, showAdditionalNumbers } = this.state;\n    if (showAdditionalNumbers && additionalNumbers.length < 1) {\n      alert(messages.requireAditionalNumbers);\n      return '';\n    }\n    const formattedDialInNumber = dialInNumbers.find(\n      e => e.phoneNumber === dialInNumber\n    ).formattedPhoneNumber;\n    const additionalNumbersTxt = additionalNumbers.map(p =>\n      dialInNumbers.find(obj => obj.phoneNumber === p)\n    ).map(fmt => `${fmt.region}  ${fmt.formattedPhoneNumber}`)\n      .join('\\n');\n    let additionalNumbersSection = '';\n    if (showAdditionalNumbers) {\n      additionalNumbersSection = `\n\nInternational Dial-in Numbers:\n${additionalNumbersTxt}\n\n`;\n    }\n    return `\nPlease join the ${brand.name} conference.\n\nDial-In Number:${formattedDialInNumber}\n${additionalNumbersSection}\nParticipant Access: ${formatPin(participantCode)}\n\nNeed an international dial-in phone number? Please visit ${dialInNumbersLinks[brand.code]}\n\nThis conference call is brought to you by ${brand.name} Conferencing.`;\n  }\n\n  inviteWithText = () => {\n    const txt = this.inviteTxt();\n    if (txt) {\n      this.props.inviteWithText(txt);\n    }\n  };\n\n  formatDialInNumbers({\n    dialInNumbers,\n    countryCode,\n    areaCode,\n  }) {\n    return dialInNumbers.map(e => ({\n      ...e,\n      formattedPhoneNumber: formatNumber({\n        phoneNumber: e.phoneNumber,\n        countryCode,\n        areaCode,\n        international: true\n      })\n    }));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.dialInNumbers !== this.props.dialInNumbers ||\n      nextProps.countryCode !== this.props.countryCode ||\n      nextProps.areaCode !== this.props.areaCode\n    ) {\n      this.setState({\n        dialInNumbers: this.formatDialInNumbers(nextProps),\n      });\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.checkOverlap, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.checkOverlap, false);\n  }\n\n  render() {\n    const {\n      currentLocale,\n      hostCode,\n      participantCode,\n      dialInNumber,\n      additionalNumbers,\n      updateDialInNumber,\n      updateAdditionalNumbers,\n      joinAsHost,\n      allowJoinBeforeHost,\n      additionalButtons,\n      onAllowJoinBeforeHostChange,\n      showHelpCommands,\n      disableTxtBtn\n    } = this.props;\n    const {\n      dialInNumbers,\n      showAdditionalNumbers,\n      showAdditionalNumberList,\n      mainCtrlOverlapped\n    } = this.state;\n    if (showAdditionalNumberList) {\n      return (\n        <div className={styles.selectNumberPage}>\n          <BackHeader onBackClick={() => this.setState({ showAdditionalNumberList: false })}>\n            {i18n.getString('selectNumbers', currentLocale)}\n          </BackHeader>\n          <DialInNumberList\n            dialInNumbers={dialInNumbers.filter(e => e.phoneNumber !== dialInNumber)}\n            selected={additionalNumbers}\n            onChange={updateAdditionalNumbers} />\n        </div>\n      );\n    }\n    const additionalNumberObjs = [];\n    for (const n of additionalNumbers) {\n      if (n !== dialInNumber) {\n        additionalNumberObjs.push(dialInNumbers.find(e => e.phoneNumber === n));\n      }\n    }\n    const additionalNumbersCtrl = showAdditionalNumbers ? (\n      <div style={{ width: '100%' }}>\n        <LinkLine\n          className={styles.linkLine}\n          onClick={() => { this.setState({ showAdditionalNumberList: true }); }} >\n          {i18n.getString('selectNumbers', currentLocale)}\n        </LinkLine>\n        <DialInNumberList\n          dialInNumbers={additionalNumberObjs}\n          selected={additionalNumbers}\n          onChange={updateAdditionalNumbers} />\n      </div>\n    ) : '';\n    const bottomClass = [styles.bottom];\n    if (mainCtrlOverlapped) bottomClass.push(styles.overlapped);\n    setTimeout(this.checkOverlap, 1);\n    return (\n      <div className={styles.container}>\n        <div\n          className={styles.main}\n          onScroll={this.checkOverlap}\n          ref={(ref) => { this.mainCtrl = ref; }}>\n          <div className={styles.dialInNumber}>\n            <label>{i18n.getString('dialInNumber', currentLocale)}</label>\n            <Select\n              className={styles.select}\n              value={dialInNumber}\n              onChange={option => updateDialInNumber(option.phoneNumber)}\n              renderFunction={DialInNumberItem}\n              renderValue={(phoneNumber) => {\n                const option = dialInNumbers.find(p => p.phoneNumber === phoneNumber);\n                if (!option) {\n                  console.warn(`Conference dial in number ${phoneNumber} is not found in the list.`);\n                }\n                return DialInNumberItem(option || dialInNumbers[0]);\n              }}\n              options={dialInNumbers}\n              disabled={false}\n              dropdownAlign=\"left\"\n            />\n          </div>\n          <div className={styles.formGroup}>\n            <label>{i18n.getString('hostAccess', currentLocale)}</label>\n            <div className={styles.field}>\n              {formatPin(hostCode)}\n            </div>\n          </div>\n          <div className={styles.formGroup}>\n            <label>{i18n.getString('participantsAccess', currentLocale)}</label>\n            <div className={styles.field}>\n              {formatPin(participantCode)}\n            </div>\n          </div>\n          <div className={styles.formGroup}>\n            <label>{i18n.getString('addinalDialInNumbers', currentLocale)}</label>\n            <span className={styles.field}>\n              <Switch\n                checked={showAdditionalNumbers}\n                onChange={this.onAddionalNumbersSwitch}\n              />\n            </span>\n            {additionalNumbersCtrl}\n          </div>\n          <div className={styles.formGroup}>\n            <label>{i18n.getString('enableJoinBeforeHost', currentLocale)}</label>\n            <span className={styles.field}>\n              <Switch\n                checked={allowJoinBeforeHost}\n                onChange={onAllowJoinBeforeHostChange}\n              />\n            </span>\n          </div>\n\n          <Button\n            onClick={showHelpCommands}\n            className={styles.link}>\n            {i18n.getString('conferenceCommands', currentLocale)}\n          </Button>\n        </div>\n        <div className={bottomClass.join(' ')}>\n          {additionalButtons.map(\n            Btn => (\n              <Btn\n                dialInNumber={dialInNumber}\n                getInviteTxt={this.inviteTxt}\n                key={Date.now()}\n              />)\n          )}\n          {!disableTxtBtn &&\n            <Button\n              className={styles.button}\n              onClick={this.inviteWithText}>\n              {i18n.getString('inviteWithText', currentLocale)}\n            </Button>}\n          <Button\n            className={styles.primaryButton}\n            onClick={() => joinAsHost(dialInNumber)}>\n            {i18n.getString('joinAsHost', currentLocale)}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\nConferencePanel.propTypes = {\n  dialInNumbers: PropTypes.array,\n  dialInNumber: PropTypes.string.isRequired,\n  additionalNumbers: PropTypes.array.isRequired,\n  updateAdditionalNumbers: PropTypes.func.isRequired,\n  updateDialInNumber: PropTypes.func.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  hostCode: PropTypes.string.isRequired,\n  participantCode: PropTypes.string.isRequired,\n  inviteWithText: PropTypes.func.isRequired,\n  joinAsHost: PropTypes.func.isRequired,\n  allowJoinBeforeHost: PropTypes.bool.isRequired,\n  onAllowJoinBeforeHostChange: PropTypes.func.isRequired,\n  additionalButtons: PropTypes.array,\n  showHelpCommands: PropTypes.func.isRequired,\n  alert: PropTypes.func.isRequired,\n  disableTxtBtn: PropTypes.bool.isRequired,\n  brand: PropTypes.object.isRequired\n};\nConferencePanel.defaultProps = {\n  dialInNumbers: [],\n  additionalButtons: []\n};\n\nexport default ConferencePanel;\n"]}