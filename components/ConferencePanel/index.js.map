{"version":3,"sources":["components/ConferencePanel/index.js"],"names":["CheckBox","checked","onChange","background","border","width","height","fontSize","lineHeight","color","display","textAlign","userSelect","propTypes","bool","isRequired","func","defaultProps","DialInNumberItem","region","formattedPhoneNumber","float","string","DialInNumberList","dialInNumbers","selected","length","dialInNumberList","map","e","indexOf","phoneNumber","selectChange","newSelection","forEach","curNum","push","concat","checkbox","array","formatPin","number","replace","ConferencePanel","props","onAddionalNumbersSwitch","setState","showAdditionalNumbers","inviteWithText","inviteTxt","state","formatDialInNumbers","showAdditionalNumberList","dialInNumber","additionalNumbers","participantCode","formattedDialInNumber","find","additionalNumbersTxt","obj","p","fmt","join","additionalNumbersSection","countryCode","areaCode","international","nextProps","currentLocale","hostCode","updateDialInNumber","updateAdditionalNumbers","joinAsHost","allowJoinBeforeHost","additionalButtons","onAllowJoinBeforeHostChange","showHelpCommands","selectNumberPage","getString","additionalNumberObjs","n","additionalNumbersCtrl","linkLine","container","main","select","option","console","warn","formGroup","field","link","bottom","Date","now","button","primaryButton"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,QAAT,OAAyC;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACvC,MAAIC,aAAa,aAAjB;AACA,MAAIC,SAAS,mBAAb;AACA,MAAIH,OAAJ,EAAa;AACXE,iBAAa,SAAb;AACAC,aAAS,mBAAT;AACD;AACD,SACE;AAAA;AAAA;AACE,eAAS;AAAA,eAAMF,YAAYA,SAAS,CAACD,OAAV,CAAlB;AAAA,OADX;AAEE,aAAO;AACLI,eAAO,EADF;AAELC,gBAAQ,EAFH;AAGLC,kBAAU,EAHL;AAILC,oBAAY,MAJP;AAKLC,eAAO,MALF;AAMLC,iBAAS,cANJ;AAOLC,mBAAW,QAPN;AAQLC,oBAAY,MARP;AASLT,8BATK;AAULC;AAVK,OAFT;AAAA;AAAA,GADF;AAkBD;;AAEDJ,SAASa,SAAT,GAAqB;AACnBZ,WAAS,oBAAUa,IAAV,CAAeC,UADL;AAEnBb,YAAU,oBAAUc;AAFD,CAArB;;AAKAhB,SAASiB,YAAT,GAAwB;AACtBf,YAAU;AADY,CAAxB;;AAIA,SAASgB,gBAAT,QAA4D;AAAA,MAAhCC,MAAgC,SAAhCA,MAAgC;AAAA,MAAxBC,oBAAwB,SAAxBA,oBAAwB;;AAC1D,SACE;AAAA;AAAA;AACGD,UADH;AAEE;AAAA;AAAA,QAAM,OAAO,EAAEE,OAAO,OAAT,EAAb;AAAkCD;AAAlC;AAFF,GADF;AAMD;AACDF,iBAAiBL,SAAjB,GAA6B;AAC3BM,UAAQ,oBAAUG,MAAV,CAAiBP,UADE;AAE3BK,wBAAsB,oBAAUE,MAAV,CAAiBP;AAFZ,CAA7B;;AAKA,SAASQ,gBAAT,QAAiE;AAAA,MAArCC,aAAqC,SAArCA,aAAqC;AAAA,MAAtBC,QAAsB,SAAtBA,QAAsB;AAAA,MAAZvB,QAAY,SAAZA,QAAY;;AAC/D,MAAIsB,cAAcE,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,WAAO,EAAP;AACD;AACD,SACE;AAAA;AAAA,MAAI,WAAW,iBAAOC,gBAAtB;AACGH,kBAAcI,GAAd,CAAkB,UAACC,CAAD,EAAO;AACxB,UAAM5B,UAAUwB,SAASK,OAAT,CAAiBD,EAAEE,WAAnB,IAAkC,CAAC,CAAnD;AACA,UAAMC,eAAe,SAAfA,YAAe,GAAM;AACzB,YAAIC,eAAe,EAAnB;AACA,YAAIhC,OAAJ,EAAa;AACXwB,mBAASS,OAAT,CAAiB;AAAA,mBAAUC,WAAWN,EAAEE,WAAb,IAA4BE,aAAaG,IAAb,CAAkBD,MAAlB,CAAtC;AAAA,WAAjB;AACD,SAFD,MAEO;AACLF,yBAAeR,SAASY,MAAT,CAAgBR,EAAEE,WAAlB,CAAf;AACD;AACD7B,iBAAS+B,YAAT;AACD,OARD;AASA,aACE;AAAA;AAAA;AACE,eAAKJ,EAAEE,WADT;AAEE,mBAASC;AAFX;AAIE,sCAAC,QAAD,IAAU,WAAW,iBAAOM,QAA5B,EAAsC,SAASrC,OAA/C,GAJF;AAKE;AAAA;AAAA,YAAM,WAAW,iBAAOkB,MAAxB;AAAiCU,YAAEV;AAAnC,SALF;AAME;AAAA;AAAA,YAAM,WAAW,iBAAOY,WAAxB;AAAsCF,YAAET;AAAxC;AANF,OADF;AAUD,KArBA;AADH,GADF;AA0BD;AACDG,iBAAiBV,SAAjB,GAA6B;AAC3BW,iBAAe,oBAAUe,KAAV,CAAgBxB,UADJ;AAE3BU,YAAU,oBAAUc,KAAV,CAAgBxB,UAFC;AAG3Bb,YAAU,oBAAUc,IAAV,CAAeD;AAHE,CAA7B;;AAMA,SAASyB,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,SAAOA,OAAOC,OAAP,CAAe,UAAf,EAA2B,KAA3B,EAAkCA,OAAlC,CAA0C,IAA1C,EAAgD,EAAhD,CAAP;AACD;;IAEKC,e;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,wJACXA,KADW;;AAAA,UASnBC,uBATmB,GASO,UAAC5C,OAAD,EAAa;AACrC,YAAK6C,QAAL,CAAc;AACZC,+BAAuB9C;AADX,OAAd;AAGD,KAbkB;;AAAA,UA8CnB+C,cA9CmB,GA8CF,YAAM;AACrB,YAAKJ,KAAL,CAAWI,cAAX,CAA0B,MAAKC,SAAL,EAA1B;AACD,KAhDkB;;AAEjB,UAAKC,KAAL,GAAa;AACX1B,qBAAe,MAAK2B,mBAAL,CAAyBP,KAAzB,CADJ;AAEXG,6BAAuB,KAFZ;AAGXK,gCAA0B;AAHf,KAAb;AAFiB;AAOlB;;;;gCAQW;AAAA,mBACmD,KAAKR,KADxD;AAAA,UACFS,YADE,UACFA,YADE;AAAA,UACYC,iBADZ,UACYA,iBADZ;AAAA,UAC+BC,eAD/B,UAC+BA,eAD/B;AAAA,mBAEuC,KAAKL,KAF5C;AAAA,UAEF1B,aAFE,UAEFA,aAFE;AAAA,UAEauB,qBAFb,UAEaA,qBAFb;;AAGV,UAAMS,wBAAwBhC,cAAciC,IAAd,CAC5B;AAAA,eAAK5B,EAAEE,WAAF,KAAkBsB,YAAvB;AAAA,OAD4B,EAE5BjC,oBAFF;AAGA,UAAMsC,uBAAuBJ,kBAAkB1B,GAAlB,CAAsB;AAAA,eACjDJ,cAAciC,IAAd,CAAmB;AAAA,iBAAOE,IAAI5B,WAAJ,KAAoB6B,CAA3B;AAAA,SAAnB,CADiD;AAAA,OAAtB,EAE3BhC,GAF2B,CAEvB;AAAA,eAAUiC,IAAI1C,MAAd,UAAyB0C,IAAIzC,oBAA7B;AAAA,OAFuB,EAG1B0C,IAH0B,CAGrB,IAHqB,CAA7B;AAIA,UAAIC,2BAA2B,EAA/B;AACA,UAAIhB,qBAAJ,EAA2B;AACzBgB,4EAGJL,oBAHI;AAMD;AACD,+EAGcF,qBAHd,UAIFO,wBAJE,8BAKkBvB,UAAUe,eAAV,CALlB;AAUD;;;+CAUE;AAAA,UAHD/B,aAGC,SAHDA,aAGC;AAAA,UAFDwC,WAEC,SAFDA,WAEC;AAAA,UADDC,QACC,SADDA,QACC;;AACD,aAAOzC,cAAcI,GAAd,CAAkB;AAAA,0CACpBC,CADoB;AAEvBT,gCAAsB,4BAAa;AACjCW,yBAAaF,EAAEE,WADkB;AAEjCiC,oCAFiC;AAGjCC,8BAHiC;AAIjCC,2BAAe;AAJkB,WAAb;AAFC;AAAA,OAAlB,CAAP;AASD;;;8CAEyBC,S,EAAW;AACnC,UACEA,UAAU3C,aAAV,KAA4B,KAAKoB,KAAL,CAAWpB,aAAvC,IACA2C,UAAUH,WAAV,KAA0B,KAAKpB,KAAL,CAAWoB,WADrC,IAEAG,UAAUF,QAAV,KAAuB,KAAKrB,KAAL,CAAWqB,QAHpC,EAIE;AACA,aAAKnB,QAAL,CAAc;AACZtB,yBAAe,KAAK2B,mBAAL,CAAyBgB,SAAzB;AADH,SAAd;AAGD;AACF;;;6BAEQ;AAAA;;AAAA,oBAcH,KAAKvB,KAdF;AAAA,UAELwB,aAFK,WAELA,aAFK;AAAA,UAGLC,QAHK,WAGLA,QAHK;AAAA,UAILd,eAJK,WAILA,eAJK;AAAA,UAKLF,YALK,WAKLA,YALK;AAAA,UAMLC,iBANK,WAMLA,iBANK;AAAA,UAOLgB,kBAPK,WAOLA,kBAPK;AAAA,UAQLC,uBARK,WAQLA,uBARK;AAAA,UASLC,UATK,WASLA,UATK;AAAA,UAULC,mBAVK,WAULA,mBAVK;AAAA,UAWLC,iBAXK,WAWLA,iBAXK;AAAA,UAYLC,2BAZK,WAYLA,2BAZK;AAAA,UAaLC,gBAbK,WAaLA,gBAbK;AAAA,oBAmBH,KAAK1B,KAnBF;AAAA,UAgBL1B,aAhBK,WAgBLA,aAhBK;AAAA,UAiBLuB,qBAjBK,WAiBLA,qBAjBK;AAAA,UAkBLK,wBAlBK,WAkBLA,wBAlBK;;AAoBP,UAAIA,wBAAJ,EAA8B;AAC5B,eACE;AAAA;AAAA,YAAK,WAAW,iBAAOyB,gBAAvB;AACE;AAAA;AAAA,cAAY,aAAa;AAAA,uBAAM,OAAK/B,QAAL,CAAc,EAAEM,0BAA0B,KAA5B,EAAd,CAAN;AAAA,eAAzB;AACG,2BAAK0B,SAAL,CAAe,eAAf,EAAgCV,aAAhC;AADH,WADF;AAIE,wCAAC,gBAAD;AACE,2BAAe5C,aADjB;AAEE,sBAAU8B,iBAFZ;AAGE,sBAAUiB,uBAHZ;AAJF,SADF;AAWD;AACD,UAAMQ,uBAAuB,EAA7B;AAjCO;AAAA;AAAA;;AAAA;AAAA;AAAA,cAkCIC,CAlCJ;;AAmCLD,+BAAqB3C,IAArB,CAA0BZ,cAAciC,IAAd,CAAmB;AAAA,mBAAK5B,EAAEE,WAAF,KAAkBiD,CAAvB;AAAA,WAAnB,CAA1B;AAnCK;;AAkCP,wDAAgB1B,iBAAhB,4GAAmC;AAAA;AAElC;AApCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqCP,UAAM2B,wBAAwBlC,wBAC5B;AAAA;AAAA,UAAK,OAAO,EAAE1C,OAAO,MAAT,EAAZ;AACE;AAAA;AAAA;AACE,uBAAW,iBAAO6E,QADpB;AAEE,qBAAS,mBAAM;AAAE,qBAAKpC,QAAL,CAAc,EAAEM,0BAA0B,IAA5B,EAAd;AAAoD,aAFvE;AAGG,yBAAK0B,SAAL,CAAe,eAAf,EAAgCV,aAAhC;AAHH,SADF;AAME,sCAAC,gBAAD;AACE,yBAAeW,oBADjB;AAEE,oBAAUzB,iBAFZ;AAGE,oBAAUiB,uBAHZ;AANF,OAD4B,GAY1B,EAZJ;AAaA,aACE;AAAA;AAAA,UAAK,WAAW,iBAAOY,SAAvB;AACE;AAAA;AAAA,YAAK,WAAW,iBAAOC,IAAvB;AACE;AAAA;AAAA,cAAK,WAAW,iBAAO/B,YAAvB;AACE;AAAA;AAAA;AAAQ,6BAAKyB,SAAL,CAAe,cAAf,EAA+BV,aAA/B;AAAR,aADF;AAEE;AACE,yBAAW,iBAAOiB,MADpB;AAEE,qBAAOhC,YAFT;AAGE,wBAAU;AAAA,uBAAUiB,mBAAmBgB,OAAOvD,WAA1B,CAAV;AAAA,eAHZ;AAIE,8BAAgBb,gBAJlB;AAKE,2BAAa,qBAACa,WAAD,EAAiB;AAC5B,oBAAMuD,SAAS9D,cAAciC,IAAd,CAAmB;AAAA,yBAAKG,EAAE7B,WAAF,KAAkBA,WAAvB;AAAA,iBAAnB,CAAf;AACA,oBAAI,CAACuD,MAAL,EAAa;AACXC,0BAAQC,IAAR,gCAA0CzD,WAA1C;AACD;AACD,uBAAOb,iBAAiBoE,UAAU9D,cAAc,CAAd,CAA3B,CAAP;AACD,eAXH;AAYE,uBAASA,aAZX;AAaE,wBAAU,KAbZ;AAcE,6BAAc,MAdhB;AAeE;AAfF;AAFF,WADF;AAqBE;AAAA;AAAA,cAAK,WAAW,iBAAOiE,SAAvB;AACE;AAAA;AAAA;AAAQ,6BAAKX,SAAL,CAAe,YAAf,EAA6BV,aAA7B;AAAR,aADF;AAEE;AAAA;AAAA,gBAAK,WAAW,iBAAOsB,KAAvB;AACGlD,wBAAU6B,QAAV;AADH;AAFF,WArBF;AA2BE;AAAA;AAAA,cAAK,WAAW,iBAAOoB,SAAvB;AACE;AAAA;AAAA;AAAQ,6BAAKX,SAAL,CAAe,oBAAf,EAAqCV,aAArC;AAAR,aADF;AAEE;AAAA;AAAA,gBAAK,WAAW,iBAAOsB,KAAvB;AACGlD,wBAAUe,eAAV;AADH;AAFF,WA3BF;AAiCE;AAAA;AAAA,cAAK,WAAW,iBAAOkC,SAAvB;AACE;AAAA;AAAA;AAAQ,6BAAKX,SAAL,CAAe,sBAAf,EAAuCV,aAAvC;AAAR,aADF;AAEE;AAAA;AAAA,gBAAM,WAAW,iBAAOsB,KAAxB;AACE;AACE,yBAAS3C,qBADX;AAEE,0BAAU,KAAKF;AAFjB;AADF,aAFF;AAQGoC;AARH,WAjCF;AA2CE;AAAA;AAAA,cAAK,WAAW,iBAAOQ,SAAvB;AACE;AAAA;AAAA;AAAQ,6BAAKX,SAAL,CAAe,sBAAf,EAAuCV,aAAvC;AAAR,aADF;AAEE;AAAA;AAAA,gBAAM,WAAW,iBAAOsB,KAAxB;AACE;AACE,yBAASjB,mBADX;AAEE,0BAAUE;AAFZ;AADF;AAFF,WA3CF;AAqDE;AAAA;AAAA;AACE,uBAASC,gBADX;AAEE,yBAAW,iBAAOe,IAFpB;AAGG,2BAAKb,SAAL,CAAe,oBAAf,EAAqCV,aAArC;AAHH;AArDF,SADF;AA4DE;AAAA;AAAA,YAAK,WAAW,iBAAOwB,MAAvB;AACGlB,4BAAkB9C,GAAlB,CACC;AAAA,mBACE,8BAAC,GAAD;AACE,4BAAcyB,YADhB;AAEE,0BAAY,OAAKJ,SAAL,EAFd;AAGE,mBAAK4C,KAAKC,GAAL;AAHP,cADF;AAAA,WADD,CADH;AASE;AAAA;AAAA;AACE,yBAAW,iBAAOC,MADpB;AAEE,uBAAS,KAAK/C,cAFhB;AAGG,2BAAK8B,SAAL,CAAe,gBAAf,EAAiCV,aAAjC;AAHH,WATF;AAcE;AAAA;AAAA;AACE,yBAAW,iBAAO4B,aADpB;AAEE,uBAAS;AAAA,uBAAMxB,WAAWnB,YAAX,CAAN;AAAA,eAFX;AAGG,2BAAKyB,SAAL,CAAe,YAAf,EAA6BV,aAA7B;AAHH;AAdF;AA5DF,OADF;AAmFD;;;;;AAEHzB,gBAAgB9B,SAAhB,GAA4B;AAC1BW,iBAAe,oBAAUe,KADC;AAE1Bc,gBAAc,oBAAU/B,MAAV,CAAiBP,UAFL;AAG1BuC,qBAAmB,oBAAUf,KAAV,CAAgBxB,UAHT;AAI1BwD,2BAAyB,oBAAUvD,IAAV,CAAeD,UAJd;AAK1BuD,sBAAoB,oBAAUtD,IAAV,CAAeD,UALT;AAM1BiD,eAAa,oBAAU1C,MAAV,CAAiBP,UANJ;AAO1BkD,YAAU,oBAAU3C,MAAV,CAAiBP,UAPD;AAQ1BqD,iBAAe,oBAAU9C,MAAV,CAAiBP,UARN;AAS1BsD,YAAU,oBAAU/C,MAAV,CAAiBP,UATD;AAU1BwC,mBAAiB,oBAAUjC,MAAV,CAAiBP,UAVR;AAW1BiC,kBAAgB,oBAAUhC,IAAV,CAAeD,UAXL;AAY1ByD,cAAY,oBAAUxD,IAAV,CAAeD,UAZD;AAa1B0D,uBAAqB,oBAAU3D,IAAV,CAAeC,UAbV;AAc1B4D,+BAA6B,oBAAU3D,IAAV,CAAeD,UAdlB;AAe1B2D,qBAAmB,oBAAUnC,KAfH;AAgB1BqC,oBAAkB,oBAAU5D,IAAV,CAAeD;AAhBP,CAA5B;AAkBA4B,gBAAgB1B,YAAhB,GAA+B;AAC7BO,iBAAe,EADc;AAE7BkD,qBAAmB;AAFU,CAA/B;;kBAKe/B,e","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport Switch from '../Switch';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport Select from '../DropdownSelect';\nimport BackHeader from '../BackHeader';\nimport Button from '../Button';\nimport LinkLine from '../LinkLine';\n\nfunction CheckBox({ checked, onChange }) {\n  let background = 'transparent';\n  let border = 'solid 1px #e2e2e2';\n  if (checked) {\n    background = '#0684bd';\n    border = 'solid 1px #0684bd';\n  }\n  return (\n    <div\n      onClick={() => onChange && onChange(!checked)}\n      style={{\n        width: 13,\n        height: 13,\n        fontSize: 13,\n        lineHeight: '13px',\n        color: '#fff',\n        display: 'inline-block',\n        textAlign: 'center',\n        userSelect: 'none',\n        background,\n        border\n      }}>\n      ✓\n    </div>\n  );\n}\n\nCheckBox.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func\n};\n\nCheckBox.defaultProps = {\n  onChange: null\n};\n\nfunction DialInNumberItem({ region, formattedPhoneNumber }) {\n  return (\n    <div>\n      {region}\n      <span style={{ float: 'right' }}>{formattedPhoneNumber}</span>\n    </div>\n  );\n}\nDialInNumberItem.propTypes = {\n  region: PropTypes.string.isRequired,\n  formattedPhoneNumber: PropTypes.string.isRequired,\n};\n\nfunction DialInNumberList({ dialInNumbers, selected, onChange }) {\n  if (dialInNumbers.length === 0) {\n    return '';\n  }\n  return (\n    <ul className={styles.dialInNumberList}>\n      {dialInNumbers.map((e) => {\n        const checked = selected.indexOf(e.phoneNumber) > -1;\n        const selectChange = () => {\n          let newSelection = [];\n          if (checked) {\n            selected.forEach(curNum => curNum !== e.phoneNumber && newSelection.push(curNum));\n          } else {\n            newSelection = selected.concat(e.phoneNumber);\n          }\n          onChange(newSelection);\n        };\n        return (\n          <li\n            key={e.phoneNumber}\n            onClick={selectChange}\n          >\n            <CheckBox className={styles.checkbox} checked={checked} />\n            <span className={styles.region}>{e.region}</span>\n            <span className={styles.phoneNumber}>{e.formattedPhoneNumber}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nDialInNumberList.propTypes = {\n  dialInNumbers: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction formatPin(number) {\n  return number.replace(/(\\d{3})/g, '$1-').replace(/-$/, '');\n}\n\nclass ConferencePanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialInNumbers: this.formatDialInNumbers(props),\n      showAdditionalNumbers: false,\n      showAdditionalNumberList: false,\n    };\n  }\n\n  onAddionalNumbersSwitch = (checked) => {\n    this.setState({\n      showAdditionalNumbers: checked,\n    });\n  };\n\n  inviteTxt() {\n    const { dialInNumber, additionalNumbers, participantCode } = this.props;\n    const { dialInNumbers, showAdditionalNumbers } = this.state;\n    const formattedDialInNumber = dialInNumbers.find(\n      e => e.phoneNumber === dialInNumber\n    ).formattedPhoneNumber;\n    const additionalNumbersTxt = additionalNumbers.map(p =>\n      dialInNumbers.find(obj => obj.phoneNumber === p)\n    ).map(fmt => `${fmt.region}  ${fmt.formattedPhoneNumber}`)\n      .join('\\n');\n    let additionalNumbersSection = '';\n    if (showAdditionalNumbers) {\n      additionalNumbersSection = `\n\nInternational Dial-in Numbers:\n${additionalNumbersTxt}\n\n`;\n    }\n    return `\nPlease join the RingCentral conference.\n\nDial-In Numbers:${formattedDialInNumber}\n${additionalNumbersSection}\nParticipant Access: ${formatPin(participantCode)}\n\nNeed an international dial-in phone number? Please visit https://rcconf.net/1L06Hd5\n\nThis conference call is brought to you by RingCentral Conferencing.`;\n  }\n\n  inviteWithText = () => {\n    this.props.inviteWithText(this.inviteTxt());\n  };\n\n  formatDialInNumbers({\n    dialInNumbers,\n    countryCode,\n    areaCode,\n  }) {\n    return dialInNumbers.map(e => ({\n      ...e,\n      formattedPhoneNumber: formatNumber({\n        phoneNumber: e.phoneNumber,\n        countryCode,\n        areaCode,\n        international: true\n      })\n    }));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.dialInNumbers !== this.props.dialInNumbers ||\n      nextProps.countryCode !== this.props.countryCode ||\n      nextProps.areaCode !== this.props.areaCode\n    ) {\n      this.setState({\n        dialInNumbers: this.formatDialInNumbers(nextProps),\n      });\n    }\n  }\n\n  render() {\n    const {\n      currentLocale,\n      hostCode,\n      participantCode,\n      dialInNumber,\n      additionalNumbers,\n      updateDialInNumber,\n      updateAdditionalNumbers,\n      joinAsHost,\n      allowJoinBeforeHost,\n      additionalButtons,\n      onAllowJoinBeforeHostChange,\n      showHelpCommands\n    } = this.props;\n    const {\n      dialInNumbers,\n      showAdditionalNumbers,\n      showAdditionalNumberList\n    } = this.state;\n    if (showAdditionalNumberList) {\n      return (\n        <div className={styles.selectNumberPage}>\n          <BackHeader onBackClick={() => this.setState({ showAdditionalNumberList: false })}>\n            {i18n.getString('selectNumbers', currentLocale)}\n          </BackHeader>\n          <DialInNumberList\n            dialInNumbers={dialInNumbers}\n            selected={additionalNumbers}\n            onChange={updateAdditionalNumbers} />\n        </div>\n      );\n    }\n    const additionalNumberObjs = [];\n    for (const n of additionalNumbers) {\n      additionalNumberObjs.push(dialInNumbers.find(e => e.phoneNumber === n));\n    }\n    const additionalNumbersCtrl = showAdditionalNumbers ? (\n      <div style={{ width: '100%' }}>\n        <LinkLine\n          className={styles.linkLine}\n          onClick={() => { this.setState({ showAdditionalNumberList: true }); }} >\n          {i18n.getString('selectNumbers', currentLocale)}\n        </LinkLine>\n        <DialInNumberList\n          dialInNumbers={additionalNumberObjs}\n          selected={additionalNumbers}\n          onChange={updateAdditionalNumbers} />\n      </div>\n    ) : '';\n    return (\n      <div className={styles.container}>\n        <div className={styles.main}>\n          <div className={styles.dialInNumber}>\n            <label>{i18n.getString('dialInNumber', currentLocale)}</label>\n            <Select\n              className={styles.select}\n              value={dialInNumber}\n              onChange={option => updateDialInNumber(option.phoneNumber)}\n              renderFunction={DialInNumberItem}\n              renderValue={(phoneNumber) => {\n                const option = dialInNumbers.find(p => p.phoneNumber === phoneNumber);\n                if (!option) {\n                  console.warn(`Conference dial in number ${phoneNumber} is not found in the list.`);\n                }\n                return DialInNumberItem(option || dialInNumbers[0]);\n              }}\n              options={dialInNumbers}\n              disabled={false}\n              dropdownAlign=\"left\"\n              titleEnabled\n            />\n          </div>\n          <div className={styles.formGroup}>\n            <label>{i18n.getString('hostAccess', currentLocale)}</label>\n            <div className={styles.field}>\n              {formatPin(hostCode)}\n            </div>\n          </div>\n          <div className={styles.formGroup}>\n            <label>{i18n.getString('participantsAccess', currentLocale)}</label>\n            <div className={styles.field}>\n              {formatPin(participantCode)}\n            </div>\n          </div>\n          <div className={styles.formGroup}>\n            <label>{i18n.getString('addinalDialInNumbers', currentLocale)}</label>\n            <span className={styles.field}>\n              <Switch\n                checked={showAdditionalNumbers}\n                onChange={this.onAddionalNumbersSwitch}\n              />\n            </span>\n            {additionalNumbersCtrl}\n          </div>\n          <div className={styles.formGroup}>\n            <label>{i18n.getString('enableJoinBeforeHost', currentLocale)}</label>\n            <span className={styles.field}>\n              <Switch\n                checked={allowJoinBeforeHost}\n                onChange={onAllowJoinBeforeHostChange}\n              />\n            </span>\n          </div>\n\n          <Button\n            onClick={showHelpCommands}\n            className={styles.link}>\n            {i18n.getString('conferenceCommands', currentLocale)}\n          </Button>\n        </div>\n        <div className={styles.bottom}>\n          {additionalButtons.map(\n            Btn => (\n              <Btn\n                dialInNumber={dialInNumber}\n                inviteText={this.inviteTxt()}\n                key={Date.now()}\n              />)\n          )}\n          <Button\n            className={styles.button}\n            onClick={this.inviteWithText}>\n            {i18n.getString('inviteWithText', currentLocale)}\n          </Button>\n          <Button\n            className={styles.primaryButton}\n            onClick={() => joinAsHost(dialInNumber)}>\n            {i18n.getString('joinAsHost', currentLocale)}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\nConferencePanel.propTypes = {\n  dialInNumbers: PropTypes.array,\n  dialInNumber: PropTypes.string.isRequired,\n  additionalNumbers: PropTypes.array.isRequired,\n  updateAdditionalNumbers: PropTypes.func.isRequired,\n  updateDialInNumber: PropTypes.func.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  hostCode: PropTypes.string.isRequired,\n  participantCode: PropTypes.string.isRequired,\n  inviteWithText: PropTypes.func.isRequired,\n  joinAsHost: PropTypes.func.isRequired,\n  allowJoinBeforeHost: PropTypes.bool.isRequired,\n  onAllowJoinBeforeHostChange: PropTypes.func.isRequired,\n  additionalButtons: PropTypes.array,\n  showHelpCommands: PropTypes.func.isRequired\n};\nConferencePanel.defaultProps = {\n  dialInNumbers: [],\n  additionalButtons: []\n};\n\nexport default ConferencePanel;\n"]}