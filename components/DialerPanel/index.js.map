{"version":3,"sources":["components/DialerPanel/index.js"],"names":["DialerPanel","callButtonDisabled","className","onToNumberChange","onCallButtonClick","toNumber","fromNumber","fromNumbers","changeFromNumber","formatPhone","isWebphoneMode","currentLocale","showSpinner","dialButtonVolume","dialButtonMuted","searchContact","searchContactList","recipient","clearToNumber","setRecipient","clearRecipient","onCallFunc","content","root","inputFields","dialButtons","dialPad","key","callBtnRow","callBtn","dialBtn","disabled","propTypes","string","func","isRequired","bool","arrayOf","shape","phoneNumber","usageType","number","name","entityType","phoneType","defaultProps"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,SAASA,WAAT,OAqBG;AAAA,MApBDC,kBAoBC,QApBDA,kBAoBC;AAAA,MAnBDC,SAmBC,QAnBDA,SAmBC;AAAA,MAlBDC,gBAkBC,QAlBDA,gBAkBC;AAAA,MAjBDC,iBAiBC,QAjBDA,iBAiBC;AAAA,MAhBDC,QAgBC,QAhBDA,QAgBC;AAAA,MAfDC,UAeC,QAfDA,UAeC;AAAA,MAdDC,WAcC,QAdDA,WAcC;AAAA,MAbDC,gBAaC,QAbDA,gBAaC;AAAA,MAZDC,WAYC,QAZDA,WAYC;AAAA,MAXDC,cAWC,QAXDA,cAWC;AAAA,MAVDC,aAUC,QAVDA,aAUC;AAAA,MATDC,WASC,QATDA,WASC;AAAA,MARDC,gBAQC,QARDA,gBAQC;AAAA,MAPDC,eAOC,QAPDA,eAOC;AAAA,MANDC,aAMC,QANDA,aAMC;AAAA,MALDC,iBAKC,QALDA,iBAKC;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFDC,YAEC,QAFDA,YAEC;AAAA,MADDC,cACC,QADDA,cACC;;AACD,MAAMC,aAAa,SAAbA,UAAa,GAAM;AACvB,QAAI,CAACpB,kBAAL,EAAyB;AACvBG;AACD;AACF,GAJD;AAKA,MAAMkB,UAAUV,cAAe,6DAAf,GAAqC,IAArD;AACA,SACE;AAAA;AAAA,MAAK,WAAW,0BAAW,iBAAOW,IAAlB,EAAwBrB,SAAxB,CAAhB;AACE;AACE,aAAOG,QADT;AAEE,gBAAUF,gBAFZ;AAGE,eAASe,aAHX;AAIE,iBAAWD,SAJb;AAKE,uBAAiBE,YALnB;AAME,4BAAsBC,cANxB;AAOE,qBAAeL,aAPjB;AAQE,yBAAmBC,iBARrB;AASE,0BAAoBP,WATtB;AAUE,qBAAeE,aAVjB;AAWE,wBAXF;AAYE;AAZF,MADF;AAeE;AAAA;AAAA,QAAK,WAAW,iBAAOa,WAAvB;AACE;AACE,oBAAYlB,UADd;AAEE,qBAAaC,WAFf;AAGE,kBAAUC,gBAHZ;AAIE,qBAAaC,WAJf;AAKE,uBAAeE,aALjB;AAME,gBAAQ,CAACD;AANX;AADF,KAfF;AAyBE;AAAA;AAAA,QAAK,WAAW,iBAAOe,WAAvB;AACE;AACE,mBAAW,iBAAOC,OADpB;AAEE,wBAAgB,wBAACC,GAAD,EAAS;AACvBxB,2BAAiBE,WAAWsB,GAA5B;AACD,SAJH;AAKE,0BAAkBd,gBALpB;AAME,yBAAiBC;AANnB,QADF;AASE;AAAA;AAAA,UAAK,WAAW,0BAAW,iBAAOc,UAAlB,CAAhB;AACE;AAAA;AAAA,YAAK,WAAW,iBAAOC,OAAvB;AACE;AACE,uBAAW,0BACT,iBAAOC,OADE,EAET7B,sBAAsB,iBAAO8B,QAFpB,CADb;AAKE,qBAASV,UALX;AAME,sBAAUpB,kBANZ;AAOE,kCAPF;AAQE,wBAAY;AARd;AADF;AADF;AATF,KAzBF;AAiDGqB;AAjDH,GADF;AAqDD;AACDtB,YAAYgC,SAAZ,GAAwB;AACtB9B,aAAW,oBAAU+B,MADC;AAEtB7B,qBAAmB,oBAAU8B,IAAV,CAAeC,UAFZ;AAGtBlC,sBAAoB,oBAAUmC,IAHR;AAItB1B,kBAAgB,oBAAU0B,IAJJ;AAKtB/B,YAAU,oBAAU4B,MALE;AAMtB9B,oBAAkB,oBAAU+B,IANN;AAOtB5B,cAAY,oBAAU2B,MAPA;AAQtBtB,iBAAe,oBAAUsB,MAAV,CAAiBE,UARV;AAStB5B,eAAa,oBAAU8B,OAAV,CAAkB,oBAAUC,KAAV,CAAgB;AAC7CC,iBAAa,oBAAUN,MADsB;AAE7CO,eAAW,oBAAUP;AAFwB,GAAhB,CAAlB,CATS;AAatBzB,oBAAkB,oBAAU0B,IAbN;AActBzB,eAAa,oBAAUyB,IAdD;AAetBtB,eAAa,oBAAUwB,IAfD;AAgBtBvB,oBAAkB,oBAAU4B,MAhBN;AAiBtB3B,mBAAiB,oBAAUsB,IAjBL;AAkBtBrB,iBAAe,oBAAUmB,IAAV,CAAeC,UAlBR;AAmBtBnB,qBAAmB,oBAAUqB,OAAV,CAAkB,oBAAUC,KAAV,CAAgB;AACnDI,UAAM,oBAAUT,MAAV,CAAiBE,UAD4B;AAEnDQ,gBAAY,oBAAUV,MAAV,CAAiBE,UAFsB;AAGnDS,eAAW,oBAAUX,MAAV,CAAiBE,UAHuB;AAInDI,iBAAa,oBAAUN,MAAV,CAAiBE;AAJqB,GAAhB,CAAlB,EAKfA,UAxBkB;AAyBtBlB,aAAW,oBAAUqB,KAAV,CAAgB;AACzBC,iBAAa,oBAAUN,MAAV,CAAiBE,UADL;AAEzBO,UAAM,oBAAUT;AAFS,GAAhB,CAzBW;AA6BtBf,iBAAe,oBAAUgB,IAAV,CAAeC,UA7BR;AA8BtBhB,gBAAc,oBAAUe,IAAV,CAAeC,UA9BP;AA+BtBf,kBAAgB,oBAAUc,IAAV,CAAeC;AA/BT,CAAxB;;AAkCAnC,YAAY6C,YAAZ,GAA2B;AACzB3C,aAAW,IADc;AAEzBI,cAAY,IAFa;AAGzBL,sBAAoB,KAHK;AAIzBI,YAAU,EAJe;AAKzBE,eAAa,EALY;AAMzBG,kBAAgB,KANS;AAOzBF,oBAAkB;AAAA,WAAM,IAAN;AAAA,GAPO;AAQzBL,oBAAkB;AAAA,WAAM,IAAN;AAAA,GARO;AASzBM,eAAa;AAAA,WAAe8B,WAAf;AAAA,GATY;AAUzB3B,eAAa,KAVY;AAWzBC,oBAAkB,CAXO;AAYzBC,mBAAiB,KAZQ;AAazBG,aAAW;AAbc,CAA3B;;kBAgBejB,W","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DialPad from '../DialPad';\nimport RecipientsInput from '../RecipientsInput';\nimport FromField from '../FromField';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport CircleButton from '../CircleButton';\nimport AnswerIcon from '../../assets/images/Answer.svg';\n\nimport styles from './styles.scss';\n\nfunction DialerPanel({\n  callButtonDisabled,\n  className,\n  onToNumberChange,\n  onCallButtonClick,\n  toNumber,\n  fromNumber,\n  fromNumbers,\n  changeFromNumber,\n  formatPhone,\n  isWebphoneMode,\n  currentLocale,\n  showSpinner,\n  dialButtonVolume,\n  dialButtonMuted,\n  searchContact,\n  searchContactList,\n  recipient,\n  clearToNumber,\n  setRecipient,\n  clearRecipient,\n}) {\n  const onCallFunc = () => {\n    if (!callButtonDisabled) {\n      onCallButtonClick();\n    }\n  };\n  const content = showSpinner ? (<SpinnerOverlay />) : null;\n  return (\n    <div className={classnames(styles.root, className)}>\n      <RecipientsInput\n        value={toNumber}\n        onChange={onToNumberChange}\n        onClean={clearToNumber}\n        recipient={recipient}\n        addToRecipients={setRecipient}\n        removeFromRecipients={clearRecipient}\n        searchContact={searchContact}\n        searchContactList={searchContactList}\n        formatContactPhone={formatPhone}\n        currentLocale={currentLocale}\n        titleEnabled\n        autoFocus\n      />\n      <div className={styles.inputFields}>\n        <FromField\n          fromNumber={fromNumber}\n          fromNumbers={fromNumbers}\n          onChange={changeFromNumber}\n          formatPhone={formatPhone}\n          currentLocale={currentLocale}\n          hidden={!isWebphoneMode}\n        />\n      </div>\n      <div className={styles.dialButtons}>\n        <DialPad\n          className={styles.dialPad}\n          onButtonOutput={(key) => {\n            onToNumberChange(toNumber + key);\n          }}\n          dialButtonVolume={dialButtonVolume}\n          dialButtonMuted={dialButtonMuted}\n        />\n        <div className={classnames(styles.callBtnRow)}>\n          <div className={styles.callBtn}>\n            <CircleButton\n              className={classnames(\n                styles.dialBtn,\n                callButtonDisabled && styles.disabled,\n              )}\n              onClick={onCallFunc}\n              disabled={callButtonDisabled}\n              icon={AnswerIcon}\n              showBorder={false}\n            />\n          </div>\n        </div>\n      </div>\n      {content}\n    </div>\n  );\n}\nDialerPanel.propTypes = {\n  className: PropTypes.string,\n  onCallButtonClick: PropTypes.func.isRequired,\n  callButtonDisabled: PropTypes.bool,\n  isWebphoneMode: PropTypes.bool,\n  toNumber: PropTypes.string,\n  onToNumberChange: PropTypes.func,\n  fromNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  fromNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string,\n    usageType: PropTypes.string,\n  })),\n  changeFromNumber: PropTypes.func,\n  formatPhone: PropTypes.func,\n  showSpinner: PropTypes.bool,\n  dialButtonVolume: PropTypes.number,\n  dialButtonMuted: PropTypes.bool,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  recipient: PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string,\n  }),\n  clearToNumber: PropTypes.func.isRequired,\n  setRecipient: PropTypes.func.isRequired,\n  clearRecipient: PropTypes.func.isRequired,\n};\n\nDialerPanel.defaultProps = {\n  className: null,\n  fromNumber: null,\n  callButtonDisabled: false,\n  toNumber: '',\n  fromNumbers: [],\n  isWebphoneMode: false,\n  changeFromNumber: () => null,\n  onToNumberChange: () => null,\n  formatPhone: phoneNumber => phoneNumber,\n  showSpinner: false,\n  dialButtonVolume: 1,\n  dialButtonMuted: false,\n  recipient: [],\n};\n\nexport default DialerPanel;\n"]}