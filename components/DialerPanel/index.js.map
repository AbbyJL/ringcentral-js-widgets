{"version":3,"sources":["components/DialerPanel/index.js"],"names":["DialerPanel","callButtonDisabled","className","onToNumberChange","onCallButtonClick","toNumber","fromNumber","fromNumbers","changeFromNumber","formatPhone","isWebphoneMode","currentLocale","showSpinner","dialButtonVolume","dialButtonMuted","searchContact","searchContactList","recipient","clearToNumber","setRecipient","clearRecipient","phoneTypeRenderer","onCallFunc","content","root","inputFields","dialButtons","dialPad","key","callBtnRow","callBtn","dialBtn","disabled","propTypes","string","func","isRequired","bool","arrayOf","shape","phoneNumber","usageType","number","name","entityType","phoneType","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DialPad from '../DialPad';\nimport RecipientsInput from '../RecipientsInput';\nimport FromField from '../FromField';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport CircleButton from '../CircleButton';\nimport AnswerIcon from '../../assets/images/Answer.svg';\n\nimport styles from './styles.scss';\n\nfunction DialerPanel({\n  callButtonDisabled,\n  className,\n  onToNumberChange,\n  onCallButtonClick,\n  toNumber,\n  fromNumber,\n  fromNumbers,\n  changeFromNumber,\n  formatPhone,\n  isWebphoneMode,\n  currentLocale,\n  showSpinner,\n  dialButtonVolume,\n  dialButtonMuted,\n  searchContact,\n  searchContactList,\n  recipient,\n  clearToNumber,\n  setRecipient,\n  clearRecipient,\n  phoneTypeRenderer,\n}) {\n  const onCallFunc = () => {\n    if (!callButtonDisabled) {\n      onCallButtonClick();\n    }\n  };\n  const content = showSpinner ? (<SpinnerOverlay />) : null;\n  return (\n    <div className={classnames(styles.root, className)}>\n      <RecipientsInput\n        value={toNumber}\n        onChange={onToNumberChange}\n        onClean={clearToNumber}\n        recipient={recipient}\n        addToRecipients={setRecipient}\n        removeFromRecipients={clearRecipient}\n        searchContact={searchContact}\n        searchContactList={searchContactList}\n        formatContactPhone={formatPhone}\n        currentLocale={currentLocale}\n        phoneTypeRenderer={phoneTypeRenderer}\n        titleEnabled\n        autoFocus\n      />\n      <div className={styles.inputFields}>\n        <FromField\n          fromNumber={fromNumber}\n          fromNumbers={fromNumbers}\n          onChange={changeFromNumber}\n          formatPhone={formatPhone}\n          currentLocale={currentLocale}\n          hidden={!isWebphoneMode}\n        />\n      </div>\n      <div className={styles.dialButtons}>\n        <DialPad\n          className={styles.dialPad}\n          onButtonOutput={(key) => {\n            onToNumberChange(toNumber + key);\n          }}\n          dialButtonVolume={dialButtonVolume}\n          dialButtonMuted={dialButtonMuted}\n        />\n        <div className={classnames(styles.callBtnRow)}>\n          <div className={styles.callBtn}>\n            <CircleButton\n              className={classnames(\n                styles.dialBtn,\n                callButtonDisabled && styles.disabled,\n              )}\n              onClick={onCallFunc}\n              disabled={callButtonDisabled}\n              icon={AnswerIcon}\n              showBorder={false}\n            />\n          </div>\n        </div>\n      </div>\n      {content}\n    </div>\n  );\n}\nDialerPanel.propTypes = {\n  className: PropTypes.string,\n  onCallButtonClick: PropTypes.func.isRequired,\n  callButtonDisabled: PropTypes.bool,\n  isWebphoneMode: PropTypes.bool,\n  toNumber: PropTypes.string,\n  onToNumberChange: PropTypes.func,\n  fromNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  fromNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string,\n    usageType: PropTypes.string,\n  })),\n  changeFromNumber: PropTypes.func,\n  formatPhone: PropTypes.func,\n  showSpinner: PropTypes.bool,\n  dialButtonVolume: PropTypes.number,\n  dialButtonMuted: PropTypes.bool,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  recipient: PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string,\n  }),\n  clearToNumber: PropTypes.func.isRequired,\n  setRecipient: PropTypes.func.isRequired,\n  clearRecipient: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n};\n\nDialerPanel.defaultProps = {\n  className: null,\n  fromNumber: null,\n  callButtonDisabled: false,\n  toNumber: '',\n  fromNumbers: [],\n  isWebphoneMode: false,\n  changeFromNumber: () => null,\n  onToNumberChange: () => null,\n  formatPhone: phoneNumber => phoneNumber,\n  showSpinner: false,\n  dialButtonVolume: 1,\n  dialButtonMuted: false,\n  recipient: [],\n  phoneTypeRenderer: undefined,\n};\n\nexport default DialerPanel;\n"]}