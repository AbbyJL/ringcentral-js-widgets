{"version":3,"sources":["components/DialerPanel/index.js"],"names":["DialerPanel","callButtonDisabled","className","keepToNumber","onCall","toNumber","fromNumber","fromNumbers","changeFromNumber","formatPhone","isWebphoneMode","currentLocale","showSpinner","onCallFunc","content","root","inputFields","event","currentTarget","value","dialButtons","dialPad","key","callBtnRow","callBtn","dialBtn","disabled","propTypes","string","func","isRequired","bool","arrayOf","shape","phoneNumber","usageType","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DialPad from '../DialPad';\nimport DialTextInput from '../DialTextInput';\nimport CallIdSelect from '../CallIdSelect';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport CircleButton from '../CircleButton';\nimport AnswerIcon from '../../assets/images/Answer.svg';\n\nimport styles from './styles.scss';\n\nfunction DialerPanel({\n  callButtonDisabled,\n  className,\n  keepToNumber,\n  onCall,\n  toNumber,\n  fromNumber,\n  fromNumbers,\n  changeFromNumber,\n  formatPhone,\n  isWebphoneMode,\n  currentLocale,\n  showSpinner,\n}) {\n  const onCallFunc = () => {\n    if (!callButtonDisabled) {\n      onCall();\n    }\n  };\n  const content = showSpinner ? (<SpinnerOverlay />) : null;\n  return (\n    <div className={classnames(styles.root, className)}>\n      <div className={styles.inputFields}>\n        <DialTextInput\n          value={toNumber}\n          onChangeEvent={(event) => {\n            keepToNumber(event.currentTarget.value);\n          }}\n          onDelete={() => {\n            keepToNumber('');\n          }}\n          />\n        <CallIdSelect\n          fromNumber={fromNumber}\n          fromNumbers={fromNumbers}\n          onChange={changeFromNumber}\n          formatPhone={formatPhone}\n          currentLocale={currentLocale}\n          hidden={!isWebphoneMode}\n        />\n      </div>\n      <div className={styles.dialButtons}>\n        <DialPad\n          className={styles.dialPad}\n          onButtonOutput={(key) => {\n            keepToNumber(toNumber + key);\n          }}\n          />\n        <div className={classnames(styles.callBtnRow)}>\n          <div className={styles.callBtn}>\n            <CircleButton\n              className={classnames(\n                styles.dialBtn,\n                callButtonDisabled && styles.disabled,\n              )}\n              onClick={onCallFunc}\n              disabled={callButtonDisabled}\n              icon={AnswerIcon}\n              showBorder={false}\n            />\n          </div>\n        </div>\n      </div>\n      {content}\n    </div>\n  );\n}\nDialerPanel.propTypes = {\n  className: PropTypes.string,\n  onCall: PropTypes.func.isRequired,\n  callButtonDisabled: PropTypes.bool,\n  isWebphoneMode: PropTypes.bool,\n  toNumber: PropTypes.string,\n  keepToNumber: PropTypes.func,\n  fromNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  fromNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string,\n    usageType: PropTypes.string,\n  })),\n  changeFromNumber: PropTypes.func,\n  formatPhone: PropTypes.func,\n  showSpinner: PropTypes.bool,\n};\n\nDialerPanel.defaultProps = {\n  className: null,\n  fromNumber: null,\n  callButtonDisabled: false,\n  toNumber: '',\n  fromNumbers: [],\n  isWebphoneMode: false,\n  changeFromNumber: () => null,\n  keepToNumber: () => null,\n  formatPhone: phoneNumber => phoneNumber,\n  showSpinner: false,\n};\n\nexport default DialerPanel;\n"]}