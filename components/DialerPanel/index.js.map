{"version":3,"sources":["components/DialerPanel/index.js"],"names":["DialerPanel","callButtonDisabled","className","dialButtonsClassName","onToNumberChange","onCallButtonClick","toNumber","fromNumber","fromNumbers","changeFromNumber","formatPhone","isWebphoneMode","currentLocale","showSpinner","dialButtonVolume","dialButtonMuted","searchContact","searchContactList","recipient","clearToNumber","setRecipient","clearRecipient","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","autoFocus","onCallFunc","content","styles","root","inputFields","dialButtons","dialPad","key","callBtnRow","callBtn","dialBtn","disabled","AnswerIcon","propTypes","PropTypes","string","func","isRequired","bool","arrayOf","shape","phoneNumber","usageType","number","name","entityType","phoneType","defaultProps","undefined"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,SAASA,WAAT,OA0BG;AAAA,MAzBDC,kBAyBC,QAzBDA,kBAyBC;AAAA,MAxBDC,SAwBC,QAxBDA,SAwBC;AAAA,MAvBDC,oBAuBC,QAvBDA,oBAuBC;AAAA,MAtBDC,gBAsBC,QAtBDA,gBAsBC;AAAA,MArBDC,iBAqBC,QArBDA,iBAqBC;AAAA,MApBDC,QAoBC,QApBDA,QAoBC;AAAA,MAnBDC,UAmBC,QAnBDA,UAmBC;AAAA,MAlBDC,WAkBC,QAlBDA,WAkBC;AAAA,MAjBDC,gBAiBC,QAjBDA,gBAiBC;AAAA,MAhBDC,WAgBC,QAhBDA,WAgBC;AAAA,MAfDC,cAeC,QAfDA,cAeC;AAAA,MAdDC,aAcC,QAdDA,aAcC;AAAA,MAbDC,WAaC,QAbDA,WAaC;AAAA,MAZDC,gBAYC,QAZDA,gBAYC;AAAA,MAXDC,eAWC,QAXDA,eAWC;AAAA,MAVDC,aAUC,QAVDA,aAUC;AAAA,MATDC,iBASC,QATDA,iBASC;AAAA,MARDC,SAQC,QARDA,SAQC;AAAA,MAPDC,aAOC,QAPDA,aAOC;AAAA,MANDC,YAMC,QANDA,YAMC;AAAA,MALDC,cAKC,QALDA,cAKC;AAAA,MAJDC,iBAIC,QAJDA,iBAIC;AAAA,MAHDC,6BAGC,QAHDA,6BAGC;AAAA,MAFDC,8BAEC,QAFDA,8BAEC;AAAA,MADDC,SACC,QADDA,SACC;;AACD,MAAMC,aAAa,SAAbA,UAAa,GAAM;AACvB,QAAI,CAACzB,kBAAL,EAAyB;AACvBI;AACD;AACF,GAJD;AAKA,MAAMsB,UAAUd,cAAe,8BAAC,wBAAD,OAAf,GAAqC,IAArD;AACA,SACE;AAAA;AAAA,MAAK,WAAW,0BAAWe,iBAAOC,IAAlB,EAAwB3B,SAAxB,CAAhB;AACE,kCAAC,yBAAD;AACE,aAAOI,QADT;AAEE,gBAAUF,gBAFZ;AAGE,eAASe,aAHX;AAIE,iBAAWD,SAJb;AAKE,uBAAiBE,YALnB;AAME,4BAAsBC,cANxB;AAOE,qBAAeL,aAPjB;AAQE,yBAAmBC,iBARrB;AASE,0BAAoBP,WATtB;AAUE,qBAAeE,aAVjB;AAWE,yBAAmBU,iBAXrB;AAYE,2BAAqBC,6BAZvB;AAaE,4BAAsBC,8BAbxB;AAcE,wBAdF;AAeE,iBAAWC;AAfb,MADF;AAkBE;AAAA;AAAA,QAAK,WAAWG,iBAAOE,WAAvB;AACE,oCAAC,mBAAD;AACE,oBAAYvB,UADd;AAEE,qBAAaC,WAFf;AAGE,kBAAUC,gBAHZ;AAIE,qBAAaC,WAJf;AAKE,uBAAeE,aALjB;AAME,gBAAQ,CAACD;AANX;AADF,KAlBF;AA4BE;AAAA;AAAA,QAAK,WAAW,0BAAWiB,iBAAOG,WAAlB,EAA+B5B,oBAA/B,CAAhB;AACE,oCAAC,iBAAD;AACE,mBAAWyB,iBAAOI,OADpB;AAEE,wBAAgB,wBAACC,GAAD,EAAS;AACvB7B,2BAAiBE,WAAW2B,GAA5B;AACD,SAJH;AAKE,0BAAkBnB,gBALpB;AAME,yBAAiBC;AANnB,QADF;AASE;AAAA;AAAA,UAAK,WAAW,0BAAWa,iBAAOM,UAAlB,CAAhB;AACE;AAAA;AAAA,YAAK,WAAWN,iBAAOO,OAAvB;AACE,wCAAC,sBAAD;AACE,uBAAW,0BACTP,iBAAOQ,OADE,EAETnC,sBAAsB2B,iBAAOS,QAFpB,CADb;AAKE,qBAASX,UALX;AAME,sBAAUzB,kBANZ;AAOE,kBAAMqC,gBAPR;AAQE,wBAAY;AARd;AADF;AADF;AATF,KA5BF;AAoDGX;AApDH,GADF;AAwDD;AACD3B,YAAYuC,SAAZ,GAAwB;AACtBrC,aAAWsC,oBAAUC,MADC;AAEtBtC,wBAAsBqC,oBAAUC,MAFV;AAGtBpC,qBAAmBmC,oBAAUE,IAAV,CAAeC,UAHZ;AAItB1C,sBAAoBuC,oBAAUI,IAJR;AAKtBjC,kBAAgB6B,oBAAUI,IALJ;AAMtBtC,YAAUkC,oBAAUC,MANE;AAOtBrC,oBAAkBoC,oBAAUE,IAPN;AAQtBnC,cAAYiC,oBAAUC,MARA;AAStB7B,iBAAe4B,oBAAUC,MAAV,CAAiBE,UATV;AAUtBnC,eAAagC,oBAAUK,OAAV,CAAkBL,oBAAUM,KAAV,CAAgB;AAC7CC,iBAAaP,oBAAUC,MADsB;AAE7CO,eAAWR,oBAAUC;AAFwB,GAAhB,CAAlB,CAVS;AActBhC,oBAAkB+B,oBAAUE,IAdN;AAetBhC,eAAa8B,oBAAUE,IAfD;AAgBtB7B,eAAa2B,oBAAUI,IAhBD;AAiBtB9B,oBAAkB0B,oBAAUS,MAjBN;AAkBtBlC,mBAAiByB,oBAAUI,IAlBL;AAmBtB5B,iBAAewB,oBAAUE,IAAV,CAAeC,UAnBR;AAoBtB1B,qBAAmBuB,oBAAUK,OAAV,CAAkBL,oBAAUM,KAAV,CAAgB;AACnDI,UAAMV,oBAAUC,MAAV,CAAiBE,UAD4B;AAEnDQ,gBAAYX,oBAAUC,MAAV,CAAiBE,UAFsB;AAGnDS,eAAWZ,oBAAUC,MAAV,CAAiBE,UAHuB;AAInDI,iBAAaP,oBAAUC,MAAV,CAAiBE;AAJqB,GAAhB,CAAlB,EAKfA,UAzBkB;AA0BtBzB,aAAWsB,oBAAUM,KAAV,CAAgB;AACzBC,iBAAaP,oBAAUC,MAAV,CAAiBE,UADL;AAEzBO,UAAMV,oBAAUC;AAFS,GAAhB,CA1BW;AA8BtBtB,iBAAeqB,oBAAUE,IAAV,CAAeC,UA9BR;AA+BtBvB,gBAAcoB,oBAAUE,IAAV,CAAeC,UA/BP;AAgCtBtB,kBAAgBmB,oBAAUE,IAAV,CAAeC,UAhCT;AAiCtBrB,qBAAmBkB,oBAAUE,IAjCP;AAkCtBnB,iCAA+BiB,oBAAUE,IAlCnB;AAmCtBlB,kCAAgCgB,oBAAUE,IAnCpB;AAoCtBjB,aAAWe,oBAAUI;AApCC,CAAxB;;AAuCA5C,YAAYqD,YAAZ,GAA2B;AACzBnD,aAAW,IADc;AAEzBC,wBAAsB,IAFG;AAGzBI,cAAY,IAHa;AAIzBN,sBAAoB,KAJK;AAKzBK,YAAU,EALe;AAMzBE,eAAa,EANY;AAOzBG,kBAAgB,KAPS;AAQzBF,oBAAkB;AAAA,WAAM,IAAN;AAAA,GARO;AASzBL,oBAAkB;AAAA,WAAM,IAAN;AAAA,GATO;AAUzBM,eAAa;AAAA,WAAeqC,WAAf;AAAA,GAVY;AAWzBlC,eAAa,KAXY;AAYzBC,oBAAkB,CAZO;AAazBC,mBAAiB,KAbQ;AAczBG,aAAW,EAdc;AAezBI,qBAAmBgC,SAfM;AAgBzB/B,iCAA+B+B,SAhBN;AAiBzB9B,kCAAgC8B,SAjBP;AAkBzB7B,aAAW;AAlBc,CAA3B;;kBAqBezB,W","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DialPad from '../DialPad';\nimport RecipientsInput from '../RecipientsInput';\nimport FromField from '../FromField';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport CircleButton from '../CircleButton';\nimport AnswerIcon from '../../assets/images/Answer.svg';\n\nimport styles from './styles.scss';\n\nfunction DialerPanel({\n  callButtonDisabled,\n  className,\n  dialButtonsClassName,\n  onToNumberChange,\n  onCallButtonClick,\n  toNumber,\n  fromNumber,\n  fromNumbers,\n  changeFromNumber,\n  formatPhone,\n  isWebphoneMode,\n  currentLocale,\n  showSpinner,\n  dialButtonVolume,\n  dialButtonMuted,\n  searchContact,\n  searchContactList,\n  recipient,\n  clearToNumber,\n  setRecipient,\n  clearRecipient,\n  phoneTypeRenderer,\n  recipientsContactInfoRenderer,\n  recipientsContactPhoneRenderer,\n  autoFocus,\n}) {\n  const onCallFunc = () => {\n    if (!callButtonDisabled) {\n      onCallButtonClick();\n    }\n  };\n  const content = showSpinner ? (<SpinnerOverlay />) : null;\n  return (\n    <div className={classnames(styles.root, className)}>\n      <RecipientsInput\n        value={toNumber}\n        onChange={onToNumberChange}\n        onClean={clearToNumber}\n        recipient={recipient}\n        addToRecipients={setRecipient}\n        removeFromRecipients={clearRecipient}\n        searchContact={searchContact}\n        searchContactList={searchContactList}\n        formatContactPhone={formatPhone}\n        currentLocale={currentLocale}\n        phoneTypeRenderer={phoneTypeRenderer}\n        contactInfoRenderer={recipientsContactInfoRenderer}\n        contactPhoneRenderer={recipientsContactPhoneRenderer}\n        titleEnabled\n        autoFocus={autoFocus}\n      />\n      <div className={styles.inputFields}>\n        <FromField\n          fromNumber={fromNumber}\n          fromNumbers={fromNumbers}\n          onChange={changeFromNumber}\n          formatPhone={formatPhone}\n          currentLocale={currentLocale}\n          hidden={!isWebphoneMode}\n        />\n      </div>\n      <div className={classnames(styles.dialButtons, dialButtonsClassName)}>\n        <DialPad\n          className={styles.dialPad}\n          onButtonOutput={(key) => {\n            onToNumberChange(toNumber + key);\n          }}\n          dialButtonVolume={dialButtonVolume}\n          dialButtonMuted={dialButtonMuted}\n        />\n        <div className={classnames(styles.callBtnRow)}>\n          <div className={styles.callBtn}>\n            <CircleButton\n              className={classnames(\n                styles.dialBtn,\n                callButtonDisabled && styles.disabled,\n              )}\n              onClick={onCallFunc}\n              disabled={callButtonDisabled}\n              icon={AnswerIcon}\n              showBorder={false}\n            />\n          </div>\n        </div>\n      </div>\n      {content}\n    </div>\n  );\n}\nDialerPanel.propTypes = {\n  className: PropTypes.string,\n  dialButtonsClassName: PropTypes.string,\n  onCallButtonClick: PropTypes.func.isRequired,\n  callButtonDisabled: PropTypes.bool,\n  isWebphoneMode: PropTypes.bool,\n  toNumber: PropTypes.string,\n  onToNumberChange: PropTypes.func,\n  fromNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  fromNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string,\n    usageType: PropTypes.string,\n  })),\n  changeFromNumber: PropTypes.func,\n  formatPhone: PropTypes.func,\n  showSpinner: PropTypes.bool,\n  dialButtonVolume: PropTypes.number,\n  dialButtonMuted: PropTypes.bool,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  recipient: PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string,\n  }),\n  clearToNumber: PropTypes.func.isRequired,\n  setRecipient: PropTypes.func.isRequired,\n  clearRecipient: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  autoFocus: PropTypes.bool,\n};\n\nDialerPanel.defaultProps = {\n  className: null,\n  dialButtonsClassName: null,\n  fromNumber: null,\n  callButtonDisabled: false,\n  toNumber: '',\n  fromNumbers: [],\n  isWebphoneMode: false,\n  changeFromNumber: () => null,\n  onToNumberChange: () => null,\n  formatPhone: phoneNumber => phoneNumber,\n  showSpinner: false,\n  dialButtonVolume: 1,\n  dialButtonMuted: false,\n  recipient: [],\n  phoneTypeRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n  autoFocus: false,\n};\n\nexport default DialerPanel;\n"]}