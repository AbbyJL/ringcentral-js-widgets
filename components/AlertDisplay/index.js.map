{"version":3,"sources":["components/AlertDisplay/index.js"],"names":["AlertDisplay","props","RendererMessage","component","root","className","messages","map","message","Renderer","getRenderer","animation","duration","id","level","currentLocale","brand","dismiss","propTypes","string","arrayOf","shape","isRequired","oneOf","payload","any","func","number","defaultProps","undefined"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAMC,kBAAkBD,MAAME,SAA9B;AACA,SACE;AAAA;AAAA,MAAK,WAAW,0BAAW,iBAAOC,IAAlB,EAAwBH,MAAMI,SAA9B,CAAhB;AAEIJ,UAAMK,QAAN,CAAeC,GAAf,CAAmB,UAACC,OAAD,EAAa;AAC9B,UAAMC,WAAWR,MAAMS,WAAN,CAAkBF,OAAlB,CAAjB;AACA,UAAI,CAACC,QAAL,EAAe,OAAO,IAAP;AACf,aACE,8BAAC,eAAD;AACE,mBAAWD,QAAQG,SADrB;AAEE,kBAAUH,QAAQI,QAFpB;AAGE,aAAKJ,QAAQK,EAHf;AAIE,eAAOL,QAAQM,KAJjB;AAKE,iBACE,8BAAC,QAAD;AACE,mBAASN,OADX;AAEE,yBAAeP,MAAMc,aAFvB;AAGE,iBAAOd,MAAMe;AAHf,UANJ;AAYE,mBAAW,qBAAM;AACff,gBAAMgB,OAAN,CAAcT,QAAQK,EAAtB;AACD;AAdH,QADF;AAkBD,KArBD;AAFJ,GADF;AA4BD;;AAEDb,aAAakB,SAAb,GAAyB;AACvBb,aAAW,oBAAUc,MADE;AAEvBb,YAAU,oBAAUc,OAAV,CAAkB,oBAAUC,KAAV,CAAgB;AAC1CR,QAAI,oBAAUM,MAAV,CAAiBG,UADqB;AAE1CR,WAAO,oBAAUS,KAAV,CAAgB,0CAAhB,EAA0CD,UAFP;AAG1Cd,aAAS,oBAAUW,MAAV,CAAiBG,UAHgB;AAI1CE,aAAS,oBAAUC;AAJuB,GAAhB,CAAlB,CAFa;AAQvBf,eAAa,oBAAUgB,IARA;AASvBT,WAAS,oBAAUS,IAAV,CAAeJ,UATD;AAUvBP,iBAAe,oBAAUI,MAAV,CAAiBG,UAVT;AAWvBX,aAAW,oBAAUQ,MAXE;AAYvBH,SAAO,oBAAUG,MAZM;AAavBP,YAAU,oBAAUe,MAbG;AAcvBxB,aAAW,oBAAUuB;AAdE,CAAzB;AAgBA1B,aAAa4B,YAAb,GAA4B;AAC1BlB,eAAa;AAAA,WAAMmB,SAAN;AAAA,GADa;AAE1B1B,8BAF0B;AAG1Ba,SAAO;AAHmB,CAA5B;;kBAMehB,Y","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport alertLevels from 'ringcentral-integration/modules/Alert/alertLevels';\n\nimport Message from '../Message';\nimport styles from './styles.scss';\n\nfunction AlertDisplay(props) {\n  const RendererMessage = props.component;\n  return (\n    <div className={classnames(styles.root, props.className)}>\n      {\n        props.messages.map((message) => {\n          const Renderer = props.getRenderer(message);\n          if (!Renderer) return null;\n          return (\n            <RendererMessage\n              animation={message.animation}\n              duration={message.duration}\n              key={message.id}\n              level={message.level}\n              message={\n                <Renderer\n                  message={message}\n                  currentLocale={props.currentLocale}\n                  brand={props.brand}\n                />\n              }\n              onDismiss={() => {\n                props.dismiss(message.id);\n              }}\n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nAlertDisplay.propTypes = {\n  className: PropTypes.string,\n  messages: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    level: PropTypes.oneOf(Object.keys(alertLevels)).isRequired,\n    message: PropTypes.string.isRequired,\n    payload: PropTypes.any,\n  })),\n  getRenderer: PropTypes.func,\n  dismiss: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  animation: PropTypes.string,\n  brand: PropTypes.string,\n  duration: PropTypes.number,\n  component: PropTypes.func,\n};\nAlertDisplay.defaultProps = {\n  getRenderer: () => undefined,\n  component: Message,\n  brand: 'RingCentral'\n};\n\nexport default AlertDisplay;\n"]}