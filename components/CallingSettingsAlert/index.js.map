{"version":3,"sources":["components/CallingSettingsAlert/index.js"],"names":["CallingSettingsAlert","message","currentLocale","brand","onCallingSettingsLinkClick","saveSuccess","saveSuccessWithSoftphone","webphonePermissionRemoved","emergencyCallingNotAvailable","getString","permissionChanged","phoneNumberChanged","link","e","preventDefault","propTypes","shape","string","isRequired","func","defaultProps","undefined","handleMessage"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,SAASA,oBAAT,OAKG;AAAA,MAJUC,OAIV,QAJDA,OAIC,CAJUA,OAIV;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,0BACC,QADDA,0BACC;;AACD,UAAQH,OAAR;AACE,SAAK,kCAAwBI,WAA7B;AACA,SAAK,kCAAwBC,wBAA7B;AACA,SAAK,kCAAwBC,yBAA7B;AACA,SAAK,kCAAwBC,4BAA7B;AACE,aACE;AACE,iBAAS,eAAKC,SAAL,CAAeR,OAAf,CADX;AAEE,gBAAQ,EAAEE,YAAF;AAFV,QADF;;AAOF,SAAK,kCAAwBO,iBAA7B;AACA,SAAK,kCAAwBC,kBAA7B;AAAiD;AAC/C,YAAMC,OAAOR,6BAET;AAAA;AAAA;AACE,qBAAS,iBAACS,CAAD,EAAO;AACdA,gBAAEC,cAAF;AACAV;AACD,aAJH;AAKG,yBAAKK,SAAL,CAAe,MAAf,EAAuBP,aAAvB;AALH,SAFS,GAUX,eAAKO,SAAL,CAAe,MAAf,EAAuBP,aAAvB,CAVF;AAWA,eACE;AACE,mBAAS,eAAKO,SAAL,CAAeR,OAAf,EAAwBC,aAAxB,CADX;AAEE,kBAAQ,EAAEU,UAAF;AAFV,UADF;AAMD;AACD;AACE,aAAO,IAAP;AAjCJ;AAmCD;AACDZ,qBAAqBe,SAArB,GAAiC;AAC/Bd,WAAS,oBAAUe,KAAV,CAAgB;AACvBf,aAAS,oBAAUgB,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAH4B;AAI/BhB,iBAAe,oBAAUe,MAAV,CAAiBC,UAJD;AAK/Bf,SAAO,oBAAUc,MAAV,CAAiBC,UALO;AAM/Bd,8BAA4B,oBAAUe;AANP,CAAjC;AAQAnB,qBAAqBoB,YAArB,GAAoC;AAClChB,8BAA4BiB;AADM,CAApC;AAGArB,qBAAqBsB,aAArB,GAAqC;AAAA,MAAGrB,OAAH,SAAGA,OAAH;AAAA,SACnCA,YAAY,kCAAwBI,WAApC,IACAJ,YAAY,kCAAwBK,wBADpC,IAEAL,YAAY,kCAAwBS,iBAFpC,IAGAT,YAAY,kCAAwBM,yBAHpC,IAIAN,YAAY,kCAAwBU,kBAJpC,IAKAV,YAAY,kCAAwBO,4BAND;AAAA,CAArC;;kBASeR,oB","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport callingSettingsMessages from\n  'ringcentral-integration/modules/CallingSettings/callingSettingsMessages';\nimport FormattedMessage from '../FormattedMessage';\nimport i18n from './i18n';\n\nfunction CallingSettingsAlert({\n  message: { message },\n  currentLocale,\n  brand,\n  onCallingSettingsLinkClick,\n}) {\n  switch (message) {\n    case callingSettingsMessages.saveSuccess:\n    case callingSettingsMessages.saveSuccessWithSoftphone:\n    case callingSettingsMessages.webphonePermissionRemoved:\n    case callingSettingsMessages.emergencyCallingNotAvailable:\n      return (\n        <FormattedMessage\n          message={i18n.getString(message)}\n          values={{ brand }}\n        />\n      );\n\n    case callingSettingsMessages.permissionChanged:\n    case callingSettingsMessages.phoneNumberChanged: {\n      const link = onCallingSettingsLinkClick ?\n        (\n          <a\n            onClick={(e) => {\n              e.preventDefault();\n              onCallingSettingsLinkClick();\n            }}>\n            {i18n.getString('link', currentLocale)}\n          </a>\n        ) :\n        i18n.getString('link', currentLocale);\n      return (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          values={{ link }}\n        />\n      );\n    }\n    default:\n      return null;\n  }\n}\nCallingSettingsAlert.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  brand: PropTypes.string.isRequired,\n  onCallingSettingsLinkClick: PropTypes.func,\n};\nCallingSettingsAlert.defaultProps = {\n  onCallingSettingsLinkClick: undefined,\n};\nCallingSettingsAlert.handleMessage = ({ message }) => (\n  message === callingSettingsMessages.saveSuccess ||\n  message === callingSettingsMessages.saveSuccessWithSoftphone ||\n  message === callingSettingsMessages.permissionChanged ||\n  message === callingSettingsMessages.webphonePermissionRemoved ||\n  message === callingSettingsMessages.phoneNumberChanged ||\n  message === callingSettingsMessages.emergencyCallingNotAvailable\n);\n\nexport default CallingSettingsAlert;\n"]}