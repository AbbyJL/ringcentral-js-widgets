{"version":3,"sources":["components/MessageItem/index.js"],"names":["MessageItem","props","messageIcon","type","uniA5","uni41","className","unreadCounts","messageItem","unRead","conversation","id","messageLink","typeIcon","messageContent","messageFrom","contactList","join","messageText","subject","messageInfo","messageTime","formatDateTime","creationTime","contactInfo","uni2477","propTypes","string","isRequired","number","shape","arrayOf","func","defaultProps"],"mappings":";;;;;kBAOwBA,W;;AAPxB;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AACzC,MAAMC,cAAcD,MAAME,IAAN,KAAe,KAAf,GAChB,wCAAM,WAAW,iBAAOC,KAAxB,GADgB,GAEhB,wCAAM,WAAW,iBAAOC,KAAxB,GAFJ;AAGA,MAAIC,YAAY,IAAhB;AACA,MAAIL,MAAMM,YAAN,GAAqB,CAAzB,EAA4B;AAC1BD,gBAAY,0BAAW,iBAAOE,WAAlB,EAA+B,iBAAOC,MAAtC,CAAZ;AACD,GAFD,MAEO;AACLH,gBAAY,iBAAOE,WAAnB;AACD;AACD,SACE;AAAA;AAAA,MAAK,WAAWF,SAAhB;AACE;AAAA;AAAA;AACE,gCAAsBL,MAAMS,YAAN,CAAmBC,EAD3C;AAEE,mBAAW,iBAAOC;AAFpB;AAIE;AAAA;AAAA,UAAK,WAAW,iBAAOC,QAAvB;AACGX;AADH,OAJF;AAOE;AAAA;AAAA,UAAK,WAAW,iBAAOY,cAAvB;AACE;AAAA;AAAA,YAAK,WAAW,iBAAOC,WAAvB;AACGd,gBAAMe,WAAN,CAAkBC,IAAlB,CAAuB,GAAvB;AADH,SADF;AAIE;AAAA;AAAA,YAAK,WAAW,iBAAOC,WAAvB;AAAqCjB,gBAAMkB;AAA3C,SAJF;AAKE;AAAA;AAAA,YAAK,WAAW,iBAAOC,WAAvB;AACE;AAAA;AAAA,cAAK,WAAW,iBAAOC,WAAvB;AAAqCpB,kBAAMqB,cAAN,CAAqBrB,MAAMsB,YAA3B;AAArC;AADF;AALF;AAPF,KADF;AAkBE;AAAA;AAAA;AACE,YAAI,WADN;AAEE,mBAAW,iBAAOX;AAFpB;AAIE;AAAA;AAAA,UAAK,WAAW,iBAAOY,WAAvB;AACE,gDAAM,WAAW,iBAAOC,OAAxB;AADF;AAJF;AAlBF,GADF;AA6BD;;AAEDzB,YAAY0B,SAAZ,GAAwB;AACtBvB,QAAM,iBAAUwB,MAAV,CAAiBC,UADD;AAEtBrB,gBAAc,iBAAUsB,MAFF;AAGtBnB,gBAAc,iBAAUoB,KAAV,CAAgB;AAC5BnB,QAAI,iBAAUgB;AADc,GAAhB,EAEXC,UALmB;AAMtBT,WAAS,iBAAUQ,MANG;AAOtBX,eAAa,iBAAUe,OAAV,CAAkB,iBAAUJ,MAA5B,EAAoCC,UAP3B;AAQtBL,gBAAc,iBAAUI,MAAV,CAAiBC,UART;AAStBN,kBAAgB,iBAAUU,IAAV,CAAeJ;AATT,CAAxB;;AAYA5B,YAAYiC,YAAZ,GAA2B;AACzB1B,gBAAc,CADW;AAEzBY,WAAS;AAFgB,CAA3B","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport { Link } from 'react-router';\n\nimport classnames from 'classnames';\nimport rcFont from '../../assets/RcFont/RcFont.scss';\nimport styles from './styles.scss';\n\nexport default function MessageItem(props) {\n  const messageIcon = props.type === 'SMS'\n    ? <span className={rcFont.uniA5} />\n    : <span className={rcFont.uni41} />;\n  let className = null;\n  if (props.unreadCounts > 0) {\n    className = classnames(styles.messageItem, styles.unRead);\n  } else {\n    className = styles.messageItem;\n  }\n  return (\n    <div className={className}>\n      <Link\n        to={`/conversations/${props.conversation.id}`}\n        className={styles.messageLink}\n      >\n        <div className={styles.typeIcon}>\n          {messageIcon}\n        </div>\n        <div className={styles.messageContent}>\n          <div className={styles.messageFrom}>\n            {props.contactList.join(',')}\n          </div>\n          <div className={styles.messageText}>{props.subject}</div>\n          <div className={styles.messageInfo}>\n            <div className={styles.messageTime}>{props.formatDateTime(props.creationTime)}</div>\n          </div>\n        </div>\n      </Link>\n      <Link\n        to={'/messages'}\n        className={styles.messageLink}\n      >\n        <div className={styles.contactInfo}>\n          <span className={rcFont.uni2477} />\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nMessageItem.propTypes = {\n  type: PropTypes.string.isRequired,\n  unreadCounts: PropTypes.number,\n  conversation: PropTypes.shape({\n    id: PropTypes.string,\n  }).isRequired,\n  subject: PropTypes.string,\n  contactList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  creationTime: PropTypes.string.isRequired,\n  formatDateTime: PropTypes.func.isRequired,\n};\n\nMessageItem.defaultProps = {\n  unreadCounts: 0,\n  subject: '',\n};\n"]}