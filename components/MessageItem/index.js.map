{"version":3,"sources":["components/MessageItem/index.js"],"names":["ConversationIcon","group","type","currentLocale","title","icon","voiceMail","getString","groupConversation","conversation","conversationIcon","propTypes","bool","string","defaultProps","undefined","formatVoiceMailDuration","duration","mins","Math","round","secs","MessageItem","props","onSelectContact","value","idx","selected","showContactDisplayPlaceholder","parseInt","_userSelection","setState","conversationMatches","length","autoLog","logConversation","redirect","prefill","getSelectedContact","state","contactMatches","correspondentMatches","viewSelectedContact","onViewContact","contact","createSelectedContact","bind","clickToDial","onClickToDial","getPhoneNumber","onClickItem","e","contactDisplay","contains","target","showConversationDetail","conversationId","unreadCounts","readVoicemail","toggleExtended","getInitialContactIndex","isLogging","isCreating","extended","preState","_mounted","nextProps","lastMatchedCorrespondentEntity","index","findIndex","id","correspondents","phoneNumber","extensionNumber","groupNumbers","map","correspondent","name","entityType","onCreateContact","enableContactFallback","getFallbackContactName","onLogConversation","correspondentEntity","subject","attachment","attachments","vmDuration","areaCode","brand","countryCode","creationTime","disableLinks","disableClickToDial","dateTimeFormatter","sourceIcons","showGroupNumberName","getGroupPhoneNumbers","fallbackName","detail","getDetail","root","wrapper","unread","ref","dropdownSelect","details","utcTimestamp","extendIcon","shape","isRequired","arrayOf","number","func","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAKA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,gBAAT,OAIG;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFDC,IAEC,QAFDA,IAEC;AAAA,MADDC,aACC,QADDA,aACC;;AACD,MAAIC,cAAJ;AACA,MAAIC,aAAJ;AACA,UAAQH,IAAR;AACE,SAAK,uBAAaI,SAAlB;AACEF,cAAQ,eAAKG,SAAL,CAAe,uBAAaD,SAA5B,EAAuCH,aAAvC,CAAR;AACAE,aAAO,yDAAe,OAAO,EAAtB,EAA0B,WAAW,iBAAOA,IAA5C,GAAP;AACA;AACF;AACED,cAAQH,QACN,eAAKM,SAAL,CAAe,uBAAaC,iBAA5B,EAA+CL,aAA/C,CADM,GAEN,eAAKI,SAAL,CAAe,uBAAaE,YAA5B,EAA0CN,aAA1C,CAFF;AAGAE,aAAOJ,QACL,6DAAuB,OAAO,EAA9B,EAAkC,WAAW,iBAAOI,IAApD,GADK,GAEL,uDAAiB,OAAO,EAAxB,EAA4B,WAAW,iBAAOA,IAA9C,GAFF;AATJ;AAaA,SACE;AAAA;AAAA,MAAK,WAAW,iBAAOK,gBAAvB;AACE;AAAA;AAAA,QAAM,OAAON,KAAb;AACGC;AADH;AADF,GADF;AAOD;AACDL,iBAAiBW,SAAjB,GAA6B;AAC3BV,SAAO,oBAAUW,IADU;AAE3BV,QAAM,oBAAUW,MAFW;AAG3BV,iBAAe,oBAAUU;AAHE,CAA7B;AAKAb,iBAAiBc,YAAjB,GAAgC;AAC9Bb,SAAO,KADuB;AAE9BC,QAAMa,SAFwB;AAG9BZ,iBAAeY;AAHe,CAAhC;;AAMA,SAASC,uBAAT,CAAiCC,QAAjC,EAA2C;AACzC,MAAMC,OAAOC,KAAKC,KAAL,CAAWH,WAAW,EAAtB,CAAb;AACA,MAAMI,OAAOF,KAAKC,KAAL,CAAWH,WAAW,EAAtB,CAAb;AACA,UAAUC,OAAO,EAAP,SAAgBA,IAAhB,GAAyBA,IAAnC,WAA2CG,OAAO,EAAP,SAAgBA,IAAhB,GAAyBA,IAApE;AACD;;IAEoBC,W;;;AACnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gJACXA,KADW;;AAAA,UAwCnBC,eAxCmB,GAwCD,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAChC,UAAMC,WAAW,MAAKJ,KAAL,CAAWK,6BAAX,GACbC,SAASH,GAAT,EAAc,EAAd,IAAoB,CADP,GACWG,SAASH,GAAT,EAAc,EAAd,CAD5B;AAEA,YAAKI,cAAL,GAAsB,IAAtB;AACA,YAAKC,QAAL,CAAc;AACZJ;AADY,OAAd;AAGA,UACE,MAAKJ,KAAL,CAAWd,YAAX,CAAwBuB,mBAAxB,CAA4CC,MAA5C,GAAqD,CAArD,IACA,MAAKV,KAAL,CAAWW,OAFb,EAGE;AACA,cAAKC,eAAL,CAAqB,EAAEC,UAAU,KAAZ,EAAmBT,kBAAnB,EAA6BU,SAAS,KAAtC,EAArB;AACD;AACF,KArDkB;;AAAA,UAmEnBC,kBAnEmB,GAmEE,YAAoC;AAAA,UAAnCX,QAAmC,uEAAxB,MAAKY,KAAL,CAAWZ,QAAa;;AACvD,UAAMa,iBAAiB,MAAKjB,KAAL,CAAWd,YAAX,CAAwBgC,oBAA/C;AACA,aAAQd,WAAW,CAAC,CAAZ,IAAiBa,eAAeb,QAAf,CAAlB,IACJa,eAAeP,MAAf,KAA0B,CAA1B,IAA+BO,eAAe,CAAf,CAD3B,IAEL,IAFF;AAGD,KAxEkB;;AAAA,UA6FnBE,mBA7FmB,GA6FG,YAAM;AAC1B,UAAI,OAAO,MAAKnB,KAAL,CAAWoB,aAAlB,KAAoC,UAAxC,EAAoD;AAClD,cAAKpB,KAAL,CAAWoB,aAAX,CAAyB;AACvBC,mBAAS,MAAKN,kBAAL;AADc,SAAzB;AAGD;AACF,KAnGkB;;AAAA,UA4HnBO,qBA5HmB,GA4HK,MAAKA,qBAAL,CAA2BC,IAA3B,OA5HL;AAAA,UAmJnBX,eAnJmB,GAmJD,MAAKA,eAAL,CAAqBW,IAArB,OAnJC;;AAAA,UAqJnBC,WArJmB,GAqJL,YAAM;AAClB,UAAI,MAAKxB,KAAL,CAAWyB,aAAf,EAA8B;AAC5B,cAAKzB,KAAL,CAAWyB,aAAX,CAAyB,MAAKC,cAAL,EAAzB;AACD;AACF,KAzJkB;;AAAA,UA0JnBC,WA1JmB,GA0JL,UAACC,CAAD,EAAO;AACnB,UACE,MAAKC,cAAL,IACA,MAAKA,cAAL,CAAoBC,QAApB,CAA6BF,EAAEG,MAA/B,CAFF,EAGE;AACA;AACD;AACD,UAAI,yCAAqB,MAAK/B,KAAL,CAAWd,YAAhC,CAAJ,EAAmD;AACjD,cAAKc,KAAL,CAAWgC,sBAAX,CAAkC,MAAKhC,KAAL,CAAWd,YAAX,CAAwB+C,cAA1D;AACA;AACD;AACD,UACE,uCAAmB,MAAKjC,KAAL,CAAWd,YAA9B,KACA,MAAKc,KAAL,CAAWd,YAAX,CAAwBgD,YAAxB,GAAuC,CAFzC,EAGE;AACA,cAAKlC,KAAL,CAAWmC,aAAX,CAAyB,MAAKnC,KAAL,CAAWd,YAAX,CAAwB+C,cAAjD;AACD;AACD,YAAKG,cAAL;AACD,KA5KkB;;AAEjB,UAAKpB,KAAL,GAAa;AACXZ,gBAAU,MAAKiC,sBAAL,EADC;AAEXC,iBAAW,KAFA;AAGXC,kBAAY,KAHD;AAIXC,gBAAU;AAJC,KAAb;;AAOA,UAAKJ,cAAL,GAAsB,YAAM;AAC1B,YAAK5B,QAAL,CAAc;AAAA,eAAa;AACzBgC,oBAAU,CAACC,SAASD;AADK,SAAb;AAAA,OAAd;AAGD,KAJD;AAKA,UAAKjC,cAAL,GAAsB,KAAtB;AACA;;;AAfiB;AAkBlB;;;;wCACmB;AAClB,WAAKmC,QAAL,GAAgB,IAAhB;AACD;;;8CACyBC,S,EAAW;AACnC,UACE,CAAC,KAAKpC,cAAN,KAEEoC,UAAUzD,YAAV,CAAuBuB,mBAAvB,KACA,KAAKT,KAAL,CAAWd,YAAX,CAAwBuB,mBADxB,IAEAkC,UAAUzD,YAAV,CAAuBgC,oBAAvB,KACA,KAAKlB,KAAL,CAAWd,YAAX,CAAwBgC,oBAL1B,CADF,EAQE;AACA,aAAKV,QAAL,CAAc;AACZJ,oBAAU,KAAKiC,sBAAL,CAA4BM,SAA5B;AADE,SAAd;AAGD;AACF;;;2CACsB;AACrB,WAAKD,QAAL,GAAgB,KAAhB;AACD;;;6CAe8C;AAAA,UAAxBC,SAAwB,uEAAZ,KAAK3C,KAAO;AAAA,kCAIzC2C,UAAUzD,YAJ+B;AAAA,UAE3CgC,oBAF2C,yBAE3CA,oBAF2C;AAAA,UAG3C0B,8BAH2C,yBAG3CA,8BAH2C;;AAK7C,UAAIA,8BAAJ,EAAoC;AAClC,YAAMC,QAAQ3B,qBAAqB4B,SAArB,CAA+B;AAAA,iBAC3CzB,QAAQ0B,EAAR,KAAeH,+BAA+BG,EADH;AAAA,SAA/B,CAAd;AAGA,YAAIF,QAAQ,CAAC,CAAb,EAAgB,OAAOA,KAAP;AACjB;AACD,aAAO,KAAK7C,KAAL,CAAWK,6BAAX,GAA2C,CAAC,CAA5C,GAAgD,CAAvD;AACD;;;qCAQgB;AACf,UAAM2C,iBAAiB,KAAKhD,KAAL,CAAWd,YAAX,CAAwB8D,cAA/C;AACA,aAAQA,eAAetC,MAAf,KAA0B,CAA1B,KACLsC,eAAe,CAAf,EAAkBC,WAAlB,IAAiCD,eAAe,CAAf,EAAkBE,eAD9C,CAAD,IACoE1D,SAD3E;AAED;;;2CACsB;AACrB,UAAMwD,iBAAiB,KAAKhD,KAAL,CAAWd,YAAX,CAAwB8D,cAA/C;AACA,UAAMG,eAAeH,eAAetC,MAAf,GAAwB,CAAxB,GACnBsC,eAAeI,GAAf,CAAmB;AAAA,eACjBC,cAAcH,eAAd,IAAiCG,cAAcJ,WAA/C,IAA8DzD,SAD7C;AAAA,OAAnB,CADmB,GAIjB,IAJJ;AAKA,aAAO2D,YAAP;AACD;;;6CACwB;AACvB,UAAMH,iBAAiB,KAAKhD,KAAL,CAAWd,YAAX,CAAwB8D,cAA/C;AACA,aAAQA,eAAetC,MAAf,KAA0B,CAA1B,IACLsC,eAAe,CAAf,EAAkBM,IADd,IACwB9D,SAD/B;AAED;;;;8FAQ2B+D,U;;;;;;sBAEtB,OAAO,KAAKvD,KAAL,CAAWwD,eAAlB,KAAsC,UAAtC,IACF,KAAKd,QADH,IAEF,CAAC,KAAK1B,KAAL,CAAWuB,U;;;;;AACZ,qBAAK/B,QAAL,CAAc;AACZ+B,8BAAY;AADA,iBAAd;AAGA;AACMU,2B,GAAc,KAAKvB,cAAL,E;;uBACd,KAAK1B,KAAL,CAAWwD,eAAX,CAA2B;AAC/BP,0CAD+B;AAE/BK,wBAAM,KAAKtD,KAAL,CAAWyD,qBAAX,GAAmC,KAAKC,sBAAL,EAAnC,GAAmE,EAF1C;AAG/BH;AAH+B,iBAA3B,C;;;;AAMN,oBAAI,KAAKb,QAAT,EAAmB;AACjB,uBAAKlC,QAAL,CAAc;AACZ+B,gCAAY;AADA,mBAAd;AAGA;AACD;;;;;;;;;;;;;;;;;;;;mCAKmB1B,Q;YAAAA,Q,kCAAW,I;YAAMT,Q,SAAAA,Q;kCAAUU,O;YAAAA,O,iCAAU,I;;;;;sBACvD,OAAO,KAAKd,KAAL,CAAW2D,iBAAlB,KAAwC,UAAxC,IACF,KAAKjB,QADH,IAEF,CAAC,KAAK1B,KAAL,CAAWsB,S;;;;;AAEZ,qBAAK9B,QAAL,CAAc;AACZ8B,6BAAW;AADC,iBAAd;;uBAGM,KAAKtC,KAAL,CAAW2D,iBAAX,CAA6B;AACjCC,uCAAqB,KAAK7C,kBAAL,CAAwBX,QAAxB,CADY;AAEjC6B,kCAAgB,KAAKjC,KAAL,CAAWd,YAAX,CAAwB+C,cAFP;AAGjCpB,oCAHiC;AAIjCC;AAJiC,iBAA7B,C;;;AAMN,oBAAI,KAAK4B,QAAT,EAAmB;AACjB,uBAAKlC,QAAL,CAAc;AACZ8B,+BAAW;AADC,mBAAd;AAGD;;;;;;;;;;;;;;;;;;gCA8BO;AAAA,mBAIN,KAAKtC,KAJC;AAAA,UAERd,YAFQ,UAERA,YAFQ;AAAA,UAGRN,aAHQ,UAGRA,aAHQ;;AAKV,UAAI,yCAAqBM,YAArB,CAAJ,EAAwC;AACtC,eAAOA,aAAa2E,OAApB;AACD;AACD,UAAI,uCAAmB3E,YAAnB,CAAJ,EAAsC;AACpC,YAAM4E,aAAa5E,aAAa6E,WAAb,IAA4B7E,aAAa6E,WAAb,CAAyB,CAAzB,CAA/C;AACA,YAAMrE,WAAYoE,cAAcA,WAAWE,UAA1B,IAAyC,CAA1D;AACA,eAAU,eAAKhF,SAAL,CAAe,cAAf,EAA+BJ,aAA/B,CAAV,UAA4Da,wBAAwBC,QAAxB,CAA5D;AACD;AACD,aAAO,EAAP;AACD;;;6BAEQ;AAAA;;AAAA,oBA0BH,KAAKM,KA1BF;AAAA,UAELiE,QAFK,WAELA,QAFK;AAAA,UAGLC,KAHK,WAGLA,KAHK;AAAA,UAILC,WAJK,WAILA,WAJK;AAAA,UAKLvF,aALK,WAKLA,aALK;AAAA,yCAMLM,YANK;AAAA,UAOHgD,YAPG,wBAOHA,YAPG;AAAA,UAQHc,cARG,wBAQHA,cARG;AAAA,UASH9B,oBATG,wBASHA,oBATG;AAAA,UAUHkD,YAVG,wBAUHA,YAVG;AAAA,UAWH9B,SAXG,wBAWHA,SAXG;AAAA,UAYH7B,mBAZG,wBAYHA,mBAZG;AAAA,UAaH9B,IAbG,wBAaHA,IAbG;AAAA,UAeL0F,YAfK,WAeLA,YAfK;AAAA,UAgBLC,kBAhBK,WAgBLA,kBAhBK;AAAA,UAiBL7C,aAjBK,WAiBLA,aAjBK;AAAA,UAkBLkC,iBAlBK,WAkBLA,iBAlBK;AAAA,UAmBLvC,aAnBK,WAmBLA,aAnBK;AAAA,UAoBLoC,eApBK,WAoBLA,eApBK;AAAA,UAqBLe,iBArBK,WAqBLA,iBArBK;AAAA,UAsBLd,qBAtBK,WAsBLA,qBAtBK;AAAA,UAuBLpD,6BAvBK,WAuBLA,6BAvBK;AAAA,UAwBLmE,WAxBK,WAwBLA,WAxBK;AAAA,UAyBLC,mBAzBK,WAyBLA,mBAzBK;;;AA4BP,UAAMtB,eAAe,KAAKuB,oBAAL,EAArB;AACA,UAAMzB,cAAc,KAAKvB,cAAL,EAApB;AACA,UAAMiD,eAAe,KAAKjB,sBAAL,EAArB;AACA,UAAMkB,SAAS,KAAKC,SAAL,EAAf;AACA,aACE;AAAA;AAAA,UAAK,WAAW,iBAAOC,IAAvB,EAA6B,SAAS,KAAKnD,WAA3C;AACE;AAAA;AAAA;AACE,uBAAW,0BACT,iBAAOoD,OADE,EAET7C,gBAAgB,iBAAO8C,MAFd;AADb;AAME,wCAAC,gBAAD;AACE,mBAAOhC,eAAetC,MAAf,GAAwB,CADjC;AAEE,kBAAM/B,IAFR;AAGE,2BAAeC;AAHjB,YANF;AAWE;AACE,uBAAW,mBAACqG,GAAD,EAAS;AAAE,qBAAKpD,cAAL,GAAsBoD,GAAtB;AAA4B,aADpD;AAEE,uBAAW,0BACT,iBAAOpD,cADE,EAETK,gBAAgB,iBAAO8C,MAFd,CAFb;AAME,6BAAiB,iBAAOE,cAN1B;AAOE,mBAAOhB,KAPT;AAQE,4BAAgBhD,oBARlB;AASE,sBAAU,KAAKF,KAAL,CAAWZ,QATvB;AAUE,6BAAiB,KAAKH,eAVxB;AAWE,sBAAUoE,YAXZ;AAYE,uBAAW/B,aAAa,KAAKtB,KAAL,CAAWsB,SAZrC;AAaE,0BAAcqC,YAbhB;AAcE,sBAAUV,QAdZ;AAeE,yBAAaE,WAff;AAgBE,yBAAalB,WAhBf;AAiBE,0BAAcE,YAjBhB;AAkBE,iCAAqBsB,mBAlBvB;AAmBE,2BAAe7F,aAnBjB;AAoBE,mCAAuB6E,qBApBzB;AAqBE,6BAAiB,KArBnB;AAsBE,sBAAU,KAtBZ;AAuBE,6BAAiBpD,6BAvBnB;AAwBE,yBAAamE;AAxBf,YAXF;AAqCE;AAAA;AAAA,cAAK,WAAW,iBAAOW,OAAvB;AACGP;AADH,WArCF;AAwCE;AAAA;AAAA,cAAK,WAAW,iBAAOR,YAAvB;AACGG,8BAAkB,EAAEa,cAAchB,YAAhB,EAAlB;AADH;AAxCF,SADF;AA6CE;AACE,oBAAU,KAAKpD,KAAL,CAAWwB,QADvB;AAEE,oBAAU,KAAKJ,cAFjB;AAGE,+BAAqB,iBAAOiD,UAH9B;AAIE,yBAAezG,aAJjB;AAKE,iBAAO+E,qBAAqB,KAAK/C,eALnC;AAME,wBAAcQ,iBAAiB,KAAKD,mBANtC;AAOE,0BAAgBqC,mBAAmB,KAAKlC,qBAP1C;AAQE,qBAAW0B,eAAetC,MAAf,KAA0B,CAA1B,IAA+B,CAAC,CAACQ,qBAAqBR,MARnE;AASE,yBAAee,iBAAiB,KAAKD,WATvC;AAUE,uBAAayB,WAVf;AAWE,wBAAcoB,YAXhB;AAYE,8BAAoBC,kBAZtB;AAaE,qBAAWhC,aAAa,KAAKtB,KAAL,CAAWsB,SAbrC;AAcE,oBAAU7B,oBAAoBC,MAApB,GAA6B,CAdzC;AAeE,sBAAY,KAAKM,KAAL,CAAWuB,UAfzB;AAgBE,uBAAa,eAAKvD,SAAL,CAAe,QAAf,EAAyBJ,aAAzB,CAhBf;AAiBE,wBAAc,eAAKI,SAAL,CAAe,SAAf,EAA0BJ,aAA1B,CAjBhB;AAkBE,qBAAW,eAAKI,SAAL,CAAe,MAAf,EAAuBJ,aAAvB,CAlBb;AAmBE,6BAAmB,eAAKI,SAAL,CAAe,WAAf,EAA4BJ,aAA5B,CAnBrB;AAoBE,2BAAiB,eAAKI,SAAL,CAAe,aAAf,EAA8BJ,aAA9B,CApBnB;AAqBE,2BAAiB;AArBnB;AA7CF,OADF;AAuED;;;;;kBAtSkBmB,W;;;AAySrBA,YAAYX,SAAZ,GAAwB;AACtBF,gBAAc,oBAAUoG,KAAV,CAAgB;AAC5BrD,oBAAgB,oBAAU3C,MAAV,CAAiBiG,UADL;AAE5BjD,eAAW,oBAAUjD,IAFO;AAG5B2D,oBAAgB,oBAAUwC,OAAV,CAAkB,oBAAUF,KAAV,CAAgB;AAChDhC,YAAM,oBAAUhE,MADgC;AAEhD2D,mBAAa,oBAAU3D,MAFyB;AAGhD4D,uBAAiB,oBAAU5D;AAHqB,KAAhB,CAAlB,CAHY;AAQ5B4B,0BAAsB,oBAAUsE,OAAV,CAAkB,oBAAUF,KAAV,CAAgB;AACtDhC,YAAM,oBAAUhE,MADsC;AAEtDiE,kBAAY,oBAAUjE;AAFgC,KAAhB,CAAlB,CARM;AAY5BmB,yBAAqB,oBAAU+E,OAAV,CAAkB,oBAAUF,KAAV,CAAgB;AACrDvC,UAAI,oBAAUzD;AADuC,KAAhB,CAAlB,CAZO;AAe5B4C,kBAAc,oBAAUuD,MAAV,CAAiBF;AAfH,GAAhB,EAgBXA,UAjBmB;AAkBtBtB,YAAU,oBAAU3E,MAAV,CAAiBiG,UAlBL;AAmBtBrB,SAAO,oBAAU5E,MAAV,CAAiBiG,UAnBF;AAoBtBpB,eAAa,oBAAU7E,MAAV,CAAiBiG,UApBR;AAqBtB3G,iBAAe,oBAAUU,MAAV,CAAiBiG,UArBV;AAsBtB5B,qBAAmB,oBAAU+B,IAtBP;AAuBtBtE,iBAAe,oBAAUsE,IAvBH;AAwBtBlC,mBAAiB,oBAAUkC,IAxBL;AAyBtBjE,iBAAe,oBAAUiE,IAzBH;AA0BtBrB,gBAAc,oBAAUhF,IA1BF;AA2BtBiF,sBAAoB,oBAAUjF,IA3BR;AA4BtBkF,qBAAmB,oBAAUmB,IAAV,CAAeH,UA5BZ;AA6BtBvD,0BAAwB,oBAAU0D,IAAV,CAAeH,UA7BjB;AA8BtBpD,iBAAe,oBAAUuD,IAAV,CAAeH,UA9BR;AA+BtB5E,WAAS,oBAAUtB,IA/BG;AAgCtBoE,yBAAuB,oBAAUpE,IAhCX;AAiCtBgB,iCAA+B,oBAAUhB,IAjCnB;AAkCtBmF,eAAa,oBAAUmB,MAlCD;AAmCtBlB,uBAAqB,oBAAUpF;AAnCT,CAAxB;;AAsCAU,YAAYR,YAAZ,GAA2B;AACzBoE,qBAAmBnE,SADM;AAEzBiC,iBAAejC,SAFU;AAGzB4B,iBAAe5B,SAHU;AAIzBgE,mBAAiBhE,SAJQ;AAKzB8E,sBAAoB,KALK;AAMzBD,gBAAc,KANW;AAOzB1D,WAAS,KAPgB;AAQzB8C,yBAAuBjE,SARE;AASzBa,iCAA+B,IATN;AAUzBmE,eAAahF,SAVY;AAWzBiF,uBAAqB;AAXI,CAA3B","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport messageTypes from 'ringcentral-integration/enums/messageTypes';\nimport {\n  messageIsTextMessage,\n  messageIsVoicemail,\n} from 'ringcentral-integration/lib/messageHelper';\n\nimport ContactDisplay from '../ContactDisplay';\nimport ActionMenu from '../ActionMenu';\nimport styles from './styles.scss';\nimport i18n from './i18n';\nimport VoicemailIcon from '../../assets/images/VoicemailIcon.svg';\nimport ComposeTextIcon from '../../assets/images/ComposeText.svg';\nimport GroupConversationIcon from '../../assets/images/GroupConversation.svg';\n\nfunction ConversationIcon({\n  group,\n  type,\n  currentLocale,\n}) {\n  let title;\n  let icon;\n  switch (type) {\n    case messageTypes.voiceMail:\n      title = i18n.getString(messageTypes.voiceMail, currentLocale);\n      icon = <VoicemailIcon width={23} className={styles.icon} />;\n      break;\n    default:\n      title = group ?\n        i18n.getString(messageTypes.groupConversation, currentLocale) :\n        i18n.getString(messageTypes.conversation, currentLocale);\n      icon = group ?\n        <GroupConversationIcon width={19} className={styles.icon} /> :\n        <ComposeTextIcon width={18} className={styles.icon} />;\n  }\n  return (\n    <div className={styles.conversationIcon}>\n      <span title={title}>\n        {icon}\n      </span>\n    </div>\n  );\n}\nConversationIcon.propTypes = {\n  group: PropTypes.bool,\n  type: PropTypes.string,\n  currentLocale: PropTypes.string,\n};\nConversationIcon.defaultProps = {\n  group: false,\n  type: undefined,\n  currentLocale: undefined,\n};\n\nfunction formatVoiceMailDuration(duration) {\n  const mins = Math.round(duration / 60);\n  const secs = Math.round(duration % 60);\n  return `${mins < 10 ? `0${mins}` : mins}:${secs < 10 ? `0${secs}` : secs}`;\n}\n\nexport default class MessageItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: this.getInitialContactIndex(),\n      isLogging: false,\n      isCreating: false,\n      extended: false,\n    };\n\n    this.toggleExtended = () => {\n      this.setState(preState => ({\n        extended: !preState.extended,\n      }));\n    };\n    this._userSelection = false;\n    /* [RCINT-4301] onSelection would trigger some state changes that would push new\n     * properties before the state has been changed. Which would reset the selected value.\n     */\n  }\n  componentDidMount() {\n    this._mounted = true;\n  }\n  componentWillReceiveProps(nextProps) {\n    if (\n      !this._userSelection &&\n      (\n        nextProps.conversation.conversationMatches !==\n        this.props.conversation.conversationMatches ||\n        nextProps.conversation.correspondentMatches !==\n        this.props.conversation.correspondentMatches\n      )\n    ) {\n      this.setState({\n        selected: this.getInitialContactIndex(nextProps),\n      });\n    }\n  }\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n  onSelectContact = (value, idx) => {\n    const selected = this.props.showContactDisplayPlaceholder\n      ? parseInt(idx, 10) - 1 : parseInt(idx, 10);\n    this._userSelection = true;\n    this.setState({\n      selected,\n    });\n    if (\n      this.props.conversation.conversationMatches.length > 0 &&\n      this.props.autoLog\n    ) {\n      this.logConversation({ redirect: false, selected, prefill: false });\n    }\n  }\n  getInitialContactIndex(nextProps = this.props) {\n    const {\n      correspondentMatches,\n      lastMatchedCorrespondentEntity,\n    } = nextProps.conversation;\n    if (lastMatchedCorrespondentEntity) {\n      const index = correspondentMatches.findIndex(contact => (\n        contact.id === lastMatchedCorrespondentEntity.id\n      ));\n      if (index > -1) return index;\n    }\n    return this.props.showContactDisplayPlaceholder ? -1 : 0;\n  }\n  getSelectedContact = (selected = this.state.selected) => {\n    const contactMatches = this.props.conversation.correspondentMatches;\n    return (selected > -1 && contactMatches[selected]) ||\n      (contactMatches.length === 1 && contactMatches[0]) ||\n      null;\n  }\n\n  getPhoneNumber() {\n    const correspondents = this.props.conversation.correspondents;\n    return (correspondents.length === 1 &&\n      (correspondents[0].phoneNumber || correspondents[0].extensionNumber)) || undefined;\n  }\n  getGroupPhoneNumbers() {\n    const correspondents = this.props.conversation.correspondents;\n    const groupNumbers = correspondents.length > 1 ?\n      correspondents.map(correspondent =>\n        correspondent.extensionNumber || correspondent.phoneNumber || undefined\n      )\n      : null;\n    return groupNumbers;\n  }\n  getFallbackContactName() {\n    const correspondents = this.props.conversation.correspondents;\n    return (correspondents.length === 1 &&\n      (correspondents[0].name)) || undefined;\n  }\n  viewSelectedContact = () => {\n    if (typeof this.props.onViewContact === 'function') {\n      this.props.onViewContact({\n        contact: this.getSelectedContact(),\n      });\n    }\n  }\n  async createSelectedContact(entityType) {\n    // console.log('click createSelectedContact!!', entityType);\n    if (typeof this.props.onCreateContact === 'function' &&\n      this._mounted &&\n      !this.state.isCreating) {\n      this.setState({\n        isCreating: true,\n      });\n      // console.log('start to create: isCreating...', this.state.isCreating);\n      const phoneNumber = this.getPhoneNumber();\n      await this.props.onCreateContact({\n        phoneNumber,\n        name: this.props.enableContactFallback ? this.getFallbackContactName() : '',\n        entityType,\n      });\n\n      if (this._mounted) {\n        this.setState({\n          isCreating: false,\n        });\n        // console.log('created: isCreating...', this.state.isCreating);\n      }\n    }\n  }\n  createSelectedContact = this.createSelectedContact.bind(this);\n\n  async logConversation({ redirect = true, selected, prefill = true }) {\n    if (typeof this.props.onLogConversation === 'function' &&\n      this._mounted &&\n      !this.state.isLogging\n    ) {\n      this.setState({\n        isLogging: true,\n      });\n      await this.props.onLogConversation({\n        correspondentEntity: this.getSelectedContact(selected),\n        conversationId: this.props.conversation.conversationId,\n        redirect,\n        prefill,\n      });\n      if (this._mounted) {\n        this.setState({\n          isLogging: false,\n        });\n      }\n    }\n  }\n  logConversation = this.logConversation.bind(this)\n\n  clickToDial = () => {\n    if (this.props.onClickToDial) {\n      this.props.onClickToDial(this.getPhoneNumber());\n    }\n  }\n  onClickItem = (e) => {\n    if ((\n      this.contactDisplay &&\n      this.contactDisplay.contains(e.target))\n    ) {\n      return;\n    }\n    if (messageIsTextMessage(this.props.conversation)) {\n      this.props.showConversationDetail(this.props.conversation.conversationId);\n      return;\n    }\n    if (\n      messageIsVoicemail(this.props.conversation) &&\n      this.props.conversation.unreadCounts > 0\n    ) {\n      this.props.readVoicemail(this.props.conversation.conversationId);\n    }\n    this.toggleExtended();\n  }\n\n  getDetail() {\n    const {\n      conversation,\n      currentLocale,\n    } = this.props;\n    if (messageIsTextMessage(conversation)) {\n      return conversation.subject;\n    }\n    if (messageIsVoicemail(conversation)) {\n      const attachment = conversation.attachments && conversation.attachments[0];\n      const duration = (attachment && attachment.vmDuration) || 0;\n      return `${i18n.getString('voiceMessage', currentLocale)} (${formatVoiceMailDuration(duration)})`;\n    }\n    return '';\n  }\n\n  render() {\n    const {\n      areaCode,\n      brand,\n      countryCode,\n      currentLocale,\n      conversation: {\n        unreadCounts,\n        correspondents,\n        correspondentMatches,\n        creationTime,\n        isLogging,\n        conversationMatches,\n        type,\n      },\n      disableLinks,\n      disableClickToDial,\n      onClickToDial,\n      onLogConversation,\n      onViewContact,\n      onCreateContact,\n      dateTimeFormatter,\n      enableContactFallback,\n      showContactDisplayPlaceholder,\n      sourceIcons,\n      showGroupNumberName,\n    } = this.props;\n\n    const groupNumbers = this.getGroupPhoneNumbers();\n    const phoneNumber = this.getPhoneNumber();\n    const fallbackName = this.getFallbackContactName();\n    const detail = this.getDetail();\n    return (\n      <div className={styles.root} onClick={this.onClickItem}>\n        <div\n          className={classnames(\n            styles.wrapper,\n            unreadCounts && styles.unread\n          )}\n        >\n          <ConversationIcon\n            group={correspondents.length > 1}\n            type={type}\n            currentLocale={currentLocale}\n          />\n          <ContactDisplay\n            reference={(ref) => { this.contactDisplay = ref; }}\n            className={classnames(\n              styles.contactDisplay,\n              unreadCounts && styles.unread\n            )}\n            selectClassName={styles.dropdownSelect}\n            brand={brand}\n            contactMatches={correspondentMatches}\n            selected={this.state.selected}\n            onSelectContact={this.onSelectContact}\n            disabled={disableLinks}\n            isLogging={isLogging || this.state.isLogging}\n            fallBackName={fallbackName}\n            areaCode={areaCode}\n            countryCode={countryCode}\n            phoneNumber={phoneNumber}\n            groupNumbers={groupNumbers}\n            showGroupNumberName={showGroupNumberName}\n            currentLocale={currentLocale}\n            enableContactFallback={enableContactFallback}\n            stopPropagation={false}\n            showType={false}\n            showPlaceholder={showContactDisplayPlaceholder}\n            sourceIcons={sourceIcons}\n          />\n          <div className={styles.details}>\n            {detail}\n          </div>\n          <div className={styles.creationTime}>\n            {dateTimeFormatter({ utcTimestamp: creationTime })}\n          </div>\n        </div>\n        <ActionMenu\n          extended={this.state.extended}\n          onToggle={this.toggleExtended}\n          extendIconClassName={styles.extendIcon}\n          currentLocale={currentLocale}\n          onLog={onLogConversation && this.logConversation}\n          onViewEntity={onViewContact && this.viewSelectedContact}\n          onCreateEntity={onCreateContact && this.createSelectedContact}\n          hasEntity={correspondents.length === 1 && !!correspondentMatches.length}\n          onClickToDial={onClickToDial && this.clickToDial}\n          phoneNumber={phoneNumber}\n          disableLinks={disableLinks}\n          disableClickToDial={disableClickToDial}\n          isLogging={isLogging || this.state.isLogging}\n          isLogged={conversationMatches.length > 0}\n          isCreating={this.state.isCreating}\n          addLogTitle={i18n.getString('addLog', currentLocale)}\n          editLogTitle={i18n.getString('editLog', currentLocale)}\n          callTitle={i18n.getString('call', currentLocale)}\n          createEntityTitle={i18n.getString('addEntity', currentLocale)}\n          viewEntityTitle={i18n.getString('viewDetails', currentLocale)}\n          stopPropagation={false}\n        />\n      </div>\n    );\n  }\n}\n\nMessageItem.propTypes = {\n  conversation: PropTypes.shape({\n    conversationId: PropTypes.string.isRequired,\n    isLogging: PropTypes.bool,\n    correspondents: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n    })),\n    correspondentMatches: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      entityType: PropTypes.string,\n    })),\n    conversationMatches: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string,\n    })),\n    unreadCounts: PropTypes.number.isRequired,\n  }).isRequired,\n  areaCode: PropTypes.string.isRequired,\n  brand: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onLogConversation: PropTypes.func,\n  onViewContact: PropTypes.func,\n  onCreateContact: PropTypes.func,\n  onClickToDial: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  showConversationDetail: PropTypes.func.isRequired,\n  readVoicemail: PropTypes.func.isRequired,\n  autoLog: PropTypes.bool,\n  enableContactFallback: PropTypes.bool,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  showGroupNumberName: PropTypes.bool,\n};\n\nMessageItem.defaultProps = {\n  onLogConversation: undefined,\n  onClickToDial: undefined,\n  onViewContact: undefined,\n  onCreateContact: undefined,\n  disableClickToDial: false,\n  disableLinks: false,\n  autoLog: false,\n  enableContactFallback: undefined,\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  showGroupNumberName: false,\n};\n"]}