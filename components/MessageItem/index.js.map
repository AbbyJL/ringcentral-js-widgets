{"version":3,"sources":["components/MessageItem/index.js"],"names":["ConversationIcon","group","type","currentLocale","title","icon","voiceMail","getString","conversationIcon","propTypes","bool","string","defaultProps","undefined","MessageItem","props","preventEventPropogation","e","target","currentTarget","stopPropagation","onSelectContact","value","idx","selected","showContactDisplayPlaceholder","parseInt","_userSelection","setState","conversation","conversationMatches","length","autoLog","logConversation","redirect","prefill","getSelectedContact","state","contactMatches","correspondentMatches","viewSelectedContact","onViewContact","contact","createSelectedContact","bind","clickToDial","onClickToDial","phoneNumber","getPhoneNumber","fromType","onClickToSms","onClickItem","contactDisplay","contains","showConversationDetail","conversationId","toggleExtended","onPlayVoicemail","unreadCounts","readVoicemail","onMarkVoicemail","markVoicemail","onUnmarkVoicemail","unmarkVoicemail","onDeleteMessage","deleteMessage","getInitialContactIndex","isLogging","isCreating","extended","preState","_mounted","nextProps","lastMatchedCorrespondentEntity","index","findIndex","id","correspondents","extensionNumber","groupNumbers","map","correspondent","name","entityType","onCreateContact","enableContactFallback","getFallbackContactName","onLogConversation","correspondentEntity","subject","voicemailAttachment","duration","creationTime","dateTimeFormatter","utcTimestamp","console","error","areaCode","brand","countryCode","parentDisableLinks","disableLinks","disableClickToDial","sourceIcons","showGroupNumberName","isVoicemail","getGroupPhoneNumbers","fallbackName","detail","getDetail","player","slideMenuHeight","uri","root","wrapper","unread","ref","dropdownSelect","details","extendIcon","slideMenu","playContainer","actionMenuList","shape","isRequired","arrayOf","number","func","object"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport messageTypes from 'ringcentral-integration/enums/messageTypes';\nimport {\n  messageIsTextMessage,\n} from 'ringcentral-integration/lib/messageHelper';\n\nimport formatDuration from '../../lib/formatDuration';\n\nimport ContactDisplay from '../ContactDisplay';\nimport ActionMenuList from '../ActionMenuList';\nimport VoicemailPlayer from '../VoicemailPlayer';\nimport SlideMenu from '../SlideMenu';\n\nimport VoicemailIcon from '../../assets/images/VoicemailIcon.svg';\nimport ComposeTextIcon from '../../assets/images/ComposeText.svg';\nimport GroupConversationIcon from '../../assets/images/GroupConversation.svg';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction ConversationIcon({\n  group,\n  type,\n  currentLocale,\n}) {\n  let title;\n  let icon;\n  switch (type) {\n    case messageTypes.voiceMail:\n      title = i18n.getString(messageTypes.voiceMail, currentLocale);\n      icon = <VoicemailIcon width={23} className={styles.icon} />;\n      break;\n    default:\n      title = group ?\n        i18n.getString('groupConversation', currentLocale) :\n        i18n.getString('conversation', currentLocale);\n      icon = group ?\n        <GroupConversationIcon width={19} className={styles.icon} /> :\n        <ComposeTextIcon width={18} className={styles.icon} />;\n  }\n  return (\n    <div className={styles.conversationIcon}>\n      <span title={title}>\n        {icon}\n      </span>\n    </div>\n  );\n}\nConversationIcon.propTypes = {\n  group: PropTypes.bool,\n  type: PropTypes.string,\n  currentLocale: PropTypes.string,\n};\nConversationIcon.defaultProps = {\n  group: false,\n  type: undefined,\n  currentLocale: undefined,\n};\n\nexport default class MessageItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: this.getInitialContactIndex(),\n      isLogging: false,\n      isCreating: false,\n      extended: false,\n    };\n\n    this.toggleExtended = () => {\n      this.setState(preState => ({\n        extended: !preState.extended,\n      }));\n    };\n    this._userSelection = false;\n    /* [RCINT-4301] onSelection would trigger some state changes that would push new\n     * properties before the state has been changed. Which would reset the selected value.\n     */\n  }\n  componentDidMount() {\n    this._mounted = true;\n  }\n  componentWillReceiveProps(nextProps) {\n    if (\n      !this._userSelection &&\n      (\n        nextProps.conversation.conversationMatches !==\n        this.props.conversation.conversationMatches ||\n        nextProps.conversation.correspondentMatches !==\n        this.props.conversation.correspondentMatches\n      )\n    ) {\n      this.setState({\n        selected: this.getInitialContactIndex(nextProps),\n      });\n    }\n  }\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  preventEventPropogation = (e) => {\n    if (e.target !== e.currentTarget) {\n      e.stopPropagation();\n    }\n  }\n\n  onSelectContact = (value, idx) => {\n    const selected = this.props.showContactDisplayPlaceholder\n      ? parseInt(idx, 10) - 1 : parseInt(idx, 10);\n    this._userSelection = true;\n    this.setState({\n      selected,\n    });\n    if (\n      this.props.conversation.conversationMatches.length > 0 &&\n      this.props.autoLog\n    ) {\n      this.logConversation({ redirect: false, selected, prefill: false });\n    }\n  }\n  getInitialContactIndex(nextProps = this.props) {\n    const {\n      correspondentMatches,\n      lastMatchedCorrespondentEntity,\n    } = nextProps.conversation;\n    if (lastMatchedCorrespondentEntity) {\n      const index = correspondentMatches.findIndex(contact => (\n        contact.id === lastMatchedCorrespondentEntity.id\n      ));\n      if (index > -1) return index;\n    }\n    return this.props.showContactDisplayPlaceholder ? -1 : 0;\n  }\n  getSelectedContact = (selected = this.state.selected) => {\n    const contactMatches = this.props.conversation.correspondentMatches;\n    return (selected > -1 && contactMatches[selected]) ||\n      (contactMatches.length === 1 && contactMatches[0]) ||\n      null;\n  }\n\n  getPhoneNumber() {\n    const { correspondents } = this.props.conversation;\n    return (correspondents.length === 1 && correspondents[0] &&\n      (correspondents[0].phoneNumber || correspondents[0].extensionNumber)) || undefined;\n  }\n  getGroupPhoneNumbers() {\n    const { correspondents } = this.props.conversation;\n    const groupNumbers = correspondents.length > 1 ?\n      correspondents.map(correspondent =>\n        correspondent.extensionNumber || correspondent.phoneNumber || undefined\n      )\n      : null;\n    return groupNumbers;\n  }\n  getFallbackContactName() {\n    const { correspondents } = this.props.conversation;\n    return (correspondents.length === 1 &&\n      (correspondents[0].name)) || undefined;\n  }\n  viewSelectedContact = () => {\n    if (typeof this.props.onViewContact === 'function') {\n      this.props.onViewContact({\n        contact: this.getSelectedContact(),\n      });\n    }\n  }\n  async createSelectedContact(entityType) {\n    // console.log('click createSelectedContact!!', entityType);\n    if (typeof this.props.onCreateContact === 'function' &&\n      this._mounted &&\n      !this.state.isCreating) {\n      this.setState({\n        isCreating: true,\n      });\n      // console.log('start to create: isCreating...', this.state.isCreating);\n      const phoneNumber = this.getPhoneNumber();\n      await this.props.onCreateContact({\n        phoneNumber,\n        name: this.props.enableContactFallback ? this.getFallbackContactName() : '',\n        entityType,\n      });\n\n      if (this._mounted) {\n        this.setState({\n          isCreating: false,\n        });\n        // console.log('created: isCreating...', this.state.isCreating);\n      }\n    }\n  }\n  createSelectedContact = this.createSelectedContact.bind(this);\n\n  async logConversation({ redirect = true, selected, prefill = true }) {\n    if (typeof this.props.onLogConversation === 'function' &&\n      this._mounted &&\n      !this.state.isLogging\n    ) {\n      this.setState({\n        isLogging: true,\n      });\n      await this.props.onLogConversation({\n        correspondentEntity: this.getSelectedContact(selected),\n        conversationId: this.props.conversation.conversationId,\n        redirect,\n        prefill,\n      });\n      if (this._mounted) {\n        this.setState({\n          isLogging: false,\n        });\n      }\n    }\n  }\n  logConversation = this.logConversation.bind(this)\n\n  clickToDial = () => {\n    if (this.props.onClickToDial) {\n      const contact = this.getSelectedContact() || {};\n      const phoneNumber = this.getPhoneNumber();\n\n      if (phoneNumber) {\n        this.props.onClickToDial({\n          ...contact,\n          phoneNumber,\n          fromType: this.props.conversation.type\n        });\n      }\n    }\n  }\n  onClickToSms = () => {\n    if (this.props.onClickToSms) {\n      const contact = this.getSelectedContact() || {};\n      const phoneNumber = this.getPhoneNumber();\n\n      if (phoneNumber) {\n        this.props.onClickToSms({\n          ...contact,\n          phoneNumber,\n        });\n      }\n    }\n  }\n  onClickItem = (e) => {\n    if ((\n      this.contactDisplay &&\n      this.contactDisplay.contains(e.target))\n    ) {\n      return;\n    }\n    if (messageIsTextMessage(this.props.conversation)) {\n      this.props.showConversationDetail(this.props.conversation.conversationId);\n      return;\n    }\n\n    this.toggleExtended();\n  }\n\n  onPlayVoicemail = () => {\n    if (\n      this.props.conversation.unreadCounts > 0\n    ) {\n      this.props.readVoicemail(this.props.conversation.conversationId);\n    }\n  }\n\n  onMarkVoicemail = () => {\n    if (\n      this.props.conversation.unreadCounts === 0\n    ) {\n      this.props.markVoicemail(this.props.conversation.conversationId);\n    }\n  }\n\n  onUnmarkVoicemail = () => {\n    if (\n      this.props.conversation.unreadCounts > 0\n    ) {\n      this.props.unmarkVoicemail(this.props.conversation.conversationId);\n    }\n  }\n\n  getDetail() {\n    const {\n      conversation,\n      currentLocale,\n    } = this.props;\n    if (messageIsTextMessage(conversation)) {\n      return conversation.subject;\n    }\n    if (conversation.voicemailAttachment) {\n      const { duration } = conversation.voicemailAttachment;\n      return `${i18n.getString('voiceMessage', currentLocale)} (${formatDuration(duration)})`;\n    }\n    return '';\n  }\n\n  onDeleteMessage = () => {\n    this.props.deleteMessage(this.props.conversation.conversationId);\n  }\n\n  dateTimeFormatter(creationTime) {\n    try {\n      return this.props.dateTimeFormatter({ utcTimestamp: creationTime });\n    } catch (e) {\n      console.error('Format date time error', creationTime);\n      return creationTime;\n    }\n  }\n\n  render() {\n    const {\n      areaCode,\n      brand,\n      countryCode,\n      currentLocale,\n      conversation: {\n        unreadCounts,\n        correspondents,\n        correspondentMatches,\n        creationTime,\n        isLogging,\n        conversationMatches,\n        type,\n        voicemailAttachment,\n      },\n      disableLinks: parentDisableLinks,\n      disableClickToDial,\n      onClickToDial,\n      onClickToSms,\n      onLogConversation,\n      onViewContact,\n      onCreateContact,\n      enableContactFallback,\n      showContactDisplayPlaceholder,\n      sourceIcons,\n      showGroupNumberName,\n    } = this.props;\n    let disableLinks = parentDisableLinks;\n    const isVoicemail = type === messageTypes.voiceMail;\n    if (isVoicemail && !voicemailAttachment) {\n      disableLinks = true;\n    }\n    const groupNumbers = this.getGroupPhoneNumbers();\n    const phoneNumber = this.getPhoneNumber();\n    const fallbackName = this.getFallbackContactName();\n    const detail = this.getDetail();\n    let player;\n    let slideMenuHeight = 60;\n    if (isVoicemail) {\n      player = (\n        <VoicemailPlayer\n          className={styles.player}\n          uri={voicemailAttachment.uri}\n          duration={voicemailAttachment.duration}\n          onPlay={this.onPlayVoicemail}\n          disabled={disableLinks}\n          currentLocale={currentLocale}\n        />\n      );\n      slideMenuHeight = 88;\n    }\n\n    return (\n      <div className={styles.root} onClick={this.onClickItem}>\n        <div\n          className={classnames(\n            styles.wrapper,\n            unreadCounts && styles.unread\n          )}\n        >\n          <ConversationIcon\n            group={correspondents.length > 1}\n            type={type}\n            currentLocale={currentLocale}\n          />\n          <ContactDisplay\n            reference={(ref) => { this.contactDisplay = ref; }}\n            className={classnames(\n              styles.contactDisplay,\n              unreadCounts && styles.unread\n            )}\n            selectClassName={styles.dropdownSelect}\n            brand={brand}\n            contactMatches={correspondentMatches}\n            selected={this.state.selected}\n            onSelectContact={this.onSelectContact}\n            disabled={disableLinks}\n            isLogging={isLogging || this.state.isLogging}\n            fallBackName={fallbackName}\n            areaCode={areaCode}\n            countryCode={countryCode}\n            phoneNumber={phoneNumber}\n            groupNumbers={groupNumbers}\n            showGroupNumberName={showGroupNumberName}\n            currentLocale={currentLocale}\n            enableContactFallback={enableContactFallback}\n            stopPropagation={false}\n            showType={false}\n            showPlaceholder={showContactDisplayPlaceholder}\n            sourceIcons={sourceIcons}\n          />\n          <div className={styles.details}>\n            {detail}\n          </div>\n          <div className={styles.creationTime}>\n            {this.dateTimeFormatter(creationTime)}\n          </div>\n        </div>\n        <SlideMenu\n          extended={this.state.extended}\n          onToggle={this.toggleExtended}\n          extendIconClassName={styles.extendIcon}\n          className={styles.slideMenu}\n          minHeight={0}\n          maxHeight={slideMenuHeight}\n        >\n          <div className={styles.playContainer} onClick={this.preventEventPropogation}>\n            {player}\n          </div>\n          <ActionMenuList\n            className={styles.actionMenuList}\n            currentLocale={currentLocale}\n            onLog={isVoicemail ? undefined : (onLogConversation && this.logConversation)}\n            onViewEntity={onViewContact && this.viewSelectedContact}\n            onCreateEntity={onCreateContact && this.createSelectedContact}\n            hasEntity={correspondents.length === 1 && !!correspondentMatches.length}\n            onClickToDial={onClickToDial && this.clickToDial}\n            onClickToSms={isVoicemail ? (onClickToSms && this.onClickToSms) : undefined}\n            phoneNumber={phoneNumber}\n            disableLinks={disableLinks}\n            disableClickToDial={disableClickToDial}\n            isLogging={isLogging || this.state.isLogging}\n            isLogged={conversationMatches.length > 0}\n            isCreating={this.state.isCreating}\n            addLogTitle={i18n.getString('addLog', currentLocale)}\n            editLogTitle={i18n.getString('editLog', currentLocale)}\n            callTitle={i18n.getString('call', currentLocale)}\n            textTitle={i18n.getString('text', currentLocale)}\n            createEntityTitle={i18n.getString('addEntity', currentLocale)}\n            viewEntityTitle={i18n.getString('viewDetails', currentLocale)}\n            stopPropagation={false}\n            onDelete={isVoicemail ? this.onDeleteMessage : undefined}\n            deleteTitle={i18n.getString('delete', currentLocale)}\n            marked={unreadCounts > 0}\n            onMark={isVoicemail ? this.onMarkVoicemail : undefined}\n            onUnmark={isVoicemail ? this.onUnmarkVoicemail : undefined}\n            markTitle={i18n.getString('mark', currentLocale)}\n            unmarkTitle={i18n.getString('unmark', currentLocale)}\n          />\n        </SlideMenu>\n      </div>\n    );\n  }\n}\n\nMessageItem.propTypes = {\n  conversation: PropTypes.shape({\n    conversationId: PropTypes.string.isRequired,\n    isLogging: PropTypes.bool,\n    correspondents: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n    })),\n    correspondentMatches: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      entityType: PropTypes.string,\n    })),\n    conversationMatches: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string,\n    })),\n    unreadCounts: PropTypes.number.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n  areaCode: PropTypes.string.isRequired,\n  brand: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onLogConversation: PropTypes.func,\n  onViewContact: PropTypes.func,\n  onCreateContact: PropTypes.func,\n  onClickToDial: PropTypes.func,\n  onClickToSms: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  showConversationDetail: PropTypes.func.isRequired,\n  readVoicemail: PropTypes.func.isRequired,\n  markVoicemail: PropTypes.func.isRequired,\n  unmarkVoicemail: PropTypes.func.isRequired,\n  autoLog: PropTypes.bool,\n  enableContactFallback: PropTypes.bool,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  showGroupNumberName: PropTypes.bool,\n  deleteMessage: PropTypes.func,\n};\n\nMessageItem.defaultProps = {\n  onLogConversation: undefined,\n  onClickToDial: undefined,\n  onViewContact: undefined,\n  onCreateContact: undefined,\n  disableClickToDial: false,\n  onClickToSms: undefined,\n  disableLinks: false,\n  autoLog: false,\n  enableContactFallback: undefined,\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  showGroupNumberName: false,\n  deleteMessage: () => {},\n};\n"]}