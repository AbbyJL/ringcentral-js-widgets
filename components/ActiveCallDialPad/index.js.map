{"version":3,"sources":["components/ActiveCallDialPad/index.js"],"names":["cleanRegex","filter","value","replace","ActiveCallDialPad","props","state","document","createElement","audio","playAudio","canPlayType","paused","pause","src","currentTime","play","onButtonOutput","key","setState","preState","onChange","sendDTMFKeys","keys","length","slice","split","forEach","index","setTimeout","e","currentTarget","onKeyDown","onPaste","item","clipboardData","items","getAsString","data","root","hiddenDialPad","getString","currentLocale","dialInput","input","padContainer","dialPad","buttonRow","button","stopButton","onHangup","propTypes","func","isRequired","string"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DialPad from '../DialPad';\nimport CircleButton from '../CircleButton';\nimport BackHeader from '../BackHeader';\n\nimport audios from '../DialButton/audios';\n\nimport EndIcon from '../../assets/images/End.svg';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst cleanRegex = /[^\\d*#]/g;\nconst filter = value => value.replace(cleanRegex, '');\n\nclass ActiveCallDialPad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n    };\n\n    if (typeof document !== 'undefined' && document.createElement) {\n      this.audio = document.createElement('audio');\n    }\n\n    this.playAudio = (value) => {\n      if (this.audio && this.audio.canPlayType('audio/ogg') !== '' && audios[value]) {\n        if (!this.audio.paused) {\n          this.audio.pause();\n        }\n        this.audio.src = audios[value];\n        this.audio.currentTime = 0;\n        this.audio.play();\n      }\n    };\n\n    this.onButtonOutput = (key) => {\n      this.setState((preState) => {\n        const value = preState.value + key;\n        this.props.onChange(key);\n        return { value };\n      });\n    };\n\n    this.sendDTMFKeys = (value) => {\n      let keys = filter(value);\n      if (keys === '') {\n        return;\n      }\n      if (keys.length > 15) {\n        keys = keys.slice(0, 15);\n      }\n      keys = keys.split('');\n      keys.forEach((key, index) => {\n        setTimeout(() => {\n          this.playAudio(key);\n          this.props.onChange(key);\n        }, 100 * index);\n      });\n    };\n\n    this.onChange = (e) => {\n      const value = filter(e.currentTarget.value);\n      this.setState((preState) => {\n        if (value.length - preState.value.length < 15) {\n          return {\n            value\n          };\n        }\n        return {\n          value: value.slice(0, preState.value.length + 15)\n        };\n      });\n    };\n\n    this.onKeyDown = (e) => {\n      const value = filter(e.key);\n      this.sendDTMFKeys(value);\n    };\n\n    this.onPaste = (e) => {\n      const item = e.clipboardData.items[0];\n      item.getAsString((data) => {\n        this.sendDTMFKeys(data);\n      });\n    };\n  }\n\n  render() {\n    return (\n      <div className={styles.root}>\n        <BackHeader\n          onBackClick={this.props.hiddenDialPad}\n          >\n          {i18n.getString('keypad', this.props.currentLocale)}\n        </BackHeader>\n        <div className={styles.dialInput}>\n          <input\n            className={styles.input}\n            value={this.state.value}\n            onChange={this.onChange}\n            onKeyDown={this.onKeyDown}\n            onPaste={this.onPaste}\n            autoFocus // eslint-disable-line\n          />\n        </div>\n        <div className={styles.padContainer}>\n          <DialPad\n            className={styles.dialPad}\n            onButtonOutput={this.onButtonOutput}\n          />\n          <div className={styles.buttonRow}>\n            <div className={styles.button}>\n              <CircleButton\n                className={styles.stopButton}\n                onClick={this.props.onHangup}\n                icon={EndIcon}\n                showBorder={false}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nActiveCallDialPad.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  hiddenDialPad: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nexport default ActiveCallDialPad;\n\n"]}