{"version":3,"sources":["components/ActiveCallDialPad/index.js"],"names":["ActiveCallDialPad","props","state","value","onButtonOutput","key","setState","preState","onChange","root","hiddenDialPad","getString","currentLocale","dialInput","input","padContainer","dialPad","buttonRow","button","stopButton","onHangup","propTypes","func","isRequired","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;;;IAEMA,iB;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,4JACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,aAAO;AADI,KAAb;AAGA,UAAKC,cAAL,GAAsB,UAACC,GAAD,EAAS;AAC7B,YAAKC,QAAL,CAAc,UAACC,QAAD,EAAc;AAC1B,YAAMJ,QAAQI,SAASJ,KAAT,GAAiBE,GAA/B;AACA,cAAKJ,KAAL,CAAWO,QAAX,CAAoBH,GAApB;AACA,eAAO,EAAEF,YAAF,EAAP;AACD,OAJD;AAKD,KAND;AALiB;AAYlB;;;;6BAEQ;AACP,aACE;AAAA;AAAA,UAAK,WAAW,iBAAOM,IAAvB;AACE;AAAA;AAAA;AACE,yBAAa,KAAKR,KAAL,CAAWS;AAD1B;AAGG,yBAAKC,SAAL,CAAe,QAAf,EAAyB,KAAKV,KAAL,CAAWW,aAApC;AAHH,SADF;AAME;AAAA;AAAA,YAAK,WAAW,iBAAOC,SAAvB;AACE;AACE,uBAAW,iBAAOC,KADpB;AAEE,mBAAO,KAAKZ,KAAL,CAAWC;AAFpB;AADF,SANF;AAYE;AAAA;AAAA,YAAK,WAAW,iBAAOY,YAAvB;AACE;AACE,uBAAW,iBAAOC,OADpB;AAEE,4BAAgB,KAAKZ;AAFvB,YADF;AAKE;AAAA;AAAA,cAAK,WAAW,iBAAOa,SAAvB;AACE;AAAA;AAAA,gBAAK,WAAW,iBAAOC,MAAvB;AACE;AACE,2BAAW,iBAAOC,UADpB;AAEE,yBAAS,KAAKlB,KAAL,CAAWmB,QAFtB;AAGE,mCAHF;AAIE,4BAAY;AAJd;AADF;AADF;AALF;AAZF,OADF;AA+BD;;;;;AAGHpB,kBAAkBqB,SAAlB,GAA8B;AAC5Bb,YAAU,oBAAUc,IAAV,CAAeC,UADG;AAE5Bb,iBAAe,oBAAUY,IAAV,CAAeC,UAFF;AAG5BH,YAAU,oBAAUE,IAAV,CAAeC,UAHG;AAI5BX,iBAAe,oBAAUY,MAAV,CAAiBD;AAJJ,CAA9B;;kBAOevB,iB","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DialPad from '../DialPad';\nimport CircleButton from '../CircleButton';\nimport BackHeader from '../BackHeader';\n\nimport EndIcon from '../../assets/images/End.svg';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nclass ActiveCallDialPad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n    };\n    this.onButtonOutput = (key) => {\n      this.setState((preState) => {\n        const value = preState.value + key;\n        this.props.onChange(key);\n        return { value };\n      });\n    };\n  }\n\n  render() {\n    return (\n      <div className={styles.root}>\n        <BackHeader\n          onBackClick={this.props.hiddenDialPad}\n          >\n          {i18n.getString('keypad', this.props.currentLocale)}\n        </BackHeader>\n        <div className={styles.dialInput}>\n          <input\n            className={styles.input}\n            value={this.state.value}\n          />\n        </div>\n        <div className={styles.padContainer}>\n          <DialPad\n            className={styles.dialPad}\n            onButtonOutput={this.onButtonOutput}\n          />\n          <div className={styles.buttonRow}>\n            <div className={styles.button}>\n              <CircleButton\n                className={styles.stopButton}\n                onClick={this.props.onHangup}\n                icon={EndIcon}\n                showBorder={false}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nActiveCallDialPad.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  hiddenDialPad: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nexport default ActiveCallDialPad;\n\n"]}