{"version":3,"sources":["components/IncomingCallPanel/index.js"],"names":["IncomingCallPanel","UserInfo","props","avatar","avatarUrl","dynamicsFont","portrait","styles","icon","userInfo","avatarContainer","avatarHolder","ringOutside","ringing","ringInner","userNameContainer","userName","dropdown","nameMatches","phoneNumber","fallBackName","currentLocale","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","brand","showContactDisplayPlaceholder","sourceIcons","userPhoneNumber","formatPhone","propTypes","PropTypes","string","isRequired","func","array","number","bool","object","defaultProps","className","undefined","root","backButton","onBackButtonClick","arrow","backIcon","callPad","forwardingNumbers","answer","reject","toVoiceMail","replyWithMessage","onForward","hasOtherActiveCall","answerAndEnd","answerAndHold","sessionId","searchContact","searchContactList","phoneTypeRenderer","children","node"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport IncomingCallPad from '../IncomingCallPad';\nimport ContactDisplay from '../ContactDisplay';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\n\nfunction UserInfo(props) {\n  let avatar;\n  if (props.avatarUrl) {\n    avatar = (<img src={props.avatarUrl} alt=\"avatar\" />);\n  } else {\n    avatar = (<i className={classnames(dynamicsFont.portrait, styles.icon)} />);\n  }\n  return (\n    <div className={styles.userInfo}>\n      <div className={styles.avatarContainer}>\n        <div className={styles.avatarHolder}>\n          <div className={classnames(styles.ringOutside, styles.ringing)} />\n          <div className={classnames(styles.ringInner, styles.ringing)} />\n          <div className={styles.avatar}>\n            {avatar}\n          </div>\n        </div>\n      </div>\n      <div className={styles.userNameContainer}>\n        <ContactDisplay\n          className={styles.userName}\n          selectClassName={styles.dropdown}\n          contactMatches={props.nameMatches}\n          phoneNumber={props.phoneNumber}\n          fallBackName={props.fallBackName}\n          currentLocale={props.currentLocale}\n          areaCode={props.areaCode}\n          countryCode={props.countryCode}\n          showType={false}\n          disabled={false}\n          selected={props.selectedMatcherIndex}\n          onSelectContact={props.onSelectMatcherName}\n          isLogging={false}\n          enableContactFallback\n          brand={props.brand}\n          showPlaceholder={props.showContactDisplayPlaceholder}\n          sourceIcons={props.sourceIcons}\n        />\n      </div>\n      <div className={styles.userPhoneNumber}>\n        {props.formatPhone(props.phoneNumber)}\n      </div>\n    </div>\n  );\n}\n\nUserInfo.propTypes = {\n  phoneNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n};\n\nUserInfo.defaultProps = {\n  className: null,\n  phoneNumber: null,\n  avatarUrl: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n};\n\nexport default function IncomingCallPanel(props) {\n  return (\n    <div className={classnames(styles.root, props.className)}>\n      <span className={styles.backButton} onClick={props.onBackButtonClick}>\n        <i className={classnames(dynamicsFont.arrow, styles.backIcon)} />\n      </span>\n      <UserInfo\n        phoneNumber={props.phoneNumber}\n        currentLocale={props.currentLocale}\n        className={styles.userInfo}\n        formatPhone={props.formatPhone}\n        nameMatches={props.nameMatches}\n        fallBackName={props.fallBackName}\n        areaCode={props.areaCode}\n        countryCode={props.countryCode}\n        selectedMatcherIndex={props.selectedMatcherIndex}\n        onSelectMatcherName={props.onSelectMatcherName}\n        avatarUrl={props.avatarUrl}\n        brand={props.brand}\n        showContactDisplayPlaceholder={props.showContactDisplayPlaceholder}\n        sourceIcons={props.sourceIcons}\n      />\n      <IncomingCallPad\n        className={styles.callPad}\n        forwardingNumbers={props.forwardingNumbers}\n        formatPhone={props.formatPhone}\n        answer={props.answer}\n        reject={props.reject}\n        toVoiceMail={props.toVoiceMail}\n        replyWithMessage={props.replyWithMessage}\n        onForward={props.onForward}\n        currentLocale={props.currentLocale}\n        hasOtherActiveCall={props.hasOtherActiveCall}\n        answerAndEnd={props.answerAndEnd}\n        answerAndHold={props.answerAndHold}\n        sessionId={props.sessionId}\n        searchContact={props.searchContact}\n        searchContactList={props.searchContactList}\n        phoneTypeRenderer={props.phoneTypeRenderer}\n      />\n      {props.children}\n    </div>\n  );\n}\n\nIncomingCallPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string,\n  className: PropTypes.string,\n  answer: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  toVoiceMail: PropTypes.func.isRequired,\n  replyWithMessage: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  formatPhone: PropTypes.func.isRequired,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  onBackButtonClick: PropTypes.func.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  onForward: PropTypes.func.isRequired,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  answerAndEnd: PropTypes.func,\n  answerAndHold: PropTypes.func,\n  hasOtherActiveCall: PropTypes.bool,\n  sessionId: PropTypes.string.isRequired,\n  sourceIcons: PropTypes.object,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n};\n\nIncomingCallPanel.defaultProps = {\n  className: null,\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  answerAndEnd: undefined,\n  answerAndHold: undefined,\n  hasOtherActiveCall: false,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n};\n"]}