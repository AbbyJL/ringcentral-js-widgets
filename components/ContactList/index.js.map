{"version":3,"sources":["components/ContactList/index.js"],"names":["NoContacts","currentLocale","styles","noContacts","i18n","getString","propTypes","PropTypes","string","isRequired","ContactGroup","caption","contacts","getAvatarUrl","getPresence","onItemSelect","sourceNodeRenderer","contactGroup","groupCaption","map","contact","type","id","func","arrayOf","ContactItem","defaultProps","undefined","ContactList","props","downwards","onScroll","bind","rootElem","listRef","setTimeout","detectNextPage","ev","target","el","scrollTop","clientHeight","scrollHeight","currentPage","onNextPage","curr","contactGroups","root","length","group","Component","shape","number"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ContactItem from '../ContactItem';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction NoContacts({ currentLocale }) {\n  return (\n    <p className={styles.noContacts}>\n      {i18n.getString('noContacts', currentLocale)}\n    </p>\n  );\n}\nNoContacts.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n};\n\nfunction ContactGroup({\n  caption,\n  contacts,\n  getAvatarUrl,\n  getPresence,\n  onItemSelect,\n  sourceNodeRenderer\n}) {\n  return (\n    <div className={styles.contactGroup}>\n      <div className={styles.groupCaption}>\n        {caption}\n      </div>\n      {\n        contacts.map(contact => (\n          <ContactItem\n            key={`${contact.type}${contact.id}`}\n            contact={contact}\n            getAvatarUrl={getAvatarUrl}\n            getPresence={getPresence}\n            onSelect={onItemSelect}\n            sourceNodeRenderer={sourceNodeRenderer}\n          />\n        ))\n      }\n    </div>\n  );\n}\nContactGroup.propTypes = {\n  onItemSelect: PropTypes.func,\n  getAvatarUrl: PropTypes.func.isRequired,\n  getPresence: PropTypes.func.isRequired,\n  caption: PropTypes.string.isRequired,\n  contacts: PropTypes.arrayOf(ContactItem.propTypes.contact).isRequired,\n  sourceNodeRenderer: PropTypes.func,\n};\nContactGroup.defaultProps = {\n  onItemSelect: undefined,\n  sourceNodeRenderer: undefined,\n};\n\nexport default class ContactList extends Component {\n  constructor(props) {\n    super(props);\n    this.downwards = true;\n    this.onScroll = this.onScroll.bind(this);\n  }\n\n  componentDidMount() {\n    this.rootElem = this.props.listRef;\n    // wait for contact items rendering\n    setTimeout(() => {\n      // detect here for the case when there is no scroll bar\n      this.detectNextPage(this.rootElem);\n    }, 0);\n  }\n\n  onScroll(ev) {\n    this.detectNextPage(ev.target);\n  }\n\n  detectNextPage(el) {\n    if (!el) {\n      return;\n    }\n    if (this.downwards) {\n      if ((el.scrollTop + el.clientHeight) > (el.scrollHeight - 20)) {\n        this.downwards = false;\n        const { currentPage, onNextPage } = this.props;\n        if (onNextPage) {\n          const curr = (currentPage || 1);\n          onNextPage(curr + 1);\n        }\n      }\n    } else if ((el.scrollTop + el.clientHeight) < (el.scrollHeight - 30)) {\n      this.downwards = true;\n    }\n  }\n\n  render() {\n    const {\n      currentLocale,\n      contactGroups,\n      getAvatarUrl,\n      getPresence,\n      onItemSelect,\n      sourceNodeRenderer,\n      listRef\n    } = this.props;\n    return (\n      <div\n        className={styles.root}\n        onScroll={this.onScroll}\n        ref={listRef}\n      >\n        {\n          contactGroups.length ?\n            contactGroups.map(group => (\n              <ContactGroup\n                key={group.id}\n                caption={group.caption}\n                contacts={group.contacts}\n                getAvatarUrl={getAvatarUrl}\n                getPresence={getPresence}\n                onItemSelect={onItemSelect}\n                sourceNodeRenderer={sourceNodeRenderer}\n              />\n            )) :\n            <NoContacts\n              currentLocale={currentLocale}\n            />\n        }\n      </div>\n    );\n  }\n}\n\nContactList.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactGroups: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    contacts: PropTypes.arrayOf(ContactItem.propTypes.contact).isRequired,\n  })).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  getPresence: PropTypes.func.isRequired,\n  currentPage: PropTypes.number,\n  onNextPage: PropTypes.func,\n  onItemSelect: PropTypes.func,\n  sourceNodeRenderer: PropTypes.func,\n  listRef: PropTypes.func,\n};\n\nContactList.defaultProps = {\n  currentPage: undefined,\n  onNextPage: undefined,\n  onItemSelect: undefined,\n  sourceNodeRenderer: undefined,\n  listRef: undefined,\n};\n"]}