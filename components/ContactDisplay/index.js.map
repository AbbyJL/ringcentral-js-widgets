{"version":3,"sources":["components/ContactDisplay/index.js"],"names":["ContactDisplay","displayFormatter","entityName","entityType","phoneNumber","currentLocale","brand","typeName","getString","ContactDisplayItem","sourceIcons","SourceIcon","rcContact","brandIcon","undefined","typeIcon","propTypes","string","isRequired","object","reference","className","contactMatches","selected","onSelectContact","disabled","isLogging","fallBackName","enableContactFallback","areaCode","countryCode","groupNumbers","showType","selectClassName","showPlaceholder","stopPropagation","showGroupNumberName","contentEl","groupNames","map","groupNumber","groupContact","find","match","extensionNumber","name","display","join","currentName","length","title","options","placeholder","_selected","select","entity","value","root","func","arrayOf","any","number","bool","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport formatMessage from 'format-message';\nimport DropdownSelect from '../DropdownSelect';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport phoneSourceNames from '../../lib/phoneSourceNames';\nimport phoneSources from '../../enums/phoneSources';\n\nconst displayFormatter = ({\n  entityName,\n  entityType,\n  phoneNumber,\n  currentLocale,\n  brand,\n}) => {\n  let typeName;\n  if (entityType) {\n    typeName = formatMessage(\n      phoneSourceNames.getString(entityType, currentLocale),\n      { brand }\n    );\n  }\n  if (phoneNumber && entityName && entityType) {\n    return `${entityName} | ${typeName} ${phoneNumber}`;\n  } else if (entityName && entityType) {\n    return `${entityName} | ${typeName}`;\n  } else if (entityName) {\n    return entityName;\n  } else if (phoneNumber) {\n    return `${phoneNumber}`;\n  }\n  return '';\n};\n\nfunction ContactDisplayItem({\n  entityName,\n  entityType,\n  phoneNumber,\n  sourceIcons\n}) {\n  let SourceIcon = null;\n  if (entityType) {\n    if (entityType === phoneSources.rcContact) {\n      SourceIcon = sourceIcons.brandIcon;\n    } else {\n      SourceIcon = sourceIcons[entityType];\n    }\n  }\n  if (phoneNumber && entityName !== undefined && SourceIcon) {\n    return (\n      <span>\n        <SourceIcon className={styles.typeIcon} width={10} height={10} />\n        <span className={styles.typeName}>{entityName}</span>\n      </span>\n    );\n  } else if (entityName !== undefined && SourceIcon) {\n    return (\n      <span>\n        <SourceIcon className={styles.typeIcon} width={10} height={10} />\n        <span className={styles.typeName}>{entityName}</span>\n      </span>\n    );\n  } else if (entityName !== undefined) {\n    return <span>{entityName}</span>;\n  } else if (phoneNumber) {\n    return <span>{phoneNumber}</span>;\n  }\n  return null;\n}\n\nContactDisplayItem.propTypes = {\n  entityName: PropTypes.string.isRequired,\n  entityType: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  sourceIcons: PropTypes.object.isRequired,\n};\n\nexport default function ContactDisplay({\n  reference,\n  className,\n  contactMatches,\n  selected,\n  onSelectContact,\n  disabled,\n  isLogging,\n  fallBackName,\n  enableContactFallback,\n  areaCode,\n  countryCode,\n  phoneNumber,\n  currentLocale,\n  groupNumbers,\n  showType,\n  selectClassName,\n  showPlaceholder,\n  brand,\n  stopPropagation,\n  sourceIcons = {},\n  showGroupNumberName,\n}) {\n  let contentEl;\n  if (groupNumbers && showGroupNumberName) {\n    const groupNames = groupNumbers.map((groupNumber) => {\n      const groupContact = contactMatches.find(match => match.extensionNumber === groupNumber);\n      return (groupContact && groupContact.name) || groupNumber;\n    });\n    const display = groupNames.join(', ');\n    contentEl = (\n      <div title={display} className={styles.currentName}>\n        {display}\n      </div>\n    );\n  } else if (groupNumbers) {\n    const display = groupNumbers.join(', ');\n    contentEl = (\n      <div title={display} className={styles.currentName}>\n        {display}\n      </div>\n    );\n  } else if (contactMatches.length === 0) {\n    const display = (enableContactFallback && fallBackName) ||\n      (phoneNumber && formatNumber({\n        phoneNumber,\n        countryCode,\n        areaCode,\n      })) ||\n      i18n.getString('unknownNumber', currentLocale);\n    const title = (enableContactFallback && fallBackName) ||\n      phoneNumber || '';\n    contentEl = (\n      <div title={title} className={styles.currentName}>\n        {display}\n      </div>\n    );\n  } else if (contactMatches.length === 1) {\n    const display = contactMatches[0].name;\n    const title = displayFormatter({\n      entityName: display,\n      entityType: contactMatches[0].entityType,\n      phoneNumber,\n      brand,\n      currentLocale\n    });\n    contentEl = (\n      <div title={title} className={styles.currentName}>\n        {display}\n      </div>\n    );\n  } else if (contactMatches.length > 1) {\n    const options = [\n      ...contactMatches,\n    ];\n    let placeholder;\n    let _selected = selected;\n    if (showPlaceholder) {\n      placeholder = i18n.getString('select', currentLocale);\n    } else {\n      _selected = _selected < 0 ? 0 : _selected;\n    }\n    contentEl = (\n      <DropdownSelect\n        reference={reference}\n        className={classnames(styles.select, selectClassName)}\n        value={`${_selected}`}\n        onChange={onSelectContact}\n        disabled={disabled || isLogging}\n        options={options}\n        placeholder={placeholder}\n        renderFunction={entity => (\n          ContactDisplayItem({\n            entityName: entity.name,\n            entityType: entity.entityType,\n            brand,\n            currentLocale,\n            sourceIcons\n          })\n        )}\n        renderValue={value => (\n          displayFormatter({\n            entityName: options[value].name,\n            entityType: showType && options[value].entityType,\n            brand,\n            currentLocale,\n          })\n        )}\n        renderTitle={entity => (\n          entity ? displayFormatter({\n            entityName: entity.name,\n            entityType: entity.entityType,\n            phoneNumber,\n            brand,\n            currentLocale,\n          }) : phoneNumber)\n        }\n        dropdownAlign=\"left\"\n        titleEnabled\n        noPadding\n        stopPropagation={stopPropagation}\n      />\n    );\n  }\n  return (\n    <div\n      className={classnames(\n        styles.root,\n        className,\n      )} >\n      {contentEl}\n    </div>\n  );\n}\nContactDisplay.propTypes = {\n  reference: PropTypes.func,\n  className: PropTypes.string,\n  contactMatches: PropTypes.arrayOf(PropTypes.any).isRequired,\n  selected: PropTypes.number.isRequired,\n  onSelectContact: PropTypes.func,\n  disabled: PropTypes.bool.isRequired,\n  isLogging: PropTypes.bool.isRequired,\n  fallBackName: PropTypes.string,\n  enableContactFallback: PropTypes.bool,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  groupNumbers: PropTypes.arrayOf(PropTypes.string),\n  showType: PropTypes.bool,\n  selectClassName: PropTypes.string,\n  showPlaceholder: PropTypes.bool,\n  brand: PropTypes.string,\n  stopPropagation: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  showGroupNumberName: PropTypes.bool,\n};\nContactDisplay.defaultProps = {\n  reference: undefined,\n  className: undefined,\n  onSelectContact: undefined,\n  fallBackName: '',\n  phoneNumber: undefined,\n  groupNumbers: undefined,\n  enableContactFallback: undefined,\n  showType: true,\n  selectClassName: undefined,\n  showPlaceholder: true,\n  brand: undefined,\n  stopPropagation: true,\n  sourceIcons: undefined,\n  showGroupNumberName: false,\n};\n"]}