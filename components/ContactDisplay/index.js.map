{"version":3,"sources":["components/ContactDisplay/index.js"],"names":["ContactDisplay","displayFormatter","entityName","entityType","phoneNumber","currentLocale","brand","typeName","getString","ContactDisplayItem","sourceIcons","SourceIcon","rcContact","brandIcon","typeIcon","propTypes","string","isRequired","object","reference","className","contactMatches","selected","onSelectContact","disabled","isLogging","fallBackName","enableContactFallback","areaCode","countryCode","groupNumbers","showType","selectClassName","showPlaceholder","stopPropagation","contentEl","display","join","length","title","name","options","placeholder","_selected","select","entity","value","root","func","arrayOf","any","number","bool","defaultProps","undefined"],"mappings":";;;;;;;;;;kBAgFwBA,c;;AAhFxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,mBAAmB,SAAnBA,gBAAmB,OAMnB;AAAA,MALJC,UAKI,QALJA,UAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADJC,KACI,QADJA,KACI;;AACJ,MAAIC,iBAAJ;AACA,MAAIJ,UAAJ,EAAgB;AACdI,eAAW,6BACT,2BAAiBC,SAAjB,CAA2BL,UAA3B,EAAuCE,aAAvC,CADS,EAET,EAAEC,YAAF,EAFS,CAAX;AAID;AACD,MAAIF,eAAeF,UAAf,IAA6BC,UAAjC,EAA6C;AAC3C,WAAUD,UAAV,WAA0BK,QAA1B,SAAsCH,WAAtC;AACD,GAFD,MAEO,IAAIF,cAAcC,UAAlB,EAA8B;AACnC,WAAUD,UAAV,WAA0BK,QAA1B;AACD,GAFM,MAEA,IAAIL,UAAJ,EAAgB;AACrB,WAAOA,UAAP;AACD,GAFM,MAEA,IAAIE,WAAJ,EAAiB;AACtB,gBAAUA,WAAV;AACD;AACD,SAAO,EAAP;AACD,CAxBD;;AA0BA,SAASK,kBAAT,QAKG;AAAA,MAJDP,UAIC,SAJDA,UAIC;AAAA,MAHDC,UAGC,SAHDA,UAGC;AAAA,MAFDC,WAEC,SAFDA,WAEC;AAAA,MADDM,WACC,SADDA,WACC;;AACD,MAAIC,aAAa,IAAjB;AACA,MAAIR,UAAJ,EAAgB;AACd,QAAIA,eAAe,uBAAaS,SAAhC,EAA2C;AACzCD,mBAAaD,YAAYG,SAAzB;AACD,KAFD,MAEO;AACLF,mBAAaD,YAAYP,UAAZ,KAA2B,2CAAxC;AACD;AACF;AACD,MAAIC,eAAeF,UAAf,IAA6BS,UAAjC,EAA6C;AAC3C,WACE;AAAA;AAAA;AACE,oCAAC,UAAD,IAAY,WAAW,iBAAOG,QAA9B,EAAwC,OAAO,EAA/C,EAAmD,QAAQ,EAA3D,GADF;AAEE;AAAA;AAAA,UAAM,WAAW,iBAAOP,QAAxB;AAAmCL;AAAnC;AAFF,KADF;AAMD,GAPD,MAOO,IAAIA,cAAcS,UAAlB,EAA8B;AACnC,WACE;AAAA;AAAA;AACE,oCAAC,UAAD,IAAY,WAAW,iBAAOG,QAA9B,EAAwC,OAAO,EAA/C,EAAmD,QAAQ,EAA3D,GADF;AAEE;AAAA;AAAA,UAAM,WAAW,iBAAOP,QAAxB;AAAmCL;AAAnC;AAFF,KADF;AAMD,GAPM,MAOA,IAAIA,UAAJ,EAAgB;AACrB,WAAO;AAAA;AAAA;AAAOA;AAAP,KAAP;AACD,GAFM,MAEA,IAAIE,WAAJ,EAAiB;AACtB,WAAO;AAAA;AAAA;AAAOA;AAAP,KAAP;AACD;AACD,SAAO,IAAP;AACD;;AAEDK,mBAAmBM,SAAnB,GAA+B;AAC7Bb,cAAY,oBAAUc,MAAV,CAAiBC,UADA;AAE7Bd,cAAY,oBAAUa,MAAV,CAAiBC,UAFA;AAG7Bb,eAAa,oBAAUY,MAAV,CAAiBC,UAHD;AAI7BP,eAAa,oBAAUQ,MAAV,CAAiBD;AAJD,CAA/B;;AAOe,SAASjB,cAAT,QAqBZ;AAAA,MApBDmB,SAoBC,SApBDA,SAoBC;AAAA,MAnBDC,SAmBC,SAnBDA,SAmBC;AAAA,MAlBDC,cAkBC,SAlBDA,cAkBC;AAAA,MAjBDC,QAiBC,SAjBDA,QAiBC;AAAA,MAhBDC,eAgBC,SAhBDA,eAgBC;AAAA,MAfDC,QAeC,SAfDA,QAeC;AAAA,MAdDC,SAcC,SAdDA,SAcC;AAAA,MAbDC,YAaC,SAbDA,YAaC;AAAA,MAZDC,qBAYC,SAZDA,qBAYC;AAAA,MAXDC,QAWC,SAXDA,QAWC;AAAA,MAVDC,WAUC,SAVDA,WAUC;AAAA,MATDzB,WASC,SATDA,WASC;AAAA,MARDC,aAQC,SARDA,aAQC;AAAA,MAPDyB,YAOC,SAPDA,YAOC;AAAA,MANDC,QAMC,SANDA,QAMC;AAAA,MALDC,eAKC,SALDA,eAKC;AAAA,MAJDC,eAIC,SAJDA,eAIC;AAAA,MAHD3B,KAGC,SAHDA,KAGC;AAAA,MAFD4B,eAEC,SAFDA,eAEC;AAAA,gCADDxB,WACC;AAAA,MADDA,WACC,qCADa,EACb;;AACD,MAAIyB,kBAAJ;AACA,MAAIL,YAAJ,EAAkB;AAChB,QAAMM,UAAUN,aAAaO,IAAb,CAAkB,IAAlB,CAAhB;AACAF,gBACE;AAAA;AAAA,QAAK,OAAOC,OAAZ;AACGA;AADH,KADF;AAKD,GAPD,MAOO,IAAIf,eAAeiB,MAAf,KAA0B,CAA9B,EAAiC;AACtC,QAAMF,WAAWT,yBAAyBD,YAA1B,IACbtB,eAAe,4BAAa;AAC3BA,8BAD2B;AAE3ByB,8BAF2B;AAG3BD;AAH2B,KAAb,CADF,IAMd,eAAKpB,SAAL,CAAe,eAAf,EAAgCH,aAAhC,CANF;AAOA,QAAMkC,QAASZ,yBAAyBD,YAA1B,IACZtB,WADY,IACG,EADjB;AAEA+B,gBACE;AAAA;AAAA,QAAK,OAAOI,KAAZ;AACGH;AADH,KADF;AAKD,GAfM,MAeA,IAAIf,eAAeiB,MAAf,KAA0B,CAA9B,EAAiC;AACtC,QAAMF,YAAUf,eAAe,CAAf,EAAkBmB,IAAlC;AACA,QAAMD,SAAQtC,iBAAiB;AAC7BC,kBAAYkC,SADiB;AAE7BjC,kBAAYkB,eAAe,CAAf,EAAkBlB,UAFD;AAG7BC,8BAH6B;AAI7BE,kBAJ6B;AAK7BD;AAL6B,KAAjB,CAAd;AAOA8B,gBACE;AAAA;AAAA,QAAK,OAAOI,MAAZ;AACGH;AADH,KADF;AAKD,GAdM,MAcA,IAAIf,eAAeiB,MAAf,GAAwB,CAA5B,EAA+B;AACpC,QAAMG,qDACDpB,cADC,EAAN;AAGA,QAAIqB,oBAAJ;AACA,QAAIC,YAAYrB,QAAhB;AACA,QAAIW,eAAJ,EAAqB;AACnBS,oBAAc,eAAKlC,SAAL,CAAe,QAAf,EAAyBH,aAAzB,CAAd;AACD,KAFD,MAEO;AACLsC,kBAAYA,YAAY,CAAZ,GAAgB,CAAhB,GAAoBA,SAAhC;AACD;AACDR,gBACE;AACE,iBAAWhB,SADb;AAEE,iBAAW,0BAAW,iBAAOyB,MAAlB,EAA0BZ,eAA1B,CAFb;AAGE,kBAAUW,SAHZ;AAIE,gBAAUpB,eAJZ;AAKE,gBAAUC,YAAYC,SALxB;AAME,eAASgB,OANX;AAOE,mBAAaC,WAPf;AAQE,sBAAgB;AAAA,eACdjC,mBAAmB;AACjBP,sBAAY2C,OAAOL,IADF;AAEjBrC,sBAAY0C,OAAO1C,UAFF;AAGjBG,sBAHiB;AAIjBD,sCAJiB;AAKjBK;AALiB,SAAnB,CADc;AAAA,OARlB;AAiBE,mBAAa;AAAA,eACXT,iBAAiB;AACfC,sBAAYuC,QAAQK,KAAR,EAAeN,IADZ;AAEfrC,sBAAY4B,YAAYU,QAAQK,KAAR,EAAe3C,UAFxB;AAGfG,sBAHe;AAIfD;AAJe,SAAjB,CADW;AAAA,OAjBf;AAyBE,mBAAa;AAAA,eACXwC,SAAS5C,iBAAiB;AACxBC,sBAAY2C,OAAOL,IADK;AAExBrC,sBAAY0C,OAAO1C,UAFK;AAGxBC,kCAHwB;AAIxBE,sBAJwB;AAKxBD;AALwB,SAAjB,CAAT,GAMKD,WAPM;AAAA,OAzBf;AAkCE,qBAAc,MAlChB;AAmCE,wBAnCF;AAoCE,qBApCF;AAqCE,uBAAiB8B;AArCnB,MADF;AAyCD;AACD,SACE;AAAA;AAAA;AACE,iBAAW,0BACT,iBAAOa,IADE,EAET3B,SAFS,CADb;AAKGe;AALH,GADF;AASD;AACDnC,eAAee,SAAf,GAA2B;AACzBI,aAAW,oBAAU6B,IADI;AAEzB5B,aAAW,oBAAUJ,MAFI;AAGzBK,kBAAgB,oBAAU4B,OAAV,CAAkB,oBAAUC,GAA5B,EAAiCjC,UAHxB;AAIzBK,YAAU,oBAAU6B,MAAV,CAAiBlC,UAJF;AAKzBM,mBAAiB,oBAAUyB,IALF;AAMzBxB,YAAU,oBAAU4B,IAAV,CAAenC,UANA;AAOzBQ,aAAW,oBAAU2B,IAAV,CAAenC,UAPD;AAQzBS,gBAAc,oBAAUV,MARC;AASzBW,yBAAuB,oBAAUyB,IATR;AAUzBxB,YAAU,oBAAUZ,MAAV,CAAiBC,UAVF;AAWzBY,eAAa,oBAAUb,MAAV,CAAiBC,UAXL;AAYzBb,eAAa,oBAAUY,MAZE;AAazBX,iBAAe,oBAAUW,MAAV,CAAiBC,UAbP;AAczBa,gBAAc,oBAAUmB,OAAV,CAAkB,oBAAUjC,MAA5B,CAdW;AAezBe,YAAU,oBAAUqB,IAfK;AAgBzBpB,mBAAiB,oBAAUhB,MAhBF;AAiBzBiB,mBAAiB,oBAAUmB,IAjBF;AAkBzB9C,SAAO,oBAAUU,MAlBQ;AAmBzBkB,mBAAiB,oBAAUkB,IAnBF;AAoBzB1C,eAAa,oBAAUQ;AApBE,CAA3B;AAsBAlB,eAAeqD,YAAf,GAA8B;AAC5BlC,aAAWmC,SADiB;AAE5BlC,aAAWkC,SAFiB;AAG5B/B,mBAAiB+B,SAHW;AAI5B5B,gBAAc,EAJc;AAK5BtB,eAAakD,SALe;AAM5BxB,gBAAcwB,SANc;AAO5B3B,yBAAuB2B,SAPK;AAQ5BvB,YAAU,IARkB;AAS5BC,mBAAiBsB,SATW;AAU5BrB,mBAAiB,IAVW;AAW5B3B,SAAOgD,SAXqB;AAY5BpB,mBAAiB,IAZW;AAa5BxB,eAAa4C;AAbe,CAA9B","file":"index.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\r\nimport formatMessage from 'format-message';\r\nimport DropdownSelect from '../DropdownSelect';\r\nimport i18n from './i18n';\r\nimport styles from './styles.scss';\r\nimport phoneSourceNames from '../../lib/phoneSourceNames';\r\nimport phoneSources from '../../enums/phoneSources';\r\n\r\nconst displayFormatter = ({\r\n  entityName,\r\n  entityType,\r\n  phoneNumber,\r\n  currentLocale,\r\n  brand,\r\n}) => {\r\n  let typeName;\r\n  if (entityType) {\r\n    typeName = formatMessage(\r\n      phoneSourceNames.getString(entityType, currentLocale),\r\n      { brand }\r\n    );\r\n  }\r\n  if (phoneNumber && entityName && entityType) {\r\n    return `${entityName} | ${typeName} ${phoneNumber}`;\r\n  } else if (entityName && entityType) {\r\n    return `${entityName} | ${typeName}`;\r\n  } else if (entityName) {\r\n    return entityName;\r\n  } else if (phoneNumber) {\r\n    return `${phoneNumber}`;\r\n  }\r\n  return '';\r\n};\r\n\r\nfunction ContactDisplayItem({\r\n  entityName,\r\n  entityType,\r\n  phoneNumber,\r\n  sourceIcons\r\n}) {\r\n  let SourceIcon = null;\r\n  if (entityType) {\r\n    if (entityType === phoneSources.rcContact) {\r\n      SourceIcon = sourceIcons.brandIcon;\r\n    } else {\r\n      SourceIcon = sourceIcons[entityType] || <span />;\r\n    }\r\n  }\r\n  if (phoneNumber && entityName && SourceIcon) {\r\n    return (\r\n      <span>\r\n        <SourceIcon className={styles.typeIcon} width={10} height={10} />\r\n        <span className={styles.typeName}>{entityName}</span>\r\n      </span>\r\n    );\r\n  } else if (entityName && SourceIcon) {\r\n    return (\r\n      <span>\r\n        <SourceIcon className={styles.typeIcon} width={10} height={10} />\r\n        <span className={styles.typeName}>{entityName}</span>\r\n      </span>\r\n    );\r\n  } else if (entityName) {\r\n    return <span>{entityName}</span>;\r\n  } else if (phoneNumber) {\r\n    return <span>{phoneNumber}</span>;\r\n  }\r\n  return null;\r\n}\r\n\r\nContactDisplayItem.propTypes = {\r\n  entityName: PropTypes.string.isRequired,\r\n  entityType: PropTypes.string.isRequired,\r\n  phoneNumber: PropTypes.string.isRequired,\r\n  sourceIcons: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default function ContactDisplay({\r\n  reference,\r\n  className,\r\n  contactMatches,\r\n  selected,\r\n  onSelectContact,\r\n  disabled,\r\n  isLogging,\r\n  fallBackName,\r\n  enableContactFallback,\r\n  areaCode,\r\n  countryCode,\r\n  phoneNumber,\r\n  currentLocale,\r\n  groupNumbers,\r\n  showType,\r\n  selectClassName,\r\n  showPlaceholder,\r\n  brand,\r\n  stopPropagation,\r\n  sourceIcons = {}\r\n}) {\r\n  let contentEl;\r\n  if (groupNumbers) {\r\n    const display = groupNumbers.join(', ');\r\n    contentEl = (\r\n      <div title={display}>\r\n        {display}\r\n      </div>\r\n    );\r\n  } else if (contactMatches.length === 0) {\r\n    const display = (enableContactFallback && fallBackName) ||\r\n      (phoneNumber && formatNumber({\r\n        phoneNumber,\r\n        countryCode,\r\n        areaCode,\r\n      })) ||\r\n      i18n.getString('unknownNumber', currentLocale);\r\n    const title = (enableContactFallback && fallBackName) ||\r\n      phoneNumber || '';\r\n    contentEl = (\r\n      <div title={title}>\r\n        {display}\r\n      </div>\r\n    );\r\n  } else if (contactMatches.length === 1) {\r\n    const display = contactMatches[0].name;\r\n    const title = displayFormatter({\r\n      entityName: display,\r\n      entityType: contactMatches[0].entityType,\r\n      phoneNumber,\r\n      brand,\r\n      currentLocale\r\n    });\r\n    contentEl = (\r\n      <div title={title}>\r\n        {display}\r\n      </div>\r\n    );\r\n  } else if (contactMatches.length > 1) {\r\n    const options = [\r\n      ...contactMatches,\r\n    ];\r\n    let placeholder;\r\n    let _selected = selected;\r\n    if (showPlaceholder) {\r\n      placeholder = i18n.getString('select', currentLocale);\r\n    } else {\r\n      _selected = _selected < 0 ? 0 : _selected;\r\n    }\r\n    contentEl = (\r\n      <DropdownSelect\r\n        reference={reference}\r\n        className={classnames(styles.select, selectClassName)}\r\n        value={`${_selected}`}\r\n        onChange={onSelectContact}\r\n        disabled={disabled || isLogging}\r\n        options={options}\r\n        placeholder={placeholder}\r\n        renderFunction={entity => (\r\n          ContactDisplayItem({\r\n            entityName: entity.name,\r\n            entityType: entity.entityType,\r\n            brand,\r\n            currentLocale,\r\n            sourceIcons\r\n          })\r\n        )}\r\n        renderValue={value => (\r\n          displayFormatter({\r\n            entityName: options[value].name,\r\n            entityType: showType && options[value].entityType,\r\n            brand,\r\n            currentLocale,\r\n          })\r\n        )}\r\n        renderTitle={entity => (\r\n          entity ? displayFormatter({\r\n            entityName: entity.name,\r\n            entityType: entity.entityType,\r\n            phoneNumber,\r\n            brand,\r\n            currentLocale,\r\n          }) : phoneNumber)\r\n        }\r\n        dropdownAlign=\"left\"\r\n        titleEnabled\r\n        noPadding\r\n        stopPropagation={stopPropagation}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        styles.root,\r\n        className,\r\n      )} >\r\n      {contentEl}\r\n    </div>\r\n  );\r\n}\r\nContactDisplay.propTypes = {\r\n  reference: PropTypes.func,\r\n  className: PropTypes.string,\r\n  contactMatches: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n  selected: PropTypes.number.isRequired,\r\n  onSelectContact: PropTypes.func,\r\n  disabled: PropTypes.bool.isRequired,\r\n  isLogging: PropTypes.bool.isRequired,\r\n  fallBackName: PropTypes.string,\r\n  enableContactFallback: PropTypes.bool,\r\n  areaCode: PropTypes.string.isRequired,\r\n  countryCode: PropTypes.string.isRequired,\r\n  phoneNumber: PropTypes.string,\r\n  currentLocale: PropTypes.string.isRequired,\r\n  groupNumbers: PropTypes.arrayOf(PropTypes.string),\r\n  showType: PropTypes.bool,\r\n  selectClassName: PropTypes.string,\r\n  showPlaceholder: PropTypes.bool,\r\n  brand: PropTypes.string,\r\n  stopPropagation: PropTypes.bool,\r\n  sourceIcons: PropTypes.object,\r\n};\r\nContactDisplay.defaultProps = {\r\n  reference: undefined,\r\n  className: undefined,\r\n  onSelectContact: undefined,\r\n  fallBackName: '',\r\n  phoneNumber: undefined,\r\n  groupNumbers: undefined,\r\n  enableContactFallback: undefined,\r\n  showType: true,\r\n  selectClassName: undefined,\r\n  showPlaceholder: true,\r\n  brand: undefined,\r\n  stopPropagation: true,\r\n  sourceIcons: undefined,\r\n};\r\n"]}