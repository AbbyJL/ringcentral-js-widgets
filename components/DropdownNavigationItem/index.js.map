{"version":3,"sources":["components/DropdownNavigationItem/index.js"],"names":["DropdownNavigationItem","icon","activeIcon","active","isReverseFillIcon","label","noticeCounts","onClick","notice","root","reverseFillIcon","iconHolder","labelHolder","propTypes","node","isRequired","bool","string","number","func","defaultProps","undefined"],"mappings":";;;;;kBAMwBA,sB;;AANxB;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEe,SAASA,sBAAT,OAQZ;AAAA,MAPDC,IAOC,QAPDA,IAOC;AAAA,MANDC,UAMC,QANDA,UAMC;AAAA,MALDC,MAKC,QALDA,MAKC;AAAA,MAJDC,iBAIC,QAJDA,iBAIC;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFDC,YAEC,QAFDA,YAEC;AAAA,MADDC,OACC,QADDA,OACC;;AACD,MAAIC,SAAS,IAAb;AACA,MAAIF,gBAAgBA,eAAe,CAAnC,EAAsC;AACpC,QAAIA,eAAe,EAAnB,EAAuB;AACrBE,eAAS;AAAA;AAAA,UAAK,WAAW,iBAAOA,MAAvB;AAAA;AAAA,OAAT;AACD,KAFD,MAEO;AACLA,eAAS;AAAA;AAAA,UAAK,WAAW,iBAAOA,MAAvB;AAAgCF;AAAhC,OAAT;AACD;AACF;AACD,SACE;AAAA;AAAA;AACE,aAAOD,KADT;AAEE,eAASE,OAFX;AAGE,iBAAW,0BACT,iBAAOE,IADE,EAETN,UAAU,iBAAOA,MAFR,EAGTC,qBAAqB,iBAAOM,eAHnB;AAHb;AASE;AAAA;AAAA,QAAK,WAAW,iBAAOC,UAAvB;AACGR,eAASD,UAAT,GAAsBD;AADzB,KATF;AAYE;AAAA;AAAA,QAAK,WAAW,iBAAOW,WAAvB;AACGP;AADH,KAZF;AAeGG;AAfH,GADF;AAmBD;;AAEDR,uBAAuBa,SAAvB,GAAmC;AACjCZ,QAAM,oBAAUa,IAAV,CAAeC,UADY;AAEjCb,cAAY,oBAAUY,IAAV,CAAeC,UAFM;AAGjCZ,UAAQ,oBAAUa,IAHe;AAIjCZ,qBAAmB,oBAAUY,IAJI;AAKjCX,SAAO,oBAAUY,MALgB;AAMjCX,gBAAc,oBAAUY,MANS;AAOjCX,WAAS,oBAAUY;AAPc,CAAnC;;AAUAnB,uBAAuBoB,YAAvB,GAAsC;AACpCjB,UAAQ,KAD4B;AAEpCC,qBAAmB,KAFiB;AAGpCC,SAAOgB,SAH6B;AAIpCf,gBAAce,SAJsB;AAKpCd,WAASc;AAL2B,CAAtC","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport styles from './styles.scss';\n\nexport default function DropdownNavigationItem({\n  icon,\n  activeIcon,\n  active,\n  isReverseFillIcon,\n  label,\n  noticeCounts,\n  onClick,\n}) {\n  let notice = null;\n  if (noticeCounts && noticeCounts > 0) {\n    if (noticeCounts > 99) {\n      notice = <div className={styles.notice}>99+</div>;\n    } else {\n      notice = <div className={styles.notice}>{noticeCounts}</div>;\n    }\n  }\n  return (\n    <div\n      title={label}\n      onClick={onClick}\n      className={classnames(\n        styles.root,\n        active && styles.active,\n        isReverseFillIcon && styles.reverseFillIcon\n      )}\n    >\n      <div className={styles.iconHolder}>\n        {active ? activeIcon : icon}\n      </div>\n      <div className={styles.labelHolder}>\n        {label}\n      </div>\n      {notice}\n    </div>\n  );\n}\n\nDropdownNavigationItem.propTypes = {\n  icon: PropTypes.node.isRequired,\n  activeIcon: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  isReverseFillIcon: PropTypes.bool,\n  label: PropTypes.string,\n  noticeCounts: PropTypes.number,\n  onClick: PropTypes.func,\n};\n\nDropdownNavigationItem.defaultProps = {\n  active: false,\n  isReverseFillIcon: false,\n  label: undefined,\n  noticeCounts: undefined,\n  onClick: undefined,\n};\n"]}