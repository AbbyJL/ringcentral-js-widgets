{"version":3,"sources":["components/DropdownNavigationItem/index.js"],"names":["DropdownNavigationItem","icon","activeIcon","active","isReverseFillIcon","label","title","noticeCounts","onClick","keepStyle","notice","styleClass","iconStyles","root","reverseFillIcon","iconHolder","labelHolder","propTypes","node","isRequired","bool","string","number","func","defaultProps","undefined"],"mappings":";;;;;kBAMwBA,sB;;AANxB;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEe,SAASA,sBAAT,OAUZ;AAAA,MATDC,IASC,QATDA,IASC;AAAA,MARDC,UAQC,QARDA,UAQC;AAAA,MAPDC,MAOC,QAPDA,MAOC;AAAA,MANDC,iBAMC,QANDA,iBAMC;AAAA,MALDC,KAKC,QALDA,KAKC;AAAA,MAJDC,KAIC,QAJDA,KAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,SACC,QADDA,SACC;;AACD,MAAIC,SAAS,IAAb;AACA,MAAIH,gBAAgBA,eAAe,CAAnC,EAAsC;AACpC,QAAIA,eAAe,EAAnB,EAAuB;AACrBG,eAAS;AAAA;AAAA,UAAK,WAAW,iBAAOA,MAAvB;AAAA;AAAA,OAAT;AACD,KAFD,MAEO;AACLA,eAAS;AAAA;AAAA,UAAK,WAAW,iBAAOA,MAAvB;AAAgCH;AAAhC,OAAT;AACD;AACF;AACD,MAAMI,aAAa,CAACF,SAAD,GAAa,iBAAOG,UAApB,GAAiC,IAApD;AACA,SACE;AAAA;AAAA;AACE,aAAON,SAASD,KADlB;AAEE,eAASG,OAFX;AAGE,iBAAW,0BACT,iBAAOK,IADE,EAETV,UAAU,iBAAOA,MAFR,EAGTC,qBAAqB,iBAAOU,eAHnB;AAHb;AASE;AAAA;AAAA,QAAK,WAAW,0BAAW,iBAAOC,UAAlB,EAA8BJ,UAA9B,CAAhB;AACGR,eAASD,UAAT,GAAsBD;AADzB,KATF;AAYE;AAAA;AAAA,QAAK,WAAW,iBAAOe,WAAvB;AACGX;AADH,KAZF;AAeGK;AAfH,GADF;AAmBD;;AAEDV,uBAAuBiB,SAAvB,GAAmC;AACjChB,QAAM,oBAAUiB,IAAV,CAAeC,UADY;AAEjCjB,cAAY,oBAAUgB,IAAV,CAAeC,UAFM;AAGjChB,UAAQ,oBAAUiB,IAHe;AAIjChB,qBAAmB,oBAAUgB,IAJI;AAKjCf,SAAO,oBAAUgB,MALgB;AAMjCf,SAAO,oBAAUe,MANgB;AAOjCd,gBAAc,oBAAUe,MAPS;AAQjCd,WAAS,oBAAUe,IARc;AASjCd,aAAW,oBAAUW;AATY,CAAnC;;AAYApB,uBAAuBwB,YAAvB,GAAsC;AACpCrB,UAAQ,KAD4B;AAEpCC,qBAAmB,KAFiB;AAGpCC,SAAOoB,SAH6B;AAIpCnB,SAAOmB,SAJ6B;AAKpClB,gBAAckB,SALsB;AAMpCjB,WAASiB,SAN2B;AAOpChB,aAAW;AAPyB,CAAtC","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport styles from './styles.scss';\n\nexport default function DropdownNavigationItem({\n  icon,\n  activeIcon,\n  active,\n  isReverseFillIcon,\n  label,\n  title,\n  noticeCounts,\n  onClick,\n  keepStyle,\n}) {\n  let notice = null;\n  if (noticeCounts && noticeCounts > 0) {\n    if (noticeCounts > 99) {\n      notice = <div className={styles.notice}>99+</div>;\n    } else {\n      notice = <div className={styles.notice}>{noticeCounts}</div>;\n    }\n  }\n  const styleClass = !keepStyle ? styles.iconStyles : null;\n  return (\n    <div\n      title={title || label}\n      onClick={onClick}\n      className={classnames(\n        styles.root,\n        active && styles.active,\n        isReverseFillIcon && styles.reverseFillIcon\n      )}\n    >\n      <div className={classnames(styles.iconHolder, styleClass)}>\n        {active ? activeIcon : icon}\n      </div>\n      <div className={styles.labelHolder}>\n        {label}\n      </div>\n      {notice}\n    </div>\n  );\n}\n\nDropdownNavigationItem.propTypes = {\n  icon: PropTypes.node.isRequired,\n  activeIcon: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  isReverseFillIcon: PropTypes.bool,\n  label: PropTypes.string,\n  title: PropTypes.string,\n  noticeCounts: PropTypes.number,\n  onClick: PropTypes.func,\n  keepStyle: PropTypes.bool,\n};\n\nDropdownNavigationItem.defaultProps = {\n  active: false,\n  isReverseFillIcon: false,\n  label: undefined,\n  title: undefined,\n  noticeCounts: undefined,\n  onClick: undefined,\n  keepStyle: false,\n};\n"]}