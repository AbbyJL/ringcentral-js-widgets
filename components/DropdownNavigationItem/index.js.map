{"version":3,"sources":["components/DropdownNavigationItem/index.js"],"names":["DropdownNavigationItem","icon","activeIcon","active","label","noticeCounts","onClick","notice","root","iconHolder","labelHolder","propTypes","node","isRequired","bool","string","number","func","defaultProps","undefined"],"mappings":";;;;;kBAMwBA,sB;;AANxB;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEe,SAASA,sBAAT,OAOX;AAAA,MANFC,IAME,QANFA,IAME;AAAA,MALFC,UAKE,QALFA,UAKE;AAAA,MAJFC,MAIE,QAJFA,MAIE;AAAA,MAHFC,KAGE,QAHFA,KAGE;AAAA,MAFFC,YAEE,QAFFA,YAEE;AAAA,MADFC,OACE,QADFA,OACE;;AACF,MAAIC,SAAS,IAAb;AACA,MAAIF,gBAAgBA,eAAe,CAAnC,EAAsC;AACpC,QAAIA,eAAe,EAAnB,EAAuB;AACrBE,eAAS;AAAA;AAAA,UAAK,WAAW,iBAAOA,MAAvB;AAAA;AAAA,OAAT;AACD,KAFD,MAEO;AACLA,eAAS;AAAA;AAAA,UAAK,WAAW,iBAAOA,MAAvB;AAAgCF;AAAhC,OAAT;AACD;AACF;;AAED,SACE;AAAA;AAAA;AACE,aAAOD,KADT;AAEE,eAASE,OAFX;AAGE,iBAAW,0BACT,iBAAOE,IADE,EAETL,UAAU,iBAAOA,MAFR;AAHb;AAQE;AAAA;AAAA,QAAK,WAAW,iBAAOM,UAAvB;AACGN,eAASD,UAAT,GAAsBD;AADzB,KARF;AAWE;AAAA;AAAA,QAAK,WAAW,iBAAOS,WAAvB;AACGN;AADH,KAXF;AAcGG;AAdH,GADF;AAkBD;;AAEDP,uBAAuBW,SAAvB,GAAmC;AACjCV,QAAM,oBAAUW,IAAV,CAAeC,UADY;AAEjCX,cAAY,oBAAUU,IAAV,CAAeC,UAFM;AAGjCV,UAAQ,oBAAUW,IAHe;AAIjCV,SAAO,oBAAUW,MAJgB;AAKjCV,gBAAc,oBAAUW,MALS;AAMjCV,WAAS,oBAAUW;AANc,CAAnC;;AASAjB,uBAAuBkB,YAAvB,GAAsC;AACpCf,UAAQ,KAD4B;AAEpCC,SAAOe,SAF6B;AAGpCd,gBAAcc,SAHsB;AAIpCb,WAASa;AAJ2B,CAAtC","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport styles from './styles.scss';\n\nexport default function DropdownNavigationItem({\n  icon,\n  activeIcon,\n  active,\n  label,\n  noticeCounts,\n  onClick,\n }) {\n  let notice = null;\n  if (noticeCounts && noticeCounts > 0) {\n    if (noticeCounts > 99) {\n      notice = <div className={styles.notice}>99+</div>;\n    } else {\n      notice = <div className={styles.notice}>{noticeCounts}</div>;\n    }\n  }\n\n  return (\n    <div\n      title={label}\n      onClick={onClick}\n      className={classnames(\n        styles.root,\n        active && styles.active\n      )}\n    >\n      <div className={styles.iconHolder}>\n        {active ? activeIcon : icon}\n      </div>\n      <div className={styles.labelHolder}>\n        {label}\n      </div>\n      {notice}\n    </div>\n  );\n}\n\nDropdownNavigationItem.propTypes = {\n  icon: PropTypes.node.isRequired,\n  activeIcon: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  label: PropTypes.string,\n  noticeCounts: PropTypes.number,\n  onClick: PropTypes.func,\n};\n\nDropdownNavigationItem.defaultProps = {\n  active: false,\n  label: undefined,\n  noticeCounts: undefined,\n  onClick: undefined,\n};\n"]}