{"version":3,"sources":["components/ConferenceCommands/index.js"],"names":["button","text","section","buttons","title","body","join","map","b","split","line","sections","ConferenceCommands","conferenceCommands","s"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,SAATA,MAAS;AAAA,SAAQ;AAAA;AAAA,MAAM,KAAKC,IAAX,EAAiB,WAAW,iBAAOD,MAAnC;AAA4CC;AAA5C,GAAR;AAAA,CAAf;;AAEA,IAAMC,UAAU,SAAVA,OAAU,CAACC,OAAD,EAAUC,KAAV,EAAiBC,IAAjB;AAAA,SACd;AAAA;AAAA,MAAK,KAAKF,QAAQG,IAAR,CAAa,EAAb,CAAV,EAA4B,WAAW,iBAAOJ,OAA9C;AACGC,YAAQI,GAAR,CAAY;AAAA,aAAKP,OAAOQ,CAAP,CAAL;AAAA,KAAZ,CADH;AAEE;AAAA;AAAA,QAAG,WAAW,iBAAOJ,KAArB;AAA6BA;AAA7B,KAFF;AAGGC,SAAKI,KAAL,CAAW,IAAX,EAAiBF,GAAjB,CAAqB;AAAA,aAAQ;AAAA;AAAA,UAAG,WAAW,iBAAOF,IAArB;AAA4BK;AAA5B,OAAR;AAAA,KAArB;AAHH,GADc;AAAA,CAAhB;;AAQA,IAAMC,WAAW,CACf;AACER,WAAS,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADX;AAEEC,SAAO,cAFT;AAGEC,QAAM;AAHR,CADe,EAMf;AACEF,WAAS,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADX;AAEEC,SAAO,kBAFT;AAGEC,QAAM;AAHR,CANe,EAWf;AACEF,WAAS,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADX;AAEEC,SAAO,MAFT;AAGEC,QAAM;AAHR,CAXe,EAgBf;AACEF,WAAS,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADX;AAEEC,SAAO,qBAFT;AAGEC;AAHF,CAhBe,EAuBf;AACEF,WAAS,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADX;AAEEC,SAAO,gBAFT;AAGEC;AAHF,CAvBe,EA6Bf;AACEF,WAAS,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADX;AAEEC,SAAO,iBAFT;AAGEC;AAHF,CA7Be,EAmCf;AACEF,WAAS,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADX;AAEEC,SAAO,2CAFT;AAGEC;AAHF,CAnCe,EA2Cf;AACEF,WAAS,CAAC,GAAD,EAAM,GAAN,CADX;AAEEC,SAAO,wBAFT;AAGEC;AAHF,CA3Ce,CAAjB;;AAmDA,IAAMO,qBAAqB,SAArBA,kBAAqB;AAAA,SACzB;AAAA;AAAA,MAAK,WAAW,iBAAOC,kBAAvB;AACGF,aAASJ,GAAT,CAAa;AAAA,aAAKL,QAAQY,EAAEX,OAAV,EAAmBW,EAAEV,KAArB,EAA4BU,EAAET,IAA9B,CAAL;AAAA,KAAb;AADH,GADyB;AAAA,CAA3B;;kBAMeO,kB","file":"index.js","sourcesContent":["import React from 'react';\nimport styles from './styles.scss';\n\nconst button = text => <span key={text} className={styles.button}>{text}</span>;\n\nconst section = (buttons, title, body) => (\n  <div key={buttons.join('')} className={styles.section}>\n    {buttons.map(b => button(b))}\n    <p className={styles.title}>{title}</p>\n    {body.split('\\n').map(line => <p className={styles.body}>{line}</p>)}\n  </div>\n);\n\nconst sections = [\n  {\n    buttons: ['*', '#', '2'],\n    title: 'Caller Count',\n    body: 'Keep track of how many people are on the call'\n  },\n  {\n    buttons: ['*', '#', '3'],\n    title: 'Leave Conference',\n    body: 'Lets the host hang up and end the call'\n  },\n  {\n    buttons: ['*', '#', '4'],\n    title: 'Menu',\n    body: 'Listen to the list of touchtone commands'\n  },\n  {\n    buttons: ['*', '#', '5'],\n    title: 'Set Listening Modes',\n    body: `Press 1x: Mute callers - Callers can unmute with  *, #, 6\nPress 2x: Mute callers - Listen only. No unmuting option\nPress 3x: Unmute callers - Opens the line again`\n  },\n  {\n    buttons: ['*', '#', '6'],\n    title: 'Mute Host Line',\n    body: `Press once to MUTE\nPress again to UNMUTE`\n  },\n  {\n    buttons: ['*', '#', '7'],\n    title: 'Secure the Call',\n    body: `Press once to BLOCK all callers\nPress again to OPEN the call`\n  },\n  {\n    buttons: ['*', '#', '8'],\n    title: 'Hear sound when people Enter or Exit call',\n    body: `Press 1x: Turns OFF sound\nPress 2x: Enter tone is ON Exit tone is OFF\nPress 3x: Enter tone is OFF Exit tone is ON\nPress 4x: Turns ON sound`\n  },\n  {\n    buttons: ['*', '9'],\n    title: 'Record your conference',\n    body: `Press once to START recording\nPress again to STOP recording`\n  }\n];\n\nconst ConferenceCommands = () => (\n  <div className={styles.conferenceCommands}>\n    {sections.map(s => section(s.buttons, s.title, s.body))}\n  </div>\n);\n\nexport default ConferenceCommands;\n"]}