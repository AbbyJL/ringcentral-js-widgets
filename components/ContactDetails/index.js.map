{"version":3,"sources":["components/ContactDetails/index.js"],"names":["ContactDetails","currentLocale","contactItem","getAvatarUrl","getPresence","onClickToSMS","onClickToDial","onClickToGmail","root","id","type","firstName","lastName","phoneNumbers","map","item","index","phoneType","phoneNumber","contactItemPropTypes","oneOfType","string","number","isRequired","email","hasProfileImage","bool","arrayOf","shape","propTypes","func","defaultProps","undefined"],"mappings":";;;;;;kBAKwBA,c;;AALxB;;;;AACA;;;;AAEA;;;;;;AAEe,SAASA,cAAT,OAQZ;AAAA,MAPDC,aAOC,QAPDA,aAOC;AAAA,MANDC,WAMC,QANDA,WAMC;AAAA,MALDC,YAKC,QALDA,YAKC;AAAA,MAJDC,WAIC,QAJDA,WAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,MAFDC,aAEC,QAFDA,aAEC;AAAA,MADDC,cACC,QADDA,cACC;;AACD,SACE;AAAA;AAAA,MAAK,WAAW,iBAAOC,IAAvB;AACE;AAAA;AAAA;AAAA;AAAQN,kBAAYO;AAApB,KADF;AAEE;AAAA;AAAA;AAAA;AAAUP,kBAAYQ;AAAtB,KAFF;AAGE;AAAA;AAAA;AAAA;AAAaR,kBAAYS,SAAzB,SAAsCT,YAAYU;AAAlD,KAHF;AAKIV,gBAAYW,YAAZ,CAAyBC,GAAzB,CAA6B,UAACC,IAAD,EAAOC,KAAP;AAAA,aAC3B;AAAA;AAAA,UAAG,KAAKA,KAAR;AACGD,aAAKE,SADR;AAAA;AACqBF,aAAKG;AAD1B,OAD2B;AAAA,KAA7B;AALJ,GADF;AAcD;;AAEM,IAAMC,sDAAuB;AAClCV,MAAI,oBAAUW,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUC,MAA7B,CAApB,EAA0DC,UAD5B;AAElCb,QAAM,oBAAUW,MAAV,CAAiBE,UAFW;AAGlCZ,aAAW,oBAAUU,MAHa;AAIlCT,YAAU,oBAAUS,MAJc;AAKlCG,SAAO,oBAAUH,MALiB;AAMlCI,mBAAiB,oBAAUL,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUK,IAA7B,CAApB,CANiB;AAOlCb,gBAAc,oBAAUc,OAAV,CAAkB,oBAAUC,KAAV,CAAgB;AAC9CV,iBAAa,oBAAUG,MADuB;AAE9CJ,eAAW,oBAAUI;AAFyB,GAAhB,CAAlB;AAPoB,CAA7B;;AAaPrB,eAAe6B,SAAf,GAA2B;AACzB5B,iBAAe,oBAAUoB,MAAV,CAAiBE,UADP;AAEzBrB,eAAa,oBAAU0B,KAAV,CAAgBT,oBAAhB,EAAsCI,UAF1B;AAGzBpB,gBAAc,oBAAU2B,IAAV,CAAeP,UAHJ;AAIzBnB,eAAa,oBAAU0B,IAAV,CAAeP,UAJH;AAKzBlB,gBAAc,oBAAUyB,IALC;AAMzBxB,iBAAe,oBAAUwB,IANA;AAOzBvB,kBAAgB,oBAAUuB;AAPD,CAA3B;;AAUA9B,eAAe+B,YAAf,GAA8B;AAC5B1B,gBAAc2B,SADc;AAE5B1B,iBAAe0B,SAFa;AAG5BzB,kBAAgByB;AAHY,CAA9B","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.scss';\n\nexport default function ContactDetails({\n  currentLocale,\n  contactItem,\n  getAvatarUrl,\n  getPresence,\n  onClickToSMS,\n  onClickToDial,\n  onClickToGmail,\n}) {\n  return (\n    <div className={styles.root}>\n      <p>Id: {contactItem.id}</p>\n      <p>Type: {contactItem.type}</p>\n      <p>Name: {`${contactItem.firstName} ${contactItem.lastName}`}</p>\n      {\n        contactItem.phoneNumbers.map((item, index) => (\n          <p key={index}>\n            {item.phoneType}: {item.phoneNumber}\n          </p>\n        ))\n      }\n    </div>\n  );\n}\n\nexport const contactItemPropTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  email: PropTypes.string,\n  hasProfileImage: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  phoneNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string,\n    phoneType: PropTypes.string,\n  })),\n};\n\nContactDetails.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactItem: PropTypes.shape(contactItemPropTypes).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  getPresence: PropTypes.func.isRequired,\n  onClickToSMS: PropTypes.func,\n  onClickToDial: PropTypes.func,\n  onClickToGmail: PropTypes.func,\n};\n\nContactDetails.defaultProps = {\n  onClickToSMS: undefined,\n  onClickToDial: undefined,\n  onClickToGmail: undefined,\n};\n"]}