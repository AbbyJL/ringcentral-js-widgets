{"version":3,"sources":["components/ContactDetails/index.js"],"names":["getPresenceStatusName","presence","currentLocale","dndStatus","presenceStatus","userStatus","busy","getString","AvatarNode","name","avatarUrl","avatarNode","propTypes","string","defaultProps","undefined","ContactDetails","onClickToDial","phoneNumber","props","onClickToSMS","contact","onClickMailTo","email","contactType","contactItem","sourceNodeRenderer","profileImageUrl","type","sourceNode","sourceType","presenceName","contactProfile","avatar","avatarNodeContainer","sourceNodeContainer","info","nameWithoutPresence","presenceNodeContainer","presenceNode","extensionNumber","item","label","number","menu","call","composeText","phoneNumbers","phoneNumberListView","map","index","phoneType","formattedPhoneNumber","formatNumber","faxIcon","filter","v","length","emails","hasMailToHandler","emailListView","underline","extensionCellView","renderExtensionCell","directNumberCellView","renderDirectNumberCell","root","profile","renderProfile","contacts","renderEmailCell","contactItemPropTypes","id","oneOfType","isRequired","firstName","lastName","hasProfileImage","bool","arrayOf","shape","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport PresenceStatus from 'ringcentral-integration/modules/Presence/presenceStatus';\nimport PresenceStatusIcon from '../PresenceStatusIcon';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport DefaultAvatar from '../../assets/images/DefaultAvatar.svg';\nimport FaxIcon from '../../assets/images/Fax.svg';\nimport i18n from './i18n';\n\nimport styles from './styles.scss';\n\nexport function getPresenceStatusName(presence, currentLocale) {\n  const { dndStatus, presenceStatus } = presence;\n  const userStatus = presenceStatus || presence.userStatus;\n  if (userStatus !== PresenceStatus.busy) {\n    return i18n.getString(userStatus, currentLocale);\n  }\n  return i18n.getString(userStatus + dndStatus, currentLocale);\n}\n\nfunction AvatarNode({ name, avatarUrl }) {\n  return avatarUrl ?\n    (\n      <img\n        className={styles.avatarNode}\n        alt={name}\n        src={avatarUrl}\n      />\n    ) :\n    (\n      <DefaultAvatar\n        className={styles.avatarNode}\n      />\n    );\n}\nAvatarNode.propTypes = {\n  name: PropTypes.string,\n  avatarUrl: PropTypes.string,\n};\nAvatarNode.defaultProps = {\n  name: undefined,\n  avatarUrl: undefined,\n};\n\nexport default class ContactDetails extends PureComponent {\n  onClickToDial = (phoneNumber) => {\n    this.props.onClickToDial(phoneNumber);\n  }\n\n  onClickToSMS = (contact, phoneNumber) => {\n    this.props.onClickToSMS({\n      ...contact,\n      phoneNumber\n    });\n  }\n\n  onClickMailTo = (email, contactType) => {\n    if (typeof this.props.onClickMailTo === 'function') {\n      this.props.onClickMailTo(email, contactType);\n    }\n  }\n\n  renderProfile() {\n    const { contactItem, sourceNodeRenderer, currentLocale } = this.props;\n    const { name, presence, profileImageUrl, type } = contactItem;\n    const sourceNode = sourceNodeRenderer({ sourceType: type });\n    const presenceName = presence\n      ? getPresenceStatusName(presence, currentLocale)\n      : null;\n    return (\n      <div className={styles.contactProfile}>\n        <div className={styles.avatar}>\n          <div className={styles.avatarNodeContainer}>\n            <AvatarNode\n              name={name}\n              avatarUrl={profileImageUrl}\n            />\n            {\n              sourceNode\n                ? (\n                  <div className={styles.sourceNodeContainer}>\n                    {sourceNode}\n                  </div>\n                ) : null\n            }\n          </div>\n        </div>\n        <div className={styles.info}>\n          <div className={classnames(styles.name, !presence ? styles.nameWithoutPresence : null)}>\n            <span title={name}>{name}</span>\n          </div>\n          {\n            presence\n              ? (\n                <div className={styles.presence}>\n                  <div className={styles.presenceNodeContainer}>\n                    <PresenceStatusIcon\n                      className={styles.presenceNode}\n                      {...presence}\n                    />\n                  </div>\n                  <span className={styles.presenceStatus}>\n                    {presenceName}\n                  </span>\n                </div>\n              ) : null\n          }\n        </div>\n      </div>\n    );\n  }\n\n  renderExtensionCell() {\n    const { contactItem, currentLocale } = this.props;\n    const { extensionNumber } = contactItem;\n    if (!extensionNumber) return null;\n    return (\n      <div className={styles.item}>\n        <div className={styles.label}>\n          <span>{ i18n.getString('extensionLabel', currentLocale) }</span>\n        </div>\n        <ul>\n          <li>\n            <div className={styles.number}>\n              <span title={extensionNumber}>{extensionNumber}</span>\n            </div>\n            <div className={styles.menu}>\n              <button title={i18n.getString('call', currentLocale)} onClick={() => this.onClickToDial(extensionNumber)}>\n                <i className={dynamicsFont.call} />\n              </button>\n              <button title={i18n.getString('text', currentLocale)} onClick={() => this.onClickToSMS(contactItem, extensionNumber)}>\n                <i className={dynamicsFont.composeText} />\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n  renderDirectNumberCell() {\n    const { contactItem, currentLocale } = this.props;\n    const { phoneNumbers } = contactItem;\n    const phoneNumberListView = phoneNumbers.map(({ phoneType, phoneNumber }, index) => {\n      if (phoneType === 'extension') return null;\n      const formattedPhoneNumber = this.props.formatNumber(phoneNumber);\n      return (\n        <li key={index}>\n          <div className={styles.number}>\n            <span title={formattedPhoneNumber}>{formattedPhoneNumber}</span>\n          </div>\n          <div className={styles.menu}>\n            <button title={i18n.getString('call', currentLocale)} onClick={() => this.onClickToDial(phoneNumber)}>\n              <i className={dynamicsFont.call} />\n            </button>\n            <button title={i18n.getString('text', currentLocale)} onClick={() => this.onClickToSMS(contactItem, phoneNumber)}>\n              <i className={dynamicsFont.composeText} />\n            </button>\n            <button>\n              <FaxIcon className={styles.faxIcon} />\n            </button>\n          </div>\n        </li>\n      );\n    }).filter(v => !!v);\n    if (phoneNumberListView.length <= 0) return null;\n    return (\n      <div className={styles.item}>\n        <div className={styles.label}>\n          <span>{i18n.getString('directLabel', currentLocale)}</span>\n        </div>\n        <ul>\n          {phoneNumberListView}\n        </ul>\n      </div>\n    );\n  }\n\n  renderEmailCell() {\n    const { onClickMailTo } = this.props;\n    const { emails, type } = this.props.contactItem;\n    if (!emails || emails.length <= 0) return null;\n    const hasMailToHandler = typeof onClickMailTo === 'function';\n    const emailListView = emails.map((email, index) => (\n      <li key={index}>\n        <a className={hasMailToHandler ? styles.underline : null} onClick={() => this.onClickMailTo(email, type)}>{email}</a>\n      </li>\n    ));\n    return (\n      <div>\n        <div className={styles.label}>\n          <span>{i18n.getString('emailLabel', this.props.currentLocale)}</span>\n        </div>\n        <ul>{emailListView}</ul>\n      </div>\n    );\n  }\n\n  render() {\n    const extensionCellView = this.renderExtensionCell();\n    const directNumberCellView = this.renderDirectNumberCell();\n    return (\n      <div className={styles.root}>\n        <div className={styles.profile}>\n          {this.renderProfile()}\n        </div>\n        {\n          extensionCellView || directNumberCellView\n            ? (\n              <div className={styles.contacts}>\n                {extensionCellView}\n                {directNumberCellView}\n              </div>\n            ) : null\n        }\n        <div className={styles.email}>\n          {this.renderEmailCell()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const contactItemPropTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  email: PropTypes.string,\n  hasProfileImage: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  phoneNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string,\n    phoneType: PropTypes.string,\n  })),\n};\n\nContactDetails.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactItem: PropTypes.shape(contactItemPropTypes).isRequired,\n  sourceNodeRenderer: PropTypes.func,\n  onClickToSMS: PropTypes.func,\n  onClickToDial: PropTypes.func,\n  onClickMailTo: PropTypes.func,\n  formatNumber: PropTypes.func.isRequired,\n};\n\nContactDetails.defaultProps = {\n  onClickToSMS: undefined,\n  onClickToDial: undefined,\n  onClickMailTo: undefined,\n  sourceNodeRenderer: () => null,\n};\n"]}