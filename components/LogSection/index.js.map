{"version":3,"sources":["components/LogSection/index.js"],"names":["LogSection","props","state","mainCtrlOverlapped","window","addEventListener","checkOverlap","removeEventListener","mainCtrl","scrollHeight","clientHeight","scrollTop","overlappedHeight","setState","renderEditLogSection","currentLocale","updateCurrentLog","currentLog","call","showSpinner","currentLogCall","spinner","editLogSection","buttonPanelClassName","buttonPanel","overlapped","buttonClassName","primaryButton","isSaving","disabled","section","formatPhone","ref","editSection","saveCurrentLog","getString","propTypes","object","string","isRequired","func","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport Button from '../Button';\nimport styles from './styles.scss';\nimport LogBasicInfo from '../LogBasicInfo';\nimport i18n from './i18n';\n\nexport default class LogSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainCtrlOverlapped: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.checkOverlap, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.checkOverlap, false);\n  }\n\n  checkOverlap() {\n    if (!this.mainCtrl) {\n      return;\n    }\n    const {\n      scrollHeight,\n      clientHeight,\n      scrollTop\n    } = this.mainCtrl;\n    const overlappedHeight = scrollHeight - clientHeight - scrollTop;\n    const mainCtrlOverlapped = overlappedHeight > 1;\n    if (mainCtrlOverlapped !== this.state.mainCtrlOverlapped) {\n      this.setState({ mainCtrlOverlapped });\n    }\n  }\n\n  render() {\n    const {\n      renderEditLogSection,\n      currentLocale,\n      updateCurrentLog,\n      currentLog,\n    } = this.props;\n    const {\n      call,\n      showSpinner,\n      currentLogCall,\n    } = currentLog;\n    if (showSpinner) {\n      return (<SpinnerOverlay className={styles.spinner} />);\n    }\n    const editLogSection = renderEditLogSection({\n      currentLocale,\n      updateCurrentLog,\n      currentLog,\n    });\n    const buttonPanelClassName = classnames(\n      styles.buttonPanel,\n      this.state.mainCtrlOverlapped && styles.overlapped\n    );\n    const buttonClassName = classnames(\n      styles.primaryButton,\n      currentLogCall.isSaving && styles.disabled\n    );\n    return (\n      <div className={styles.section}>\n        <LogBasicInfo\n          currentLog={this.props.currentLog}\n          currentLocale={this.props.currentLocale}\n          formatPhone={this.props.formatPhone}\n        />\n        <div\n          ref={(ref) => { this.mainCtrl = ref; }}\n          onScroll={() => this.checkOverlap()}\n          className={styles.editSection}>\n          {editLogSection}\n        </div>\n        <div\n          className={buttonPanelClassName}>\n          <Button\n            disabled={currentLogCall.isSaving}\n            className={buttonClassName}\n            onClick={() => this.props.saveCurrentLog(call)}>\n            {i18n.getString('saveLog', currentLocale)}\n          </Button>\n        </div>\n      </div>);\n  }\n}\n\nLogSection.propTypes = {\n  currentLog: PropTypes.object,\n  currentLocale: PropTypes.string.isRequired,\n  formatPhone: PropTypes.func,\n  updateCurrentLog: PropTypes.func,\n  saveCurrentLog: PropTypes.func,\n  renderEditLogSection: PropTypes.func,\n};\n\nLogSection.defaultProps = {\n  currentLog: {},\n  formatPhone: undefined,\n  updateCurrentLog: undefined,\n  saveCurrentLog: undefined,\n  renderEditLogSection: undefined,\n};\n"]}