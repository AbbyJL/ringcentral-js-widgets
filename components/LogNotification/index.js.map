{"version":3,"sources":["components/LogNotification/index.js"],"names":["LogNotification","formatPhone","currentLog","currentLocale","isExpand","onStay","onDiscard","onSave","onExpand","styles","container","basicInfo","expandButton","expandDisableButton","i18n","getString","confirmationContainer","confirmationInfo","confirmationButtons","saveButton","selected","discardButton","stayButton","propTypes","PropTypes","string","isRequired","object","func","bool","defaultProps","undefined"],"mappings":";;;;;kBAQwBA,e;;AARxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,eAAT,OAWb;AAAA,MATEC,WASF,QATEA,WASF;AAAA,MAREC,UAQF,QAREA,UAQF;AAAA,MAPEC,aAOF,QAPEA,aAOF;AAAA,MANEC,QAMF,QANEA,QAMF;AAAA,MALEC,MAKF,QALEA,MAKF;AAAA,MAJEC,SAIF,QAJEA,SAIF;AAAA,MAHEC,MAGF,QAHEA,MAGF;AAAA,MAFEC,QAEF,QAFEA,QAEF;;AACA,SACE;AAAA;AAAA,MAAK,WAAWC,iBAAOC,SAAvB;AACE;AAAA;AAAA,QAAK,WAAWD,iBAAOE,SAAvB;AACE,oCAAC,sBAAD;AACE,oBAAYT,UADd;AAEE,uBAAeC,aAFjB;AAGE,qBAAaF;AAHf,QADF;AAME;AAAC,wBAAD;AAAA;AACE,oBAAUG,QADZ;AAEE,qBAAW,0BAAWK,iBAAOG,YAAlB,EAAgCR,YAAYK,iBAAOI,mBAAnD,CAFb;AAGE,mBAAS;AAAA,mBAAML,UAAN;AAAA,WAHX;AAIGM,uBAAKC,SAAL,CAAe,KAAf,EAAsBZ,aAAtB;AAJH;AANF,KADF;AAeIC,eACE;AAAA;AAAA,QAAK,WAAWK,iBAAOO,qBAAvB;AACE;AAAA;AAAA,UAAK,WAAWP,iBAAOQ,gBAAvB;AACGH,uBAAKC,SAAL,CAAe,kBAAf,EAAmCZ,aAAnC;AADH,OADF;AAIE;AAAA;AAAA,UAAK,WAAWM,iBAAOS,mBAAvB;AAEIX,iBACE;AAAC,0BAAD;AAAA;AACE,uBAAW,0BAAWE,iBAAOU,UAAlB,EAA8BV,iBAAOW,QAArC,CADb;AAEE,qBAAS;AAAA,qBAAMb,QAAN;AAAA,aAFX;AAGGO,yBAAKC,SAAL,CAAe,MAAf,EAAuBZ,aAAvB;AAHH,SADF,GAMI,IARR;AAWIG,oBACE;AAAC,0BAAD;AAAA;AACE,uBAAWG,iBAAOY,aADpB;AAEE,qBAAS;AAAA,qBAAMf,WAAN;AAAA,aAFX;AAGGQ,yBAAKC,SAAL,CAAe,SAAf,EAA0BZ,aAA1B;AAHH,SADF,GAMI,IAjBR;AAoBIE,iBACE;AAAC,0BAAD;AAAA;AACE,uBAAWI,iBAAOa,UADpB;AAEE,qBAAS;AAAA,qBAAMjB,QAAN;AAAA,aAFX;AAGGS,yBAAKC,SAAL,CAAe,MAAf,EAAuBZ,aAAvB;AAHH,SADF,GAMI;AA1BR;AAJF,KADF,GAmCI;AAlDR,GADF;AAuDD;;AAEDH,gBAAgBuB,SAAhB,GAA4B;AAC1BpB,iBAAeqB,oBAAUC,MAAV,CAAiBC,UADN;AAE1BxB,cAAYsB,oBAAUG,MAFI;AAG1B1B,eAAauB,oBAAUI,IAHG;AAI1BxB,YAAUoB,oBAAUK,IAJM;AAK1BxB,UAAQmB,oBAAUI,IALQ;AAM1BtB,aAAWkB,oBAAUI,IANK;AAO1BrB,UAAQiB,oBAAUI,IAPQ;AAQ1BpB,YAAUgB,oBAAUI;AARM,CAA5B;;AAWA5B,gBAAgB8B,YAAhB,GAA+B;AAC7B5B,cAAY,EADiB;AAE7BD,eAAa8B,SAFgB;AAG7B3B,YAAU2B,SAHmB;AAI7B1B,UAAQ0B,SAJqB;AAK7BzB,aAAWyB,SALkB;AAM7BxB,UAAQwB,SANqB;AAO7BvB,YAAUuB;AAPmB,CAA/B","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Button from '../Button';\nimport LogBasicInfo from '../LogBasicInfo';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default function LogNotification(\n  {\n    formatPhone,\n    currentLog,\n    currentLocale,\n    isExpand,\n    onStay,\n    onDiscard,\n    onSave,\n    onExpand,\n  }\n) {\n  return (\n    <div className={styles.container}>\n      <div className={styles.basicInfo}>\n        <LogBasicInfo\n          currentLog={currentLog}\n          currentLocale={currentLocale}\n          formatPhone={formatPhone}\n        />\n        <Button\n          disabled={isExpand}\n          className={classnames(styles.expandButton, isExpand && styles.expandDisableButton)}\n          onClick={() => onExpand()}>\n          {i18n.getString('log', currentLocale)}\n        </Button>\n      </div>\n      {\n        isExpand ? (\n          <div className={styles.confirmationContainer}>\n            <div className={styles.confirmationInfo}>\n              {i18n.getString('confirmationInfo', currentLocale)}\n            </div>\n            <div className={styles.confirmationButtons}>\n              {\n                onSave ? (\n                  <Button\n                    className={classnames(styles.saveButton, styles.selected)}\n                    onClick={() => onSave()}>\n                    {i18n.getString('save', currentLocale)}\n                  </Button>\n                ) : null\n              }\n              {\n                onDiscard ? (\n                  <Button\n                    className={styles.discardButton}\n                    onClick={() => onDiscard()}>\n                    {i18n.getString('discard', currentLocale)}\n                  </Button>\n                ) : null\n              }\n              {\n                onStay ? (\n                  <Button\n                    className={styles.stayButton}\n                    onClick={() => onStay()}>\n                    {i18n.getString('stay', currentLocale)}\n                  </Button>\n                ) : null\n              }\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  );\n}\n\nLogNotification.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  currentLog: PropTypes.object,\n  formatPhone: PropTypes.func,\n  isExpand: PropTypes.bool,\n  onStay: PropTypes.func,\n  onDiscard: PropTypes.func,\n  onSave: PropTypes.func,\n  onExpand: PropTypes.func,\n};\n\nLogNotification.defaultProps = {\n  currentLog: {},\n  formatPhone: undefined,\n  isExpand: undefined,\n  onStay: undefined,\n  onDiscard: undefined,\n  onSave: undefined,\n  onExpand: undefined,\n};\n"]}