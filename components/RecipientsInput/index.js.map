{"version":3,"sources":["components/RecipientsInput/index.js"],"names":["SelectedRecipientItem","props","className","phoneNumber","length","blue","name","removeReceiver","onRemove","propTypes","string","isRequired","func","SelectedRecipients","items","selectReceivers","map","item","removeFromRecipients","PropTypes","arrayOf","shape","RecipientsInput","state","isFocusOnInput","selectedContactIndex","scrollDirection","currentValue","value","replace","onReceiversInputFocus","setState","onReceiversInputBlur","setSelectedIndex","index","scrollOperation","direction","addSelectedContactIndex","searchContactList","preState","reduceSelectedContactIndex","handleHotKey","e","key","preventDefault","relatedContactList","currentSelected","addToRecipients","onClean","newProps","label","container","rightPanel","recipients","inputField","onChange","onKeyUp","onKeyDown","numberInput","placeholder","removeButton","formatContactPhone","contactsDropdown","entityType","phoneType","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport styles from './styles.scss';\nimport RemoveButton from '../RemoveButton';\nimport ContactDropdownList from '../ContactDropdownList';\n\nfunction SelectedRecipientItem(props) {\n  const className = props.phoneNumber.length > 5 ? styles.blue : null;\n  return (\n    <li className={className}>\n      <span>{props.name}</span>\n      <RemoveButton\n        className={styles.removeReceiver}\n        onClick={props.onRemove}\n        visibility\n      />\n    </li>\n  );\n}\n\nSelectedRecipientItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nfunction SelectedRecipients(props) {\n  const items = props.items;\n  if (items.length < 1) {\n    return null;\n  }\n  return (\n    <ul className={styles.selectReceivers}>\n      {\n        items.map(item => (\n          <SelectedRecipientItem\n            key={item.phoneNumber}\n            name={item.name}\n            phoneNumber={item.phoneNumber}\n            onRemove={() => props.removeFromRecipients(item.phoneNumber)}\n          />\n        ))\n      }\n    </ul>\n  );\n}\n\nSelectedRecipients.propTypes = {\n  removeFromRecipients: PropTypes.func.isRequired,\n  items: React.PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nclass RecipientsInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocusOnInput: false,\n      selectedContactIndex: 0,\n      scrollDirection: null,\n      currentValue: props.value.replace(',', ''),\n    };\n\n    this.onReceiversInputFocus = () => {\n      this.setState({\n        isFocusOnInput: true,\n      });\n    };\n\n    this.onReceiversInputBlur = () => {\n      this.setState({\n        isFocusOnInput: false,\n      });\n    };\n\n    this.setSelectedIndex = (index) => {\n      this.setState({\n        selectedContactIndex: index,\n        scrollDirection: null,\n      });\n    };\n    this.scrollOperation = (direction) => {\n      if (direction === 'ArrowDown' || direction === 'ArrowUp') {\n        this.setState({\n          scrollDirection: direction,\n        });\n      }\n    };\n    this.addSelectedContactIndex = () => {\n      const length = this.props.searchContactList.length;\n      if (this.state.selectedContactIndex >= (length - 1)) {\n        this.setState({\n          selectedContactIndex: length - 1,\n        });\n      } else {\n        this.setState(preState => ({\n          selectedContactIndex: (preState.selectedContactIndex + 1),\n        }));\n      }\n    };\n\n    this.reduceSelectedContactIndex = () => {\n      if (this.state.selectedContactIndex > 0) {\n        this.setState(preState => ({\n          selectedContactIndex: (preState.selectedContactIndex - 1),\n        }));\n      } else {\n        this.setState({\n          selectedContactIndex: 0,\n        });\n      }\n    };\n\n    this.handleHotKey = (e) => {\n      if (this.state.isFocusOnInput && this.props.value.length >= 3) {\n        if (e.key === 'ArrowUp') {\n          this.reduceSelectedContactIndex();\n          this.scrollOperation(e.key);\n        } else if (e.key === 'ArrowDown') {\n          this.addSelectedContactIndex();\n          this.scrollOperation(e.key);\n        }\n      } else {\n        this.setState({\n          selectedContactIndex: 0,\n        });\n      }\n      if (e.key === ',' || e.key === ';' || e.key === 'Enter') {\n        e.preventDefault();\n        if (this.props.value.length === 0) {\n          return;\n        }\n        const relatedContactList = this.props.value.length >= 3 ?\n          this.props.searchContactList : [];\n        const currentSelected\n          = relatedContactList[this.state.selectedContactIndex];\n        if (currentSelected) {\n          this.props.addToRecipients({\n            name: currentSelected.name,\n            phoneNumber: currentSelected.phoneNumber,\n          });\n        } else {\n          this.props.addToRecipients({\n            name: this.props.value.replace(',', ''),\n            phoneNumber: this.props.value.replace(',', ''),\n          });\n          this.props.onClean();\n        }\n        this.props.onClean();\n      }\n    };\n  }\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      currentValue: newProps.value.replace(',', '')\n    });\n    if (newProps.value &&\n        newProps.value !== this.props.value &&\n        this.props.value[this.props.value.length - 1] === ',') {\n      this.setState({\n        isFocusOnInput: true,\n      });\n      this.props.addToRecipients({\n        name: this.props.value.replace(',', ''),\n        phoneNumber: this.props.value.replace(',', ''),\n      }, false);\n    }\n  }\n  render() {\n    const relatedContactList = this.props.value.length >= 3 ?\n      this.props.searchContactList : [];\n    const label = this.props.label ?\n      (\n        <label>{this.props.label}</label>\n      ) : null;\n    return (\n      <div className={styles.container} onKeyDown={this.handleHotKey}>\n        {label}\n        <div className={styles.rightPanel}>\n          <SelectedRecipients\n            items={this.props.recipients}\n            removeFromRecipients={this.props.removeFromRecipients}\n          />\n          <div className={styles.inputField}>\n            <input\n              name=\"receiver\"\n              value={this.state.currentValue}\n              onChange={this.props.onChange}\n              onKeyUp={this.props.onKeyUp}\n              onKeyDown={this.props.onKeyDown}\n              className={styles.numberInput}\n              maxLength={30}\n              onFocus={this.onReceiversInputFocus}\n              onBlur={this.onReceiversInputBlur}\n              placeholder={this.props.placeholder}\n              autoComplete=\"off\"\n            />\n          </div>\n          <RemoveButton\n            className={styles.removeButton}\n            onClick={this.props.onClean}\n            visibility={\n              this.props.value.length > 0 &&\n              this.state.isFocusOnInput\n            }\n          />\n        </div>\n        <ContactDropdownList\n          scrollDirection={this.state.scrollDirection}\n          selectedIndex={this.state.selectedContactIndex}\n          setSelectedIndex={this.setSelectedIndex}\n          addToRecipients={this.props.addToRecipients}\n          items={relatedContactList}\n          formatContactPhone={this.props.formatContactPhone}\n          className={styles.contactsDropdown}\n          visibility={this.state.isFocusOnInput}\n        />\n      </div>\n    );\n  }\n}\n\nRecipientsInput.propTypes = {\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  recipients: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onClean: PropTypes.func.isRequired,\n  onKeyUp: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  addToRecipients: PropTypes.func.isRequired,\n  removeFromRecipients: PropTypes.func.isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n};\n\nRecipientsInput.defaultProps = {\n  label: null,\n  placeholder: '',\n  onKeyUp: () => null,\n  onKeyDown: () => null,\n};\n\nexport default RecipientsInput;\n"]}