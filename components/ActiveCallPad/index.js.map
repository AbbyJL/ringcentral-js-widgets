{"version":3,"sources":["components/ActiveCallPad/index.js"],"names":["ActiveCallPad","props","muteButton","isOnMute","onUnmute","callButton","getString","currentLocale","onMute","onHoldClicked","isOnHold","onUnhold","onHold","onRecordClicked","recordStatus","recording","onStopRecord","onRecord","disabledFlip","flipNumbers","length","recordTitle","isRecordButtonActive","isRecordDisabled","pending","root","className","callCtrlButtonGroup","buttonRow","onShowKeyPad","onPark","onAdd","onToggleTransferPanel","onShowFlipPanel","stopButtonGroup","button","stopButton","onHangup","propTypes","string","isRequired","bool","func","array","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport recordStatus from 'ringcentral-integration/modules/Webphone/recordStatus';\nimport CircleButton from '../CircleButton';\nimport ActiveCallButton from '../ActiveCallButton';\nimport MuteIcon from '../../assets/images/Mute.svg';\nimport UnmuteIcon from '../../assets/images/Unmute.svg';\nimport KeypadIcon from '../../assets/images/Dialpad.svg';\nimport HoldIcon from '../../assets/images/Hold.svg';\nimport ParkIcon from '../../assets/images/Park.svg';\nimport RecordIcon from '../../assets/images/Record.svg';\nimport AddIcon from '../../assets/images/AddCall.svg';\nimport TransferIcon from '../../assets/images/Transfer.svg';\nimport FlipIcon from '../../assets/images/Flip.svg';\nimport EndIcon from '../../assets/images/End.svg';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default function ActiveCallPad(props) {\n  const muteButton = props.isOnMute ?\n    (\n      <ActiveCallButton\n        onClick={props.onUnmute}\n        className={styles.callButton}\n        icon={MuteIcon}\n        title={i18n.getString('unmute', props.currentLocale)}\n      />\n    ) :\n    (\n      <ActiveCallButton\n        onClick={props.onMute}\n        className={styles.callButton}\n        title={i18n.getString('mute', props.currentLocale)}\n        icon={UnmuteIcon}\n      />\n    );\n  const onHoldClicked = props.isOnHold ?\n    props.onUnhold :\n    props.onHold;\n  const onRecordClicked = props.recordStatus === recordStatus.recording ?\n    props.onStopRecord :\n    props.onRecord;\n  const disabledFlip = props.flipNumbers.length === 0;\n  const recordTitle = props.recordStatus === recordStatus.recording ?\n    i18n.getString('stopRecord', props.currentLocale) :\n    i18n.getString('record', props.currentLocale);\n  const isRecordButtonActive = props.recordStatus === recordStatus.recording;\n  const isRecordDisabled = props.recordStatus === recordStatus.pending;\n  return (\n    <div className={classnames(styles.root, props.className)}>\n      <div className={styles.callCtrlButtonGroup}>\n        <div className={styles.buttonRow}>\n          {muteButton}\n          <ActiveCallButton\n            onClick={props.onShowKeyPad}\n            className={styles.callButton}\n            icon={KeypadIcon}\n            title={i18n.getString('keypad', props.currentLocale)}\n          />\n          <ActiveCallButton\n            onClick={onHoldClicked}\n            className={styles.callButton}\n            title={\n              props.isOnHold ?\n              i18n.getString('onHold', props.currentLocale) :\n              i18n.getString('hold', props.currentLocale)\n            }\n            active={props.isOnHold}\n            icon={HoldIcon}\n          />\n        </div>\n        <div className={styles.buttonRow}>\n          <ActiveCallButton\n            onClick={props.onPark}\n            className={styles.callButton}\n            title={i18n.getString('park', props.currentLocale)}\n            icon={ParkIcon}\n            disabled={props.isOnHold}\n          />\n          <ActiveCallButton\n            onClick={onRecordClicked}\n            title={recordTitle}\n            active={isRecordButtonActive}\n            className={styles.callButton}\n            icon={RecordIcon}\n            disabled={props.isOnHold || isRecordDisabled}\n          />\n          <ActiveCallButton\n            onClick={props.onAdd}\n            title={i18n.getString('add', props.currentLocale)}\n            className={styles.callButton}\n            icon={AddIcon}\n          />\n        </div>\n        <div className={styles.buttonRow}>\n          <ActiveCallButton\n            onClick={props.onToggleTransferPanel}\n            title={i18n.getString('transfer', props.currentLocale)}\n            icon={TransferIcon}\n            className={styles.callButton}\n          />\n          <ActiveCallButton\n            onClick={props.onShowFlipPanel}\n            title={i18n.getString('flip', props.currentLocale)}\n            icon={FlipIcon}\n            className={styles.callButton}\n            disabled={disabledFlip || props.isOnHold}\n          />\n        </div>\n      </div>\n      <div className={classnames(styles.buttonRow, styles.stopButtonGroup)}>\n        <div className={styles.button}>\n          <CircleButton\n            className={styles.stopButton}\n            onClick={props.onHangup}\n            icon={EndIcon}\n            showBorder={false}\n            iconWidth={250}\n            iconX={125}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nActiveCallPad.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  recordStatus: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  onPark: PropTypes.func.isRequired,\n  onShowKeyPad: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  onShowFlipPanel: PropTypes.func.isRequired,\n  onToggleTransferPanel: PropTypes.func.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n};\n\nActiveCallPad.defaultProps = {\n  className: null,\n  isOnMute: false,\n  isOnHold: false,\n};\n"]}