{"version":3,"sources":["components/ActiveCallPad/index.js"],"names":["ActiveCallPad","props","muteButton","isOnMute","onUnmute","styles","callButton","MuteIcon","i18n","getString","currentLocale","isOnHold","onMute","UnmuteIcon","onHoldClicked","onUnhold","onHold","onRecordClicked","recordStatus","recording","onStopRecord","onRecord","disabledFlip","flipNumbers","length","recordTitle","isRecordButtonActive","isRecordDisabled","pending","root","className","callCtrlButtonGroup","buttonRow","onShowKeyPad","KeypadIcon","HoldIcon","onToggleTransferPanel","TransferIcon","RecordIcon","onShowFlipPanel","FlipIcon","stopButtonGroup","button","stopButton","onHangup","EndIcon","propTypes","PropTypes","string","isRequired","bool","func","onPark","onAdd","array","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport recordStatus from 'ringcentral-integration/modules/Webphone/recordStatus';\nimport CircleButton from '../CircleButton';\nimport ActiveCallButton from '../ActiveCallButton';\nimport MuteIcon from '../../assets/images/Mute.svg';\nimport UnmuteIcon from '../../assets/images/Unmute.svg';\nimport KeypadIcon from '../../assets/images/Dialpad.svg';\nimport HoldIcon from '../../assets/images/Hold.svg';\nimport ParkIcon from '../../assets/images/Park.svg';\nimport RecordIcon from '../../assets/images/Record.svg';\nimport AddIcon from '../../assets/images/AddCall.svg';\nimport TransferIcon from '../../assets/images/Transfer.svg';\nimport FlipIcon from '../../assets/images/Flip.svg';\nimport EndIcon from '../../assets/images/End.svg';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default function ActiveCallPad(props) {\n  const muteButton = props.isOnMute ?\n    (\n      <ActiveCallButton\n        onClick={props.onUnmute}\n        className={styles.callButton}\n        icon={MuteIcon}\n        title={i18n.getString('unmute', props.currentLocale)}\n        disabled={props.isOnHold}\n      />\n    ) :\n    (\n      <ActiveCallButton\n        onClick={props.onMute}\n        className={styles.callButton}\n        title={i18n.getString('mute', props.currentLocale)}\n        icon={UnmuteIcon}\n        disabled={props.isOnHold}\n      />\n    );\n  const onHoldClicked = props.isOnHold ?\n    props.onUnhold :\n    props.onHold;\n  const onRecordClicked = props.recordStatus === recordStatus.recording ?\n    props.onStopRecord :\n    props.onRecord;\n  const disabledFlip = props.flipNumbers.length === 0;\n  const recordTitle = props.recordStatus === recordStatus.recording ?\n    i18n.getString('stopRecord', props.currentLocale) :\n    i18n.getString('record', props.currentLocale);\n  const isRecordButtonActive = props.recordStatus === recordStatus.recording;\n  const isRecordDisabled = props.recordStatus === recordStatus.pending;\n  return (\n    <div className={classnames(styles.root, props.className)}>\n      <div className={styles.callCtrlButtonGroup}>\n        <div className={styles.buttonRow}>\n          {muteButton}\n          <ActiveCallButton\n            onClick={props.onShowKeyPad}\n            className={styles.callButton}\n            icon={KeypadIcon}\n            title={i18n.getString('keypad', props.currentLocale)}\n          />\n          <ActiveCallButton\n            onClick={onHoldClicked}\n            className={styles.callButton}\n            title={\n              props.isOnHold ?\n              i18n.getString('onHold', props.currentLocale) :\n              i18n.getString('hold', props.currentLocale)\n            }\n            active={props.isOnHold}\n            icon={HoldIcon}\n            iconWidth={120}\n            iconHeight={160}\n            iconX={190}\n            iconY={165}\n          />\n        </div>\n        <div className={styles.buttonRow}>\n          <ActiveCallButton\n            onClick={props.onToggleTransferPanel}\n            title={i18n.getString('transfer', props.currentLocale)}\n            icon={TransferIcon}\n            className={styles.callButton}\n            iconWidth={220}\n            iconX={140}\n          />\n          {\n            // <ActiveCallButton\n            //   onClick={props.onPark}\n            //   className={styles.callButton}\n            //   title={i18n.getString('park', props.currentLocale)}\n            //   icon={ParkIcon}\n            //   disabled={props.isOnHold}\n            //   iconWidth={180}\n            //   iconHeight={180}\n            //   iconX={160}\n            //   iconY={160}\n            // />\n          }\n          <ActiveCallButton\n            onClick={onRecordClicked}\n            title={recordTitle}\n            active={isRecordButtonActive}\n            className={styles.callButton}\n            icon={RecordIcon}\n            disabled={props.isOnHold || isRecordDisabled}\n          />\n          {\n            // <ActiveCallButton\n            //   onClick={props.onAdd}\n            //   title={i18n.getString('add', props.currentLocale)}\n            //   className={styles.callButton}\n            //   icon={AddIcon}\n            //   iconWidth={170}\n            //   iconHeight={170}\n            //   iconX={165}\n            //   iconY={165}\n            // />\n          }\n          <ActiveCallButton\n            onClick={props.onShowFlipPanel}\n            title={i18n.getString('flip', props.currentLocale)}\n            icon={FlipIcon}\n            className={styles.callButton}\n            disabled={disabledFlip || props.isOnHold}\n            iconWidth={220}\n            iconHeight={215}\n            iconX={140}\n            iconY={142}\n          />\n        </div>\n      </div>\n      <div className={classnames(styles.buttonRow, styles.stopButtonGroup)}>\n        <div className={styles.button}>\n          <CircleButton\n            className={styles.stopButton}\n            onClick={props.onHangup}\n            icon={EndIcon}\n            showBorder={false}\n            iconWidth={250}\n            iconX={125}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nActiveCallPad.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  recordStatus: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  onPark: PropTypes.func.isRequired,\n  onShowKeyPad: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  onShowFlipPanel: PropTypes.func.isRequired,\n  onToggleTransferPanel: PropTypes.func.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n};\n\nActiveCallPad.defaultProps = {\n  className: null,\n  isOnMute: false,\n  isOnHold: false,\n};\n"]}