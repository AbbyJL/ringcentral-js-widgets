{"version":3,"sources":["components/EntityButton/index.js"],"names":["EntityButton","className","onViewEntity","onCreateEntity","hasEntity","isCreating","disableLinks","viewEntityTitle","createEntityTitle","spinner","spinnerContainer","icon","record","addEntity","onClick","title","entity","propTypes","string","func","bool","defaultProps","undefined"],"mappings":";;;;;kBAQwBA,Y;;AARxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,YAAT,OASZ;AAAA,MARDC,SAQC,QARDA,SAQC;AAAA,MAPDC,YAOC,QAPDA,YAOC;AAAA,MANDC,cAMC,QANDA,cAMC;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,UAIC,QAJDA,UAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,MAFDC,eAEC,QAFDA,eAEC;AAAA,MADDC,iBACC,QADDA,iBACC;;AACD;AACA,MAAMC,UAAUJ,aAEZ;AAAA;AAAA,MAAK,WAAW,iBAAOK,gBAAvB;AACE,uDAAS,WAAW,CAApB;AADF,GAFY,GAMd,IANF;AAOA,MAAMC,OAAOP,YAAY,uBAAaQ,MAAzB,GAAkC,uBAAaC,SAA5D;AACA,MAAMC,UAAUV,YAAYF,YAAZ,GAA2BC,cAA3C;AACA,MAAMY,QAAQX,YAAYG,eAAZ,GAA8BC,iBAA5C;AACA,SACE;AAAA;AAAA;AACE,iBAAW,0BAAW,iBAAOQ,MAAlB,EAA0Bf,SAA1B,CADb;AAEE,eAASa,OAFX;AAGE,gBAAUR,YAHZ;AAKE;AACE,iBAAWK,IADb;AAEE,aAAOI;AAFT,MALF;AASGN;AATH,GADF;AAaD;;AAEDT,aAAaiB,SAAb,GAAyB;AACvBhB,aAAW,oBAAUiB,MADE;AAEvBhB,gBAAc,oBAAUiB,IAFD;AAGvBhB,kBAAgB,oBAAUgB,IAHH;AAIvBf,aAAW,oBAAUgB,IAJE;AAKvBf,cAAY,oBAAUe,IALC;AAMvBd,gBAAc,oBAAUc,IAND;AAOvBb,mBAAiB,oBAAUW,MAPJ;AAQvBV,qBAAmB,oBAAUU;AARN,CAAzB;;AAWAlB,aAAaqB,YAAb,GAA4B;AAC1BpB,aAAWqB,SADe;AAE1BpB,gBAAcoB,SAFY;AAG1BlB,aAAW,KAHe;AAI1BD,kBAAgBmB,SAJU;AAK1BjB,cAAY,KALc;AAM1BC,gBAAc,KANY;AAO1BC,mBAAiBe,SAPS;AAQ1Bd,qBAAmBc;AARO,CAA5B","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Spinner from '../Spinner';\nimport Button from '../Button';\nimport styles from './styles.scss';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nexport default function EntityButton({\n  className,\n  onViewEntity,\n  onCreateEntity,\n  hasEntity,\n  isCreating,\n  disableLinks,\n  viewEntityTitle,\n  createEntityTitle,\n}) {\n  // console.debug('isCreating', isCreating);\n  const spinner = isCreating ?\n    (\n      <div className={styles.spinnerContainer}>\n        <Spinner ringWidth={2} />\n      </div>\n    ) :\n    null;\n  const icon = hasEntity ? dynamicsFont.record : dynamicsFont.addEntity;\n  const onClick = hasEntity ? onViewEntity : onCreateEntity;\n  const title = hasEntity ? viewEntityTitle : createEntityTitle;\n  return (\n    <Button\n      className={classnames(styles.entity, className)}\n      onClick={onClick}\n      disabled={disableLinks} >\n\n      <span\n        className={icon}\n        title={title}\n      />\n      {spinner}\n    </Button>\n  );\n}\n\nEntityButton.propTypes = {\n  className: PropTypes.string,\n  onViewEntity: PropTypes.func,\n  onCreateEntity: PropTypes.func,\n  hasEntity: PropTypes.bool,\n  isCreating: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n  viewEntityTitle: PropTypes.string,\n  createEntityTitle: PropTypes.string,\n};\n\nEntityButton.defaultProps = {\n  className: undefined,\n  onViewEntity: undefined,\n  hasEntity: false,\n  onCreateEntity: undefined,\n  isCreating: false,\n  disableLinks: false,\n  viewEntityTitle: undefined,\n  createEntityTitle: undefined,\n};\n"]}