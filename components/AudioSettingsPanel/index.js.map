{"version":3,"sources":["components/AudioSettingsPanel/index.js"],"names":["AudioSettingsPanel","props","onSave","state","dialButtonVolume","dialButtonMuted","ringtoneVolume","ringtoneMuted","callVolume","inputDeviceId","outputDeviceId","onReset","setState","onDialButtonVolumeChange","onDialButtonMutedChange","onRingtoneVolumeChange","onRingtoneMutedChange","onCallVolumeChange","onOutputDeviceIdChange","device","deviceId","onInputDeviceIdChange","renderOutputDevice","value","availableOutputDevices","find","label","renderInputDevice","availableInputDevices","newProps","currentLocale","onBackButtonClick","className","supportDevices","userMedia","isWebRTC","checkUserMedia","hasChanges","permission","webphoneVolume","getString","devices","select","renderDeviceOption","renderDeviceValue","root","content","devicePropType","string","isRequired","propTypes","number","bool","func","arrayOf","shape","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nimport styles from './styles.scss';\r\nimport i18n from './i18n';\r\n\r\nimport BackHeader from '../BackHeader';\r\nimport Panel from '../Panel';\r\nimport InputField from '../InputField';\r\nimport Select from '../DropdownSelect';\r\nimport Button from '../Button';\r\nimport SaveButton from '../SaveButton';\r\nimport IconLine from '../IconLine';\r\n\r\nexport default class AudioSettingsPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dialButtonVolume: props.dialButtonVolume,\r\n      dialButtonMuted: props.dialButtonMuted,\r\n      ringtoneVolume: props.ringtoneVolume,\r\n      ringtoneMuted: props.ringtoneMuted,\r\n      callVolume: props.callVolume,\r\n      inputDeviceId: props.inputDeviceId,\r\n      outputDeviceId: props.outputDeviceId,\r\n    };\r\n  }\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.dialButtonVolume !== this.props.dialButtonVolume) {\r\n      this.setState({\r\n        dialButtonVolume: newProps.dialButtonVolume,\r\n      });\r\n    }\r\n    if (newProps.dialButtonMuted !== this.props.dialButtonMuted) {\r\n      this.setState({\r\n        dialButtonMuted: newProps.dialButtonMuted,\r\n      });\r\n    }\r\n    if (newProps.ringtoneVolume !== this.props.ringtoneVolume) {\r\n      this.setState({\r\n        ringtoneVolume: newProps.ringtoneVolume,\r\n      });\r\n    }\r\n    if (newProps.ringtoneMuted !== this.props.ringtoneMuted) {\r\n      this.setState({\r\n        ringtoneMuted: newProps.ringtoneMuted,\r\n      });\r\n    }\r\n    if (newProps.callVolume !== this.props.callVolume) {\r\n      this.setState({\r\n        callVolume: newProps.callVolume,\r\n      });\r\n    }\r\n    if (newProps.inputDeviceId !== this.props.inputDeviceId) {\r\n      this.setState({\r\n        inputDeviceId: newProps.inputDeviceId,\r\n      });\r\n    }\r\n    if (newProps.outputDeviceId !== this.props.outputDeviceId) {\r\n      this.setState({\r\n        outputDeviceId: newProps.outputDeviceId,\r\n      });\r\n    }\r\n  }\r\n  onSave = () => {\r\n    if (typeof this.props.onSave === 'function') {\r\n      const {\r\n        dialButtonVolume,\r\n        dialButtonMuted,\r\n        ringtoneVolume,\r\n        ringtoneMuted,\r\n        callVolume,\r\n        inputDeviceId,\r\n        outputDeviceId,\r\n      } = this.state;\r\n      this.props.onSave({\r\n        dialButtonVolume,\r\n        dialButtonMuted,\r\n        ringtoneVolume,\r\n        ringtoneMuted,\r\n        callVolume,\r\n        inputDeviceId,\r\n        outputDeviceId,\r\n      });\r\n    }\r\n  }\r\n  onReset = () => {\r\n    const {\r\n      dialButtonVolume,\r\n      dialButtonMuted,\r\n      ringtoneVolume,\r\n      ringtoneMuted,\r\n      callVolume,\r\n      inputDeviceId,\r\n      outputDeviceId,\r\n    } = this.props;\r\n    this.setState({\r\n      dialButtonVolume,\r\n      dialButtonMuted,\r\n      ringtoneVolume,\r\n      ringtoneMuted,\r\n      callVolume,\r\n      inputDeviceId,\r\n      outputDeviceId,\r\n    });\r\n  }\r\n  onDialButtonVolumeChange = (dialButtonVolume) => {\r\n    this.setState({\r\n      dialButtonVolume,\r\n    });\r\n  }\r\n  onDialButtonMutedChange = (dialButtonMuted) => {\r\n    this.setState({\r\n      dialButtonMuted,\r\n    });\r\n  }\r\n  onRingtoneVolumeChange = (ringtoneVolume) => {\r\n    this.setState({\r\n      ringtoneVolume,\r\n    });\r\n  }\r\n  onRingtoneMutedChange = (ringtoneMuted) => {\r\n    this.setState({\r\n      ringtoneMuted,\r\n    });\r\n  }\r\n  onCallVolumeChange = (callVolume) => {\r\n    this.setState({\r\n      callVolume,\r\n    });\r\n  }\r\n  onOutputDeviceIdChange = (device) => {\r\n    this.setState({\r\n      outputDeviceId: device.deviceId,\r\n    });\r\n  }\r\n  onInputDeviceIdChange = (device) => {\r\n    this.setState({\r\n      inputDeviceId: device.deviceId,\r\n    });\r\n  }\r\n  renderDeviceOption(device) {\r\n    return device.label;\r\n  }\r\n  renderDeviceValue(device) {\r\n    return device.deviceId;\r\n  }\r\n  renderOutputDevice = (value) => {\r\n    const device = this.props.availableOutputDevices\r\n      .find(device => device.deviceId === value);\r\n    return device && device.label || value;\r\n  }\r\n  renderInputDevice = (value) => {\r\n    const device = this.props.availableInputDevices\r\n      .find(device => device.deviceId === value);\r\n    return device && device.label || value;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentLocale,\r\n      onBackButtonClick,\r\n      className,\r\n      availableOutputDevices,\r\n      availableInputDevices,\r\n      supportDevices,\r\n      userMedia,\r\n      isWebRTC,\r\n      checkUserMedia,\r\n    } = this.props;\r\n    const {\r\n      dialButtonVolume,\r\n      dialButtonMuted,\r\n      ringtoneVolume,\r\n      ringtoneMuted,\r\n      callVolume,\r\n      outputDeviceId,\r\n      inputDeviceId,\r\n    } = this.state;\r\n    const hasChanges = (\r\n      this.props.dialButtonVolume !== dialButtonVolume ||\r\n      this.props.dialButtonMuted !== dialButtonMuted ||\r\n      this.props.ringtoneVolume !== ringtoneVolume ||\r\n      this.props.ringtoneMuted !== ringtoneMuted ||\r\n      this.props.callVolume !== callVolume ||\r\n      this.props.inputDeviceId !== inputDeviceId ||\r\n      this.props.outputDeviceId !== outputDeviceId\r\n    );\r\n\r\n    // TODO improve UI and add i18n support\r\n    const permission = (userMedia && isWebRTC) ?\r\n      null :\r\n      (\r\n        <IconLine\r\n          noBorder\r\n          icon={<Button onClick={checkUserMedia}>Check Permission</Button>}\r\n      >\r\n        The app does not have permission to use microphone\r\n        </IconLine>\r\n      );\r\n\r\n    const webphoneVolume = isWebRTC ?\r\n      (\r\n        <div>\r\n          <InputField\r\n            label={i18n.getString('ringtoneVolume', currentLocale)}\r\n        >\r\n            {`${ringtoneVolume * 100}%`}\r\n          </InputField>\r\n          <InputField\r\n            label={i18n.getString('callVolume', currentLocale)}\r\n        >\r\n            {`${callVolume * 100}%`}\r\n          </InputField>\r\n        </div>\r\n      ) : null;\r\n\r\n    const devices = (supportDevices && userMedia && isWebRTC) ?\r\n      (\r\n        <div>\r\n          <InputField\r\n            label={i18n.getString('outputDevice', currentLocale)}\r\n            noBorder\r\n        >\r\n            <Select\r\n              className={styles.select}\r\n              value={outputDeviceId}\r\n              onChange={this.onOutputDeviceIdChange}\r\n              options={availableOutputDevices}\r\n              dropdownAlign=\"left\"\r\n              renderFunction={this.renderDeviceOption}\r\n              valueFunction={this.renderDeviceValue}\r\n              renderValue={this.renderOutputDevice}\r\n              titleEnabled\r\n          />\r\n          </InputField>\r\n          <InputField\r\n            label={i18n.getString('inputDevice', currentLocale)}\r\n            noBorder\r\n        >\r\n            <Select\r\n              className={styles.select}\r\n              value={inputDeviceId}\r\n              onChange={this.onInputDeviceIdChange}\r\n              options={availableInputDevices}\r\n              dropdownAlign=\"left\"\r\n              renderFunction={this.renderDeviceOption}\r\n              valueFunction={this.renderDeviceValue}\r\n              renderValue={this.renderInputDevice}\r\n              titleEnabled\r\n          />\r\n          </InputField>\r\n        </div>\r\n      ) : null;\r\n\r\n    return (\r\n      <div className={classnames(styles.root, className)}>\r\n        <BackHeader\r\n          onBackClick={onBackButtonClick}\r\n          >\r\n          {i18n.getString('title', currentLocale)}\r\n        </BackHeader>\r\n        <Panel className={styles.content}>\r\n          <InputField\r\n            label={i18n.getString('dialButtonVolume', currentLocale)}\r\n          >\r\n            {`${dialButtonVolume * 100}%`}\r\n          </InputField>\r\n          {webphoneVolume}\r\n          {devices}\r\n          {permission}\r\n          <SaveButton\r\n            currentLocale={currentLocale}\r\n            onClick={this.onSave}\r\n            disabled={!hasChanges}\r\n          />\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst devicePropType = {\r\n  deviceId: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nAudioSettingsPanel.propTypes = {\r\n  className: PropTypes.string,\r\n  currentLocale: PropTypes.string.isRequired,\r\n  dialButtonVolume: PropTypes.number.isRequired,\r\n  ringtoneVolume: PropTypes.number.isRequired,\r\n  ringtoneMuted: PropTypes.bool.isRequired,\r\n  callVolume: PropTypes.number.isRequired,\r\n  dialButtonMuted: PropTypes.bool.isRequired,\r\n  onBackButtonClick: PropTypes.func.isRequired,\r\n  availableInputDevices: PropTypes.arrayOf(PropTypes.shape(devicePropType)).isRequired,\r\n  inputDeviceId: PropTypes.string.isRequired,\r\n  availableOutputDevices: PropTypes.arrayOf(PropTypes.shape(devicePropType)).isRequired,\r\n  outputDeviceId: PropTypes.string.isRequired,\r\n  supportDevices: PropTypes.bool.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  userMedia: PropTypes.bool.isRequired,\r\n  isWebRTC: PropTypes.bool.isRequired,\r\n  checkUserMedia: PropTypes.func.isRequired,\r\n};\r\n\r\nAudioSettingsPanel.defaultProps = {\r\n  className: null,\r\n};\r\n"]}