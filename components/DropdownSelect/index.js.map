{"version":3,"sources":["components/DropdownSelect/index.js"],"names":["DropdownSelect","props","state","open","mounted","toggleShowDropdown","disabled","setState","preState","onChange","e","option","stopPropagation","_handleDocumentClick","wrapper","contains","target","dropdownMenu","window","addEventListener","prevProps","prevState","renderDropdownMenu","menu","buttomPosition","getBoundingClientRect","removeEventListener","dropdown","ref","options","map","idx","currentValue","valueFunction","className","dropdownItem","value","selected","dropdownAlign","renderFunction","label","iconClassName","icon","iconUp","containerClassName","root","button","selectedValue","renderValue","arrow","propTypes","string","func","bool","arrayOf","any","isRequired","oneOf","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nclass DropdownSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.mounted = true;\n\n    this.toggleShowDropdown = () => {\n      if (this.props.disabled) {\n        return;\n      }\n      this.setState(preState => ({\n        open: !preState.open,\n      }));\n    };\n\n    this.onChange = (e, option) => {\n      e.stopPropagation();\n      this.props.onChange(option);\n      this.toggleShowDropdown();\n    };\n\n    this._handleDocumentClick = (e) => {\n      if (!this.mounted) {\n        return;\n      }\n      if (this.wrapper && this.wrapper.contains(e.target)) {\n        return;\n      }\n      if (this.dropdownMenu && this.dropdownMenu.contains(e.target)) {\n        return;\n      }\n      this.setState({\n        open: false,\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    window.addEventListener('click', this._handleDocumentClick, false);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.open !== this.state.open) {\n      if (this.props.renderDropdownMenu && this.wrapper) {\n        const menu = this.renderDropdownMenu();\n        const buttomPosition = this.wrapper.getBoundingClientRect();\n        this.props.renderDropdownMenu(menu, this.state.open, buttomPosition);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.removeEventListener('click', this._handleDocumentClick, false);\n  }\n\n  renderDropdownMenu() {\n    return (\n      <ul className={styles.dropdown} ref={(ref) => { this.dropdownMenu = ref; }}>\n        {\n          this.props.options.map((option, idx) => {\n            const currentValue = this.props.valueFunction(option, idx);\n            const className = classnames(\n              styles.dropdownItem,\n              this.props.value === currentValue ? styles.selected : null,\n            );\n            return (\n              <li\n                key={currentValue}\n                className={classnames(className, styles[this.props.dropdownAlign])}\n                value={currentValue}\n                onClick={e => this.onChange(e, option)}\n              >\n                {this.props.renderFunction(option, idx)}\n              </li>\n            );\n          })\n        }\n      </ul>\n    );\n  }\n\n  render() {\n    const label = this.props.label ?\n      (\n        <label>\n          {this.props.label}\n        </label>\n      ) : null;\n    const iconClassName = classnames(\n      styles.icon,\n      this.state.open ? styles.iconUp : null,\n    );\n    const containerClassName = classnames(\n      styles.root,\n      this.props.className,\n      this.props.disabled ? styles.disabled : null,\n      this.state.open ? styles.open : null,\n    );\n    const dropdownMenu = this.props.renderDropdownMenu ?\n      null :\n      this.renderDropdownMenu();\n\n    return (\n      <div\n        className={containerClassName}\n        ref={(ref) => { this.wrapper = ref; }}\n      >\n        <button className={styles.button} onClick={this.toggleShowDropdown}>\n          {label}\n          <span className={styles.selectedValue}>\n            {this.props.renderValue(this.props.value)}\n          </span>\n          <span className={iconClassName}>\n            <i className={dynamicsFont.arrow} />\n          </span>\n        </button>\n        { dropdownMenu }\n      </div>\n    );\n  }\n}\n\nDropdownSelect.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  disabled: PropTypes.bool,\n  options: PropTypes.arrayOf(PropTypes.any).isRequired,\n  valueFunction: PropTypes.func,\n  renderFunction: PropTypes.func,\n  renderValue: PropTypes.func,\n  renderDropdownMenu: PropTypes.func,\n  dropdownAlign: PropTypes.oneOf(['left', 'center', 'right']),\n};\n\nDropdownSelect.defaultProps = {\n  className: null,\n  value: null,\n  label: null,\n  onChange: undefined,\n  disabled: false,\n  renderDropdownMenu: undefined,\n  valueFunction: option => option,\n  renderFunction: option => option,\n  renderValue: option => option,\n  dropdownAlign: 'center',\n};\n\nexport default DropdownSelect;\n"]}