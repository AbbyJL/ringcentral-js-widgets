{"version":3,"sources":["components/ContactItem/index.js"],"names":["AvatarNode","name","avatarUrl","avatarNode","propTypes","string","defaultProps","undefined","SourceNode","sourceType","sourceNode","ContactItem","props","state","loading","presence","onItemSelected","bind","_mounted","setTimeout","setState","getAvatarUrl","contact","then","getPresence","func","onSelect","root","phoneNumber","type","contactProfile","avatarNodeContainer","sourceNodeContainer","presenceNodeContainer","presenceNode","contactName","shape","id","hasProfileImage","bool","entityType","email","isRequired"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PresenceStatusIcon from '../PresenceStatusIcon';\nimport DefaultAvatar from '../../assets/images/DefaultAvatar.svg';\nimport GoogleLogo from '../../assets/images/GoogleLogo.svg';\n\nimport styles from './styles.scss';\n\nfunction AvatarNode({ name, avatarUrl }) {\n  return avatarUrl ?\n    (\n      <img\n        className={styles.avatarNode}\n        alt={name}\n        src={avatarUrl}\n      />\n    ) :\n    (\n      <DefaultAvatar\n        className={styles.avatarNode}\n      />\n    );\n}\nAvatarNode.propTypes = {\n  name: PropTypes.string,\n  avatarUrl: PropTypes.string,\n};\nAvatarNode.defaultProps = {\n  name: undefined,\n  avatarUrl: undefined,\n};\n\nfunction SourceNode({ sourceType }) {\n  switch (sourceType) {\n    case 'google':\n      return (<GoogleLogo\n        className={styles.sourceNode}\n      />);\n    default:\n      return null;\n  }\n}\nSourceNode.propTypes = {\n  sourceType: PropTypes.string,\n};\nSourceNode.defaultProps = {\n  sourceType: undefined,\n};\n\nexport default class ContactItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      avatarUrl: undefined,\n      presence: undefined,\n    };\n\n    this.onItemSelected = this.onItemSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    setTimeout(() => {\n      // clear timeout is probably not necessary\n      if (this._mounted) {\n        this.setState({\n          loading: false,\n        });\n      }\n    }, 10);\n\n    this.props.getAvatarUrl(this.props.contact).then((avatarUrl) => {\n      if (this._mounted) {\n        this.setState({\n          avatarUrl,\n        });\n      }\n    });\n\n    this.props.getPresence(this.props.contact).then((presence) => {\n      if (this._mounted) {\n        this.setState({\n          presence,\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  onItemSelected() {\n    const func = this.props.onSelect;\n    if (func) {\n      func(this.props.contact);\n    }\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className={styles.root} />\n      );\n    }\n\n    const {\n      name,\n      phoneNumber,\n    } = this.props.contact;\n\n    // TODO:\n    const type = '';\n\n    return (\n      <div\n        className={styles.root}\n        onClick={this.onItemSelected}\n      >\n        <div className={styles.contactProfile}>\n          <div className={styles.avatarNodeContainer} title={name}>\n            <AvatarNode\n              name={name}\n              avatarUrl={this.state.avatarUrl}\n            />\n          </div>\n          {\n            type ? (\n              <div className={styles.sourceNodeContainer}>\n                <SourceNode\n                  sourceType={type}\n                />\n              </div>\n            ) : null\n          }\n          {\n            this.state.presence ? (\n              <div className={styles.presenceNodeContainer}>\n                <PresenceStatusIcon\n                  className={styles.presenceNode}\n                  {...this.state.presence}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n        <div className={styles.contactName} title={name}>\n          {name}\n        </div>\n        <div className={styles.phoneNumber} title={phoneNumber}>\n          {phoneNumber}\n        </div>\n      </div>\n    );\n  }\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.string,\n    hasProfileImage: PropTypes.bool,\n    entityType: PropTypes.string,\n    name: PropTypes.string,\n    phoneNumber: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  getPresence: PropTypes.func.isRequired,\n  onSelect: PropTypes.func,\n};\n\nContactItem.defaultProps = {\n  onSelect: undefined,\n};\n"]}