{"version":3,"sources":["components/MessagesPanel/index.js"],"names":["TabTitle","type","currentLocale","styles","tabTitle","i18n","getString","propTypes","PropTypes","string","isRequired","MessagesPanel","props","onTabChanged","updateTypeFilter","tabs","icon","messageTypes","all","label","path","isActive","readVoicemailPermission","voiceMail","noticeCounts","voiceUnreadCounts","readFaxPermission","fax","faxUnreadCounts","readTextPermission","text","textUnreadCounts","filter","x","MessageTabButton","tabBar","typeFilter","showSpinner","showTitle","searchInput","onSearchInputChange","perPage","disableLinks","conversations","brand","showConversationDetail","readMessage","markMessage","dateTimeFormatter","showContactDisplayPlaceholder","sourceIcons","showGroupNumberName","areaCode","countryCode","onLogConversation","onViewContact","onCreateContact","onClickToDial","onClickToSms","disableClickToDial","unmarkMessage","autoLog","enableContactFallback","deleteMessage","goToComposeText","composeTextPermission","previewFaxMessages","showTextIcon","search","searchContainer","withoutTextIcon","textIcon","hoverTextSVGIcon","textSVGIcon","placeholder","length","content","contentWithHeader","contentWithSearch","showComposeText","buttons","push","composeText","onClick","placement","header","tabsHeader","renderTabs","renderContent","root","Component","bool","object","func","number","array","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport messageTypes from 'ringcentral-integration/enums/messageTypes';\nimport Header from '../Header';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport MessageList from '../MessageList';\nimport MessageTabButton from '../MessageTabButton';\nimport NavigationBar from '../NavigationBar';\nimport SearchInput from '../SearchInput';\nimport ComposeText from '../../assets/images/ComposeText.svg';\nimport NewComposeText from '../../assets/images/NewComposeText.svg';\nimport NewComposeTextHover from '../../assets/images/NewComposeTextHover.svg';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction TabTitle({\n  type,\n  currentLocale,\n}) {\n  return (\n    <span className={styles.tabTitle}>\n      {i18n.getString(type, currentLocale)}\n    </span>\n  );\n}\n\nTabTitle.propTypes = {\n  type: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nexport default class MessagesPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTabChanged = (type) => {\n      if (typeof this.props.updateTypeFilter === 'function') {\n        this.props.updateTypeFilter(type);\n      }\n    };\n  }\n\n  renderTabs() {\n    const tabs = [\n      {\n        icon: <TabTitle type={messageTypes.all} currentLocale={this.props.currentLocale} />,\n        label: i18n.getString(messageTypes.all, this.props.currentLocale),\n        path: messageTypes.all,\n        isActive: path => path === messageTypes.all,\n      },\n      this.props.readVoicemailPermission && {\n        icon: <TabTitle type={messageTypes.voiceMail} currentLocale={this.props.currentLocale} />,\n        label: i18n.getString(messageTypes.voiceMail, this.props.currentLocale),\n        path: messageTypes.voiceMail,\n        isActive: path => path === messageTypes.voiceMail,\n        noticeCounts: this.props.voiceUnreadCounts,\n      },\n      this.props.readFaxPermission && {\n        icon: <TabTitle type={messageTypes.fax} currentLocale={this.props.currentLocale} />,\n        label: i18n.getString(messageTypes.fax, this.props.currentLocale),\n        path: messageTypes.fax,\n        isActive: path => path === messageTypes.fax,\n        noticeCounts: this.props.faxUnreadCounts,\n      },\n      this.props.readTextPermission && {\n        icon: <TabTitle type={messageTypes.text} currentLocale={this.props.currentLocale} />,\n        label: i18n.getString(messageTypes.text, this.props.currentLocale),\n        path: messageTypes.text,\n        isActive: path => path === messageTypes.text,\n        noticeCounts: this.props.textUnreadCounts,\n      },\n    ].filter(x => !!x);\n    return (\n      <NavigationBar\n        button={MessageTabButton}\n        className={styles.tabBar}\n        currentPath={this.props.typeFilter}\n        goTo={this.onTabChanged}\n        tabs={tabs}\n      />\n    );\n  }\n\n  renderContent() {\n    const {\n      showSpinner,\n      showTitle,\n      searchInput,\n      onSearchInputChange,\n      currentLocale,\n      perPage,\n      disableLinks,\n      conversations,\n      brand,\n      showConversationDetail,\n      readMessage,\n      markMessage,\n      dateTimeFormatter,\n      showContactDisplayPlaceholder,\n      sourceIcons,\n      showGroupNumberName,\n      areaCode,\n      countryCode,\n      onLogConversation,\n      onViewContact,\n      onCreateContact,\n      onClickToDial,\n      onClickToSms,\n      disableClickToDial,\n      unmarkMessage,\n      autoLog,\n      enableContactFallback,\n      deleteMessage,\n      typeFilter,\n      goToComposeText,\n      composeTextPermission,\n      previewFaxMessages\n    } = this.props;\n    if (showSpinner) {\n      return (<SpinnerOverlay />);\n    }\n    const showTextIcon =\n      composeTextPermission &&\n      (typeFilter === messageTypes.all || typeFilter === messageTypes.text);\n    const search = onSearchInputChange ?\n      (\n        <div\n          className={\n            classnames(styles.searchContainer, showTextIcon ? null : styles.withoutTextIcon)\n          }\n        >\n          <SearchInput\n            className={styles.searchInput}\n            value={searchInput}\n            onChange={onSearchInputChange}\n            placeholder={i18n.getString('search', currentLocale)}\n            disabled={disableLinks}\n          />\n          <span\n            title={i18n.getString('composeText', currentLocale)}\n            className={styles.textIcon}\n            onClick={goToComposeText}\n          >\n            <NewComposeTextHover className={styles.hoverTextSVGIcon} width={20} height={21} />\n            <NewComposeText className={styles.textSVGIcon} width={20} height={21} />\n          </span>\n        </div>\n      ) :\n      null;\n    const placeholder = onSearchInputChange && searchInput.length > 0 ?\n      i18n.getString('noSearchResults', currentLocale) :\n      i18n.getString('noMessages', currentLocale);\n    return (\n      <div className={classnames(\n        styles.content,\n        showTitle && styles.contentWithHeader\n      )}>\n        {search}\n        <MessageList\n          className={onSearchInputChange ? styles.contentWithSearch : null}\n          currentLocale={currentLocale}\n          perPage={perPage}\n          disableLinks={disableLinks}\n          conversations={conversations}\n          brand={brand}\n          showConversationDetail={showConversationDetail}\n          readMessage={readMessage}\n          markMessage={markMessage}\n          dateTimeFormatter={dateTimeFormatter}\n          showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n          sourceIcons={sourceIcons}\n          showGroupNumberName={showGroupNumberName}\n          placeholder={placeholder}\n          areaCode={areaCode}\n          countryCode={countryCode}\n          onLogConversation={onLogConversation}\n          onViewContact={onViewContact}\n          onCreateContact={onCreateContact}\n          onClickToDial={onClickToDial}\n          onClickToSms={onClickToSms}\n          disableClickToDial={disableClickToDial}\n          unmarkMessage={unmarkMessage}\n          autoLog={autoLog}\n          enableContactFallback={enableContactFallback}\n          deleteMessage={deleteMessage}\n          previewFaxMessages={previewFaxMessages}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      currentLocale,\n      showTitle,\n      showComposeText,\n      goToComposeText,\n    } = this.props;\n    const buttons = [];\n    if (showComposeText) {\n      buttons.push({\n        label: <ComposeText className={styles.composeText} />,\n        onClick: goToComposeText,\n        placement: 'right',\n      });\n    }\n    const header = showTitle ?\n      (\n        <Header buttons={buttons}>\n          {i18n.getString('title', currentLocale)}\n        </Header>\n      ) :\n      null;\n    const tabsHeader = this.renderTabs();\n    const content = this.renderContent();\n    return (\n      <div className={styles.root}>\n        {header}\n        {tabsHeader}\n        {content}\n      </div>\n    );\n  }\n}\n\nMessagesPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  showComposeText: PropTypes.bool,\n  goToComposeText: PropTypes.func.isRequired,\n  typeFilter: PropTypes.string,\n  updateTypeFilter: PropTypes.func,\n  showConversationDetail: PropTypes.func.isRequired,\n  textUnreadCounts: PropTypes.number.isRequired,\n  voiceUnreadCounts: PropTypes.number.isRequired,\n  faxUnreadCounts: PropTypes.number.isRequired,\n  showGroupNumberName: PropTypes.bool,\n  onClickToDial: PropTypes.func,\n  onClickToSms: PropTypes.func,\n  markMessage: PropTypes.func.isRequired,\n  readMessage: PropTypes.func.isRequired,\n  readTextPermission: PropTypes.bool,\n  readVoicemailPermission: PropTypes.bool,\n  readFaxPermission: PropTypes.bool,\n  onSearchInputChange: PropTypes.func,\n  searchInput: PropTypes.string,\n  perPage: PropTypes.number,\n  disableLinks: PropTypes.bool,\n  conversations: PropTypes.array.isRequired,\n  brand: PropTypes.string.isRequired,\n  dateTimeFormatter: PropTypes.func,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  onLogConversation: PropTypes.func,\n  onViewContact: PropTypes.func,\n  onCreateContact: PropTypes.func,\n  disableClickToDial: PropTypes.bool,\n  unmarkMessage: PropTypes.func.isRequired,\n  autoLog: PropTypes.bool,\n  enableContactFallback: PropTypes.bool,\n  deleteMessage: PropTypes.func,\n  composeTextPermission: PropTypes.bool,\n  previewFaxMessages: PropTypes.func,\n};\n\nMessagesPanel.defaultProps = {\n  showSpinner: false,\n  showTitle: false,\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  showComposeText: false,\n  typeFilter: messageTypes.all,\n  updateTypeFilter: undefined,\n  showGroupNumberName: false,\n  onClickToDial: undefined,\n  onClickToSms: undefined,\n  readTextPermission: true,\n  readVoicemailPermission: true,\n  readFaxPermission: true,\n  onSearchInputChange: undefined,\n  searchInput: '',\n  perPage: 20,\n  disableLinks: false,\n  dateTimeFormatter: undefined,\n  onLogConversation: undefined,\n  onViewContact: undefined,\n  onCreateContact: undefined,\n  disableClickToDial: false,\n  autoLog: false,\n  enableContactFallback: undefined,\n  deleteMessage: undefined,\n  composeTextPermission: true,\n  previewFaxMessages: undefined,\n};\n"]}