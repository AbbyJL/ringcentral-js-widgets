{"version":3,"sources":["components/MessagesPanel/index.js"],"names":["MessagesPanel","currentLocale","showSpinner","showTitle","showComposeText","composeText","props","buttons","push","label","onClick","placement","header","getString","content","contentWithHeader","root","propTypes","string","isRequired","bool","showContactDisplayPlaceholder","sourceIcons","object","func","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;kBAUwBA,a;;AAVxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,aAAT,OAOZ;AAAA,MANDC,aAMC,QANDA,aAMC;AAAA,MALDC,WAKC,QALDA,WAKC;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,MAHDC,eAGC,QAHDA,eAGC;AAAA,MAFDC,WAEC,QAFDA,WAEC;AAAA,MADEC,KACF;;AACD,MAAMC,UAAU,EAAhB;AACA,MAAIH,eAAJ,EAAqB;AACnBG,YAAQC,IAAR,CAAa;AACXC,aAAO,uDAAa,WAAW,iBAAOJ,WAA/B,GADI;AAEXK,eAASL,WAFE;AAGXM,iBAAW;AAHA,KAAb;AAKD;AACD,MAAMC,SAAST,YACZ;AAAA;AAAA,MAAQ,SAASI,OAAjB;AACE,mBAAKM,SAAL,CAAe,OAAf,EAAwBZ,aAAxB;AADF,GADY,GAIb,IAJF;AAKA,MAAMa,UAAUZ,cACd,6DADc,GAGZ;AACE,eAAW,0BACT,iBAAOY,OADE,EAETX,aAAa,iBAAOY,iBAFX;AADb,KAKMT,KALN;AAME,mBAAeL;AANjB,KAHJ;AAYA,SACE;AAAA;AAAA,MAAK,WAAW,iBAAOe,IAAvB;AACGJ,UADH;AAEGE;AAFH,GADF;AAMD;;AAEDd,cAAciB,SAAd,GAA0B;AACxBhB,iBAAe,oBAAUiB,MAAV,CAAiBC,UADR;AAExBjB,eAAa,oBAAUkB,IAFC;AAGxBjB,aAAW,oBAAUiB,IAHG;AAIxBC,iCAA+B,oBAAUD,IAJjB;AAKxBE,eAAa,oBAAUC,MALC;AAMxBnB,mBAAiB,oBAAUgB,IANH;AAOxBf,eAAa,oBAAUmB,IAAV,CAAeL;AAPJ,CAA1B;AASAnB,cAAcyB,YAAd,GAA6B;AAC3BvB,eAAa,KADc;AAE3BC,aAAW,KAFgB;AAG3BkB,iCAA+B,IAHJ;AAI3BC,eAAaI,SAJc;AAK3BtB,mBAAiB;AALU,CAA7B","file":"index.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport Header from '../../components/Header';\r\nimport SpinnerOverlay from '../../components/SpinnerOverlay';\r\nimport MessageList from '../../components/MessageList';\r\nimport ComposeText from '../../assets/images/ComposeText.svg';\r\nimport styles from './styles.scss';\r\nimport i18n from './i18n';\r\n\r\nexport default function MessagesPanel({\r\n  currentLocale,\r\n  showSpinner,\r\n  showTitle,\r\n  showComposeText,\r\n  composeText,\r\n  ...props,\r\n}) {\r\n  const buttons = [];\r\n  if (showComposeText) {\r\n    buttons.push({\r\n      label: <ComposeText className={styles.composeText} />,\r\n      onClick: composeText,\r\n      placement: 'right',\r\n    });\r\n  }\r\n  const header = showTitle ?\r\n    (<Header buttons={buttons}>\r\n      {i18n.getString('title', currentLocale)}\r\n    </Header>) :\r\n    null;\r\n  const content = showSpinner ?\r\n    <SpinnerOverlay /> :\r\n    (\r\n      <MessageList\r\n        className={classnames(\r\n          styles.content,\r\n          showTitle && styles.contentWithHeader\r\n        )}\r\n        {...props}\r\n        currentLocale={currentLocale}\r\n      />\r\n    );\r\n  return (\r\n    <div className={styles.root}>\r\n      {header}\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nMessagesPanel.propTypes = {\r\n  currentLocale: PropTypes.string.isRequired,\r\n  showSpinner: PropTypes.bool,\r\n  showTitle: PropTypes.bool,\r\n  showContactDisplayPlaceholder: PropTypes.bool,\r\n  sourceIcons: PropTypes.object,\r\n  showComposeText: PropTypes.bool,\r\n  composeText: PropTypes.func.isRequired,\r\n};\r\nMessagesPanel.defaultProps = {\r\n  showSpinner: false,\r\n  showTitle: false,\r\n  showContactDisplayPlaceholder: true,\r\n  sourceIcons: undefined,\r\n  showComposeText: false,\r\n};\r\n"]}