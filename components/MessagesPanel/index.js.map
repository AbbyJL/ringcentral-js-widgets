{"version":3,"sources":["components/MessagesPanel/index.js"],"names":["TabTitle","type","currentLocale","tabTitle","getString","propTypes","string","isRequired","MessagesPanel","props","onTabChanged","updateTypeFilter","tabs","icon","all","label","path","isActive","readVoicemailPermission","voiceMail","noticeCounts","voiceUnreadCounts","readFaxPermission","fax","faxUnreadCounts","readTextPermission","text","textUnreadCounts","filter","x","tabBar","typeFilter","showSpinner","showTitle","searchInput","onSearchInputChange","perPage","disableLinks","conversations","brand","showConversationDetail","readMessage","markMessage","dateTimeFormatter","showContactDisplayPlaceholder","sourceIcons","showGroupNumberName","areaCode","countryCode","onLogConversation","onViewContact","onCreateContact","onClickToDial","onClickToSms","disableClickToDial","unmarkMessage","autoLog","enableContactFallback","deleteMessage","goToComposeText","composeTextPermission","previewFaxMessages","showTextIcon","search","searchContainer","withoutTextIcon","textIcon","hoverTextSVGIcon","textSVGIcon","placeholder","length","content","contentWithHeader","contentWithSearch","showComposeText","buttons","push","composeText","onClick","placement","header","tabsHeader","renderTabs","renderContent","root","bool","object","func","number","array","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport messageTypes from 'ringcentral-integration/enums/messageTypes';\nimport Header from '../Header';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport MessageList from '../MessageList';\nimport MessageTabButton from '../MessageTabButton';\nimport NavigationBar from '../NavigationBar';\nimport SearchInput from '../SearchInput';\nimport ComposeText from '../../assets/images/ComposeText.svg';\nimport NewComposeText from '../../assets/images/NewComposeText.svg';\nimport NewComposeTextHover from '../../assets/images/NewComposeTextHover.svg';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction TabTitle({\n  type,\n  currentLocale,\n}) {\n  return (\n    <span className={styles.tabTitle}>\n      {i18n.getString(type, currentLocale)}\n    </span>\n  );\n}\n\nTabTitle.propTypes = {\n  type: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nexport default class MessagesPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTabChanged = (type) => {\n      if (typeof this.props.updateTypeFilter === 'function') {\n        this.props.updateTypeFilter(type);\n      }\n    };\n  }\n\n  renderTabs() {\n    const tabs = [\n      {\n        icon: <TabTitle type={messageTypes.all} currentLocale={this.props.currentLocale} />,\n        label: i18n.getString(messageTypes.all, this.props.currentLocale),\n        path: messageTypes.all,\n        isActive: path => path === messageTypes.all,\n      },\n      this.props.readVoicemailPermission && {\n        icon: <TabTitle type={messageTypes.voiceMail} currentLocale={this.props.currentLocale} />,\n        label: i18n.getString(messageTypes.voiceMail, this.props.currentLocale),\n        path: messageTypes.voiceMail,\n        isActive: path => path === messageTypes.voiceMail,\n        noticeCounts: this.props.voiceUnreadCounts,\n      },\n      this.props.readFaxPermission && {\n        icon: <TabTitle type={messageTypes.fax} currentLocale={this.props.currentLocale} />,\n        label: i18n.getString(messageTypes.fax, this.props.currentLocale),\n        path: messageTypes.fax,\n        isActive: path => path === messageTypes.fax,\n        noticeCounts: this.props.faxUnreadCounts,\n      },\n      this.props.readTextPermission && {\n        icon: <TabTitle type={messageTypes.text} currentLocale={this.props.currentLocale} />,\n        label: i18n.getString(messageTypes.text, this.props.currentLocale),\n        path: messageTypes.text,\n        isActive: path => path === messageTypes.text,\n        noticeCounts: this.props.textUnreadCounts,\n      },\n    ].filter(x => !!x);\n    return (\n      <NavigationBar\n        button={MessageTabButton}\n        className={styles.tabBar}\n        currentPath={this.props.typeFilter}\n        goTo={this.onTabChanged}\n        tabs={tabs}\n      />\n    );\n  }\n\n  renderContent() {\n    const {\n      showSpinner,\n      showTitle,\n      searchInput,\n      onSearchInputChange,\n      currentLocale,\n      perPage,\n      disableLinks,\n      conversations,\n      brand,\n      showConversationDetail,\n      readMessage,\n      markMessage,\n      dateTimeFormatter,\n      showContactDisplayPlaceholder,\n      sourceIcons,\n      showGroupNumberName,\n      areaCode,\n      countryCode,\n      onLogConversation,\n      onViewContact,\n      onCreateContact,\n      onClickToDial,\n      onClickToSms,\n      disableClickToDial,\n      unmarkMessage,\n      autoLog,\n      enableContactFallback,\n      deleteMessage,\n      typeFilter,\n      goToComposeText,\n      composeTextPermission,\n      previewFaxMessages\n    } = this.props;\n    if (showSpinner) {\n      return (<SpinnerOverlay />);\n    }\n    const showTextIcon =\n      composeTextPermission &&\n      (typeFilter === messageTypes.all || typeFilter === messageTypes.text);\n    const search = onSearchInputChange ?\n      (\n        <div\n          className={\n            classnames(styles.searchContainer, showTextIcon ? null : styles.withoutTextIcon)\n          }\n        >\n          <SearchInput\n            className={styles.searchInput}\n            value={searchInput}\n            onChange={onSearchInputChange}\n            placeholder={i18n.getString('search', currentLocale)}\n            disabled={disableLinks}\n          />\n          <span\n            title={i18n.getString('composeText', currentLocale)}\n            className={styles.textIcon}\n            onClick={goToComposeText}\n          >\n            <NewComposeTextHover className={styles.hoverTextSVGIcon} width={20} height={21} />\n            <NewComposeText className={styles.textSVGIcon} width={20} height={21} />\n          </span>\n        </div>\n      ) :\n      null;\n    const placeholder = onSearchInputChange && searchInput.length > 0 ?\n      i18n.getString('noSearchResults', currentLocale) :\n      i18n.getString('noMessages', currentLocale);\n    return (\n      <div className={classnames(\n        styles.content,\n        showTitle && styles.contentWithHeader\n      )}>\n        {search}\n        <MessageList\n          className={onSearchInputChange ? styles.contentWithSearch : null}\n          currentLocale={currentLocale}\n          perPage={perPage}\n          disableLinks={disableLinks}\n          conversations={conversations}\n          brand={brand}\n          showConversationDetail={showConversationDetail}\n          readMessage={readMessage}\n          markMessage={markMessage}\n          dateTimeFormatter={dateTimeFormatter}\n          showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n          sourceIcons={sourceIcons}\n          showGroupNumberName={showGroupNumberName}\n          placeholder={placeholder}\n          areaCode={areaCode}\n          countryCode={countryCode}\n          onLogConversation={onLogConversation}\n          onViewContact={onViewContact}\n          onCreateContact={onCreateContact}\n          onClickToDial={onClickToDial}\n          onClickToSms={onClickToSms}\n          disableClickToDial={disableClickToDial}\n          unmarkMessage={unmarkMessage}\n          autoLog={autoLog}\n          enableContactFallback={enableContactFallback}\n          deleteMessage={deleteMessage}\n          previewFaxMessages={previewFaxMessages}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      currentLocale,\n      showTitle,\n      showComposeText,\n      goToComposeText,\n    } = this.props;\n    const buttons = [];\n    if (showComposeText) {\n      buttons.push({\n        label: <ComposeText className={styles.composeText} />,\n        onClick: goToComposeText,\n        placement: 'right',\n      });\n    }\n    const header = showTitle ?\n      (\n        <Header buttons={buttons}>\n          {i18n.getString('title', currentLocale)}\n        </Header>\n      ) :\n      null;\n    const tabsHeader = this.renderTabs();\n    const content = this.renderContent();\n    return (\n      <div className={styles.root}>\n        {header}\n        {tabsHeader}\n        {content}\n      </div>\n    );\n  }\n}\n\nMessagesPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  showComposeText: PropTypes.bool,\n  goToComposeText: PropTypes.func.isRequired,\n  typeFilter: PropTypes.string,\n  updateTypeFilter: PropTypes.func,\n  showConversationDetail: PropTypes.func.isRequired,\n  textUnreadCounts: PropTypes.number.isRequired,\n  voiceUnreadCounts: PropTypes.number.isRequired,\n  faxUnreadCounts: PropTypes.number.isRequired,\n  showGroupNumberName: PropTypes.bool,\n  onClickToDial: PropTypes.func,\n  onClickToSms: PropTypes.func,\n  markMessage: PropTypes.func.isRequired,\n  readMessage: PropTypes.func.isRequired,\n  readTextPermission: PropTypes.bool,\n  readVoicemailPermission: PropTypes.bool,\n  readFaxPermission: PropTypes.bool,\n  onSearchInputChange: PropTypes.func,\n  searchInput: PropTypes.string,\n  perPage: PropTypes.number,\n  disableLinks: PropTypes.bool,\n  conversations: PropTypes.array.isRequired,\n  brand: PropTypes.string.isRequired,\n  dateTimeFormatter: PropTypes.func,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  onLogConversation: PropTypes.func,\n  onViewContact: PropTypes.func,\n  onCreateContact: PropTypes.func,\n  disableClickToDial: PropTypes.bool,\n  unmarkMessage: PropTypes.func.isRequired,\n  autoLog: PropTypes.bool,\n  enableContactFallback: PropTypes.bool,\n  deleteMessage: PropTypes.func,\n  composeTextPermission: PropTypes.bool,\n  previewFaxMessages: PropTypes.func,\n};\n\nMessagesPanel.defaultProps = {\n  showSpinner: false,\n  showTitle: false,\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  showComposeText: false,\n  typeFilter: messageTypes.all,\n  updateTypeFilter: undefined,\n  showGroupNumberName: false,\n  onClickToDial: undefined,\n  onClickToSms: undefined,\n  readTextPermission: true,\n  readVoicemailPermission: true,\n  readFaxPermission: true,\n  onSearchInputChange: undefined,\n  searchInput: '',\n  perPage: 20,\n  disableLinks: false,\n  dateTimeFormatter: undefined,\n  onLogConversation: undefined,\n  onViewContact: undefined,\n  onCreateContact: undefined,\n  disableClickToDial: false,\n  autoLog: false,\n  enableContactFallback: undefined,\n  deleteMessage: undefined,\n  composeTextPermission: true,\n  previewFaxMessages: undefined,\n};\n"]}