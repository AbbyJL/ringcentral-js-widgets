{"version":3,"sources":["components/ToField/index.js"],"names":["SelectedRecipientItem","phoneNumber","name","onRemove","className","length","extension","removeReceiver","propTypes","string","isRequired","func","defaultProps","undefined","SelectedRecipients","items","removeFromRecipients","selectReceivers","map","item","arrayOf","shape","ToField","props","onReceiversInputFocus","setState","isFocusOnInput","onReceiversInputBlur","onReceiversInputKeyUp","e","searchContact","searchString","currentTarget","value","setSelectedIndex","index","selectedContactIndex","scrollDirection","scrollOperation","direction","addSelectedContactIndex","searchResults","state","preState","reduceSelectedContactIndex","isSplitter","key","keyCode","handleHotKey","preventDefault","relatedContactList","currentSelected","addToRecipients","replace","onClean","currentValue","newProps","label","getString","currentLocale","container","rightPanel","recipients","inputField","onChange","onInputKeyUp","numberInput","placeholder","autoFocus","removeButton","formatPhone","contactsDropdown","titleEnabled","entityType","phoneType","bool"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.scss';\nimport RemoveButton from '../RemoveButton';\nimport ContactDropdownList from '../ContactDropdownList';\nimport i18n from './i18n';\n\nfunction SelectedRecipientItem({\n  phoneNumber,\n  name = phoneNumber,\n  onRemove,\n}) {\n  const className = phoneNumber.length > 5 ? styles.phoneNumber : styles.extension;\n  return (\n    <li className={className}>\n      <span>{name}</span>\n      <RemoveButton\n        className={styles.removeReceiver}\n        onClick={onRemove}\n        visibility\n      />\n    </li>\n  );\n}\n\nSelectedRecipientItem.propTypes = {\n  name: PropTypes.string,\n  phoneNumber: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\nSelectedRecipientItem.defaultProps = {\n  name: undefined,\n};\n\nfunction SelectedRecipients({\n  items,\n  removeFromRecipients,\n}) {\n  if (items.length < 1) {\n    return null;\n  }\n  return (\n    <ul className={styles.selectReceivers}>\n      {\n        items.map(item => (\n          <SelectedRecipientItem\n            key={item.phoneNumber}\n            name={item.name}\n            phoneNumber={item.phoneNumber}\n            onRemove={() => removeFromRecipients(item.phoneNumber)}\n          />\n        ))\n      }\n    </ul>\n  );\n}\n\nSelectedRecipients.propTypes = {\n  removeFromRecipients: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string,\n  })).isRequired,\n};\n\nexport default class ToField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocusOnInput: false,\n      selectedContactIndex: 0,\n      scrollDirection: null,\n      currentValue: props.value.replace(',', ''),\n    };\n  }\n  onReceiversInputFocus = () => {\n    this.setState({\n      isFocusOnInput: true,\n    });\n  }\n\n  onReceiversInputBlur = () => {\n    this.setState({\n      isFocusOnInput: false,\n    });\n  }\n  onReceiversInputKeyUp = (e) => {\n    this.props.searchContact({ searchString: e.currentTarget.value });\n  }\n\n  setSelectedIndex = (index) => {\n    this.setState({\n      selectedContactIndex: index,\n      scrollDirection: null,\n    });\n  }\n  scrollOperation = (direction) => {\n    if (direction === 'ArrowDown' || direction === 'ArrowUp') {\n      this.setState({\n        scrollDirection: direction,\n      });\n    }\n  }\n  addSelectedContactIndex = () => {\n    const length = this.props.searchResults.length;\n    if (this.state.selectedContactIndex >= (length - 1)) {\n      this.setState({\n        selectedContactIndex: length - 1,\n      });\n    } else {\n      this.setState(preState => ({\n        selectedContactIndex: (preState.selectedContactIndex + 1),\n      }));\n    }\n  }\n\n  reduceSelectedContactIndex = () => {\n    if (this.state.selectedContactIndex > 0) {\n      this.setState(preState => ({\n        selectedContactIndex: (preState.selectedContactIndex - 1),\n      }));\n    } else {\n      this.setState({\n        selectedContactIndex: 0,\n      });\n    }\n  }\n\n  isSplitter = (e) => {\n    if (\n      e.key === ',' || e.key === ';' || e.key === 'Enter' ||\n      (e.key === 'Unidentified' && // for Safari (FF cannot rely on keyCode...)\n        (e.keyCode === 186 || // semicolon\n          e.keyCode === 188 || // comma\n          e.keyCode === 13)) // enter\n    ) {\n      return true;\n    }\n    return false;\n  }\n  // using React SyntheticEvent to deal with cross browser issue\n  handleHotKey = (e: React.KeyboardEvent) => {\n    if (this.state.isFocusOnInput && this.props.value.length >= 3) {\n      if (e.key === 'ArrowUp') {\n        this.reduceSelectedContactIndex();\n        this.scrollOperation(e.key);\n      } else if (e.key === 'ArrowDown') {\n        this.addSelectedContactIndex();\n        this.scrollOperation(e.key);\n      }\n    } else {\n      this.setState({\n        selectedContactIndex: 0,\n      });\n    }\n    if (this.isSplitter(e)) {\n      e.preventDefault();\n      if (this.props.value.length === 0) {\n        return;\n      }\n      const relatedContactList = this.props.value.length >= 3 ?\n        this.props.searchResults : [];\n      const currentSelected\n        = relatedContactList[this.state.selectedContactIndex];\n      if (currentSelected && e.key === 'Enter') {\n        this.props.addToRecipients({\n          name: currentSelected.name,\n          phoneNumber: currentSelected.phoneNumber,\n        });\n      } else {\n        this.props.addToRecipients({\n          name: this.props.value.replace(',', ''),\n          phoneNumber: this.props.value.replace(',', ''),\n        });\n        this.props.onClean();\n      }\n      this.props.onClean();\n    }\n  }\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      currentValue: newProps.value.replace(',', '')\n    });\n    if (newProps.value &&\n      newProps.value !== this.props.value &&\n      this.props.value[this.props.value.length - 1] === ',') {\n      this.setState({\n        isFocusOnInput: true,\n      });\n      this.props.addToRecipients({\n        name: this.props.value.replace(',', ''),\n        phoneNumber: this.props.value.replace(',', ''),\n      }, false);\n    }\n  }\n  componentDidMount() {\n    this.props.searchContact({ searchString: this.props.value });\n  }\n  render() {\n    const relatedContactList = this.props.value.length >= 3 ?\n      this.props.searchResults : [];\n    const label = (\n      <label>\n        {\n          this.props.label ||\n          i18n.getString('to', this.props.currentLocale)\n        }\n      </label>\n    );\n    return (\n      <div className={styles.container} onKeyDown={this.handleHotKey}>\n        {label}\n        <div className={styles.rightPanel}>\n          <SelectedRecipients\n            items={this.props.recipients}\n            removeFromRecipients={this.props.removeFromRecipients}\n          />\n          <div className={styles.inputField}>\n            <input\n              name=\"receiver\"\n              value={this.state.currentValue}\n              onChange={this.props.onChange}\n              onKeyUp={this.onInputKeyUp}\n              className={styles.numberInput}\n              maxLength={30}\n              onFocus={this.onReceiversInputFocus}\n              onBlur={this.onReceiversInputBlur}\n              placeholder={\n                this.props.placeholder ||\n                i18n.getString('enterNameOrNumber', this.props.currentLocale)\n              }\n              autoComplete=\"off\"\n              autoFocus={this.props.autoFocus} // eslint-disable-line\n            />\n          </div>\n          <RemoveButton\n            className={styles.removeButton}\n            onClick={this.props.onClean}\n            visibility={\n              this.props.value.length > 0 &&\n              this.state.isFocusOnInput\n            }\n          />\n        </div>\n        <ContactDropdownList\n          scrollDirection={this.state.scrollDirection}\n          selectedIndex={this.state.selectedContactIndex}\n          setSelectedIndex={this.setSelectedIndex}\n          addToRecipients={this.props.addToRecipients}\n          items={relatedContactList}\n          formatContactPhone={this.props.formatPhone}\n          className={styles.contactsDropdown}\n          visibility={this.state.isFocusOnInput}\n          titleEnabled={this.props.titleEnabled}\n        />\n      </div>\n    );\n  }\n}\n\nToField.propTypes = {\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  searchContact: PropTypes.func,\n  searchResults: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })),\n  recipients: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string,\n  })).isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onClean: PropTypes.func.isRequired,\n  addToRecipients: PropTypes.func.isRequired,\n  removeFromRecipients: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func,\n  titleEnabled: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nToField.defaultProps = {\n  label: null,\n  placeholder: null,\n  titleEnabled: undefined,\n  autoFocus: false,\n  searchContact: () => null,\n  formatPhone: phoneNumber => phoneNumber,\n  searchResults: [],\n};\n\n"]}