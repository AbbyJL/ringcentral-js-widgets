{"version":3,"sources":["components/ConferenceAlert/index.js"],"names":["ConferenceAlert","props","msg","getString","message","currentLocale","propTypes","string","isRequired","shape","handleMessage","requireAdditionalNumbers"],"mappings":";;;;;kBAKwBA,e;;AALxB;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,MAAMC,MAAM,eAAKC,SAAL,CAAeF,MAAMG,OAAN,CAAcA,OAA7B,EAAsCH,MAAMI,aAA5C,CAAZ;AACA,SACE;AAAA;AAAA;AAAOH;AAAP,GADF;AAGD;;AAEDF,gBAAgBM,SAAhB,GAA4B;AAC1BD,iBAAe,oBAAUE,MAAV,CAAiBC,UADN;AAE1BJ,WAAS,oBAAUK,KAAV,CAAgB;AACvBL,aAAS,oBAAUG,MAAV,CAAiBC;AADH,GAAhB,EAENA;AAJuB,CAA5B;;AAOAR,gBAAgBU,aAAhB,GAAgC;AAAA,MAAGN,OAAH,QAAGA,OAAH;AAAA,SAC9BA,YAAY,mBAASO,wBADS;AAAA,CAAhC","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport messages from 'ringcentral-integration/modules/Conference/messages';\nimport i18n from './i18n';\n\nexport default function ConferenceAlert(props) {\n  const msg = i18n.getString(props.message.message, props.currentLocale);\n  return (\n    <span>{msg}</span>\n  );\n}\n\nConferenceAlert.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nConferenceAlert.handleMessage = ({ message }) => (\n  message === messages.requireAdditionalNumbers\n);\n"]}