{"version":3,"sources":["components/ContactSourceFilter/index.js"],"names":["ContactSourceItem","sourceName","sourceLabel","isSelected","onSelect","contactSourceItem","selected","propTypes","string","isRequired","bool","func","ContactSourceFilter","props","showList","bind","hideList","hideListAlt","emitSelect","window","removeEventListener","listElem","style","display","addEventListener","ev","rootElem","target","contains","onSourceSelect","key","locale","getString","className","currentLocale","contactSourceNames","selectedSourceName","contactSourceFilter","el","filterIconContainer","filterIconNode","contactSourceList","map","arrayOf","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport ContactFilterIcon from '../../assets/images/ContactFilter.svg';\n\nexport function ContactSourceItem({ sourceName, sourceLabel, isSelected, onSelect }) {\n  return (\n    <div\n      onClick={() => onSelect(sourceName)}\n      className={classnames(\n        styles.contactSourceItem,\n        isSelected ? styles.selected : ''\n      )}\n    >\n      {sourceLabel}\n    </div>\n  );\n}\nContactSourceItem.propTypes = {\n  sourceName: PropTypes.string.isRequired,\n  sourceLabel: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nexport default class ContactSourceFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.showList = this.showList.bind(this);\n    this.hideList = this.hideList.bind(this);\n    this.hideListAlt = this.hideListAlt.bind(this);\n    this.emitSelect = this.emitSelect.bind(this);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.hideListAlt);\n  }\n\n  showList() {\n    if (!this.listElem) { return; }\n    this.listElem.style.display = 'block';\n    window.addEventListener('click', this.hideListAlt);\n  }\n\n  hideList() {\n    if (!this.listElem) { return; }\n    this.listElem.style.display = 'none';\n    window.removeEventListener('click', this.hideListAlt);\n  }\n\n  hideListAlt(ev) {\n    if (\n      !this.rootElem ||\n      this.rootElem === ev.target ||\n      this.rootElem.contains(ev.target)\n    ) {\n      return;\n    }\n    this.hideList();\n  }\n\n  emitSelect(sourceName) {\n    const { onSourceSelect } = this.props;\n    if (onSourceSelect) {\n      onSourceSelect(sourceName);\n    }\n    this.hideList();\n  }\n\n  getString(key, locale) {\n    return i18n.getString(key, locale);\n  }\n\n  render() {\n    const {\n      className,\n      currentLocale,\n      contactSourceNames,\n      selectedSourceName,\n    } = this.props;\n\n    return (\n      <div\n        className={classnames(styles.contactSourceFilter, className)}\n        ref={(el) => { this.rootElem = el; }}\n      >\n        <div\n          className={styles.filterIconContainer}\n          title={this.getString(selectedSourceName, currentLocale)}\n          onClick={this.showList}\n        >\n          <ContactFilterIcon\n            className={styles.filterIconNode}\n          />\n        </div>\n        <div\n          className={styles.contactSourceList}\n          ref={(el) => { this.listElem = el; }}\n        >\n          {\n            contactSourceNames.map(sourceName => (\n              <ContactSourceItem\n                key={sourceName}\n                sourceName={sourceName}\n                sourceLabel={this.getString(sourceName, currentLocale)}\n                isSelected={sourceName === selectedSourceName}\n                onSelect={this.emitSelect}\n              />\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nContactSourceFilter.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  onSourceSelect: PropTypes.func,\n  selectedSourceName: PropTypes.string,\n  contactSourceNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nContactSourceFilter.defaultProps = {\n  className: undefined,\n  selectedSourceName: undefined,\n  onSourceSelect: undefined,\n};\n"]}