{"version":3,"sources":["components/ContactDropdownList/index.js"],"names":["ContactItem","props","className","contactItem","active","spliter","phoneTypeName","phoneTypeRenderer","phoneType","getString","phoneSourceName","entityType","nameTitle","name","phoneNumberTitle","formatContactPhone","phoneNumber","onHover","clickable","onClick","nameSection","titleEnabled","label","phoneNumberSection","propTypes","func","isRequired","string","bool","defaultProps","undefined","ContactDropdownList","nextProps","visibility","scrollDirection","selectedIndex","items","length","node","scrollTop","Math","floor","listRef","setSelectedIndex","addToRecipients","listClassName","hiddenClassName","hidden","dropdownList","c","map","item","index","arrayOf","shape","number"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nimport phoneTypeNames from '../../lib/phoneTypeNames';\nimport phoneSourceNames from '../../lib/phoneSourceNames';\n\nfunction ContactItem(props) {\n  const className = classnames(\n    styles.contactItem,\n    props.active ? styles.active : null,\n  );\n  const spliter = '|';\n  const phoneTypeName = props.phoneTypeRenderer ?\n    props.phoneTypeRenderer(props.phoneType) :\n    phoneTypeNames.getString(props.phoneType);\n  const phoneSourceName = phoneSourceNames.getString(props.entityType);\n  const nameTitle = `${props.name} ${spliter} ${phoneSourceName}`;\n  const phoneNumberTitle =\n    `${props.formatContactPhone(props.phoneNumber)} ${spliter} ${phoneTypeName}`;\n\n  return (\n    <li className={className} onMouseOver={props.onHover}>\n      <div className={styles.clickable} onClick={props.onClick}>\n        <div className={styles.nameSection} title={props.titleEnabled && nameTitle}>\n          <span className={styles.name}>\n            {props.name}\n          </span>\n          <span className={styles.spliter}>{spliter}</span>\n          <span className={styles.label}>\n            {phoneSourceName}\n          </span>\n        </div>\n        <div className={styles.phoneNumberSection} title={props.titleEnabled && phoneNumberTitle}>\n          <span>\n            {props.formatContactPhone(props.phoneNumber)}\n          </span>\n          <span className={styles.spliter}>{spliter}</span>\n          <span className={styles.label}>\n            {phoneTypeName}\n          </span>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  entityType: PropTypes.string.isRequired,\n  phoneType: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n  onHover: PropTypes.func.isRequired,\n  titleEnabled: PropTypes.bool,\n  phoneTypeRenderer: PropTypes.func,\n};\nContactItem.defaultProps = {\n  titleEnabled: undefined,\n  phoneTypeRenderer: undefined,\n};\n\nclass ContactDropdownList extends Component {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.visibility) {\n      if (nextProps.scrollDirection === 'ArrowDown') {\n        if (nextProps.selectedIndex < nextProps.items.length) {\n          if (nextProps.selectedIndex > 4) {\n            this.node.scrollTop += 53;\n            this.node.scrollTop = Math.floor(this.node.scrollTop / 53) * 53;\n          }\n        }\n      }\n      if (nextProps.scrollDirection === 'ArrowUp') {\n        if (nextProps.selectedIndex > -1) {\n          if (nextProps.selectedIndex < nextProps.items.length - 4) {\n            this.node.scrollTop -= 53;\n            this.node.scrollTop = Math.floor(this.node.scrollTop / 53) * 53;\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      className,\n      listRef,\n      items,\n      selectedIndex,\n      formatContactPhone,\n      setSelectedIndex,\n      addToRecipients,\n      titleEnabled,\n      visibility,\n      phoneTypeRenderer,\n    } = this.props;\n    let listClassName = null;\n    let hiddenClassName = null;\n    if (!visibility || items.length === 0) {\n      hiddenClassName = styles.hidden;\n    }\n    listClassName = classnames(styles.dropdownList, className, hiddenClassName);\n\n    return (\n      <ul\n        className={listClassName}\n        ref={(c) => {\n          this.node = c;\n          if (typeof listRef === 'function') {\n            listRef(c);\n          }\n        }}\n      >\n        {\n          items.map((item, index) => (\n            <ContactItem\n              active={selectedIndex === index}\n              name={item.name}\n              entityType={item.entityType}\n              phoneType={item.phoneType}\n              phoneNumber={item.phoneNumber}\n              phoneTypeRenderer={phoneTypeRenderer}\n              formatContactPhone={formatContactPhone}\n              onHover={() => setSelectedIndex(index)}\n              onClick={() => addToRecipients(item)}\n              key={`${index}${item.phoneNumber}${item.name}${item.phoneType}`}\n              titleEnabled={titleEnabled}\n            />\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nContactDropdownList.propTypes = {\n  scrollDirection: PropTypes.string,\n  visibility: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  addToRecipients: PropTypes.func.isRequired,\n  setSelectedIndex: PropTypes.func.isRequired,\n  selectedIndex: PropTypes.number.isRequired,\n  titleEnabled: PropTypes.bool,\n  phoneTypeRenderer: PropTypes.func,\n  listRef: PropTypes.func,\n};\n\nContactDropdownList.defaultProps = {\n  className: null,\n  scrollDirection: null,\n  titleEnabled: undefined,\n  phoneTypeRenderer: undefined,\n  listRef: undefined,\n};\n\nexport default ContactDropdownList;\n"]}