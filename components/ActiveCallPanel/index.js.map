{"version":3,"sources":["components/ActiveCallPanel/index.js"],"names":["CallInfo","props","avatar","avatarUrl","portrait","icon","userInfo","avatarContainer","userName","contactDisplay","dropdown","nameMatches","phoneNumber","fallBackName","currentLocale","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","brand","showContactDisplayPlaceholder","userPhoneNumber","formatPhone","propTypes","string","func","isRequired","array","number","bool","defaultProps","ActiveCallPanel","onBackButtonClick","backButtonLabel","startTime","startTimeOffset","isOnMute","isOnHold","recordStatus","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onShowKeyPad","onHangup","onPark","onAdd","onShowFlipPanel","onToggleTransferPanel","children","flipNumbers","timeCounter","root","backButton","arrow","backIcon","backLabel","panel","callPad","node","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport BackHeader from '../BackHeader';\nimport Panel from '../Panel';\nimport DurationCounter from '../DurationCounter';\nimport ActiveCallPad from '../ActiveCallPad';\nimport ContactDisplay from '../ContactDisplay';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\n\nfunction CallInfo(props) {\n  let avatar;\n  if (props.avatarUrl) {\n    avatar = (<img src={props.avatarUrl} alt=\"avatar\" />);\n  } else {\n    avatar = (<i className={classnames(dynamicsFont.portrait, styles.icon)} />);\n  }\n  return (\n    <div className={styles.userInfo}>\n      <div className={styles.avatarContainer}>\n        <div className={styles.avatar}>\n          {avatar}\n        </div>\n      </div>\n      <div className={styles.userName}>\n        <ContactDisplay\n          className={styles.contactDisplay}\n          selectClassName={styles.dropdown}\n          contactMatches={props.nameMatches}\n          phoneNumber={props.phoneNumber}\n          fallBackName={props.fallBackName}\n          currentLocale={props.currentLocale}\n          areaCode={props.areaCode}\n          countryCode={props.countryCode}\n          showType={false}\n          disabled={false}\n          selected={props.selectedMatcherIndex}\n          onSelectContact={props.onSelectMatcherName}\n          isLogging={false}\n          enableContactFallback\n          brand={props.brand}\n          showPlaceholder={props.showContactDisplayPlaceholder}\n        />\n      </div>\n      <div className={styles.userPhoneNumber}>\n        {props.formatPhone(props.phoneNumber)}\n      </div>\n    </div>\n  );\n}\n\nCallInfo.propTypes = {\n  phoneNumber: PropTypes.string,\n  formatPhone: PropTypes.func.isRequired,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n};\n\nCallInfo.defaultProps = {\n  phoneNumber: null,\n  avatarUrl: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n};\n\nfunction ActiveCallPanel({\n  onBackButtonClick,\n  backButtonLabel,\n  currentLocale,\n  nameMatches,\n  fallBackName,\n  phoneNumber,\n  formatPhone,\n  startTime,\n  startTimeOffset,\n  areaCode,\n  countryCode,\n  selectedMatcherIndex,\n  onSelectMatcherName,\n  avatarUrl,\n  isOnMute,\n  isOnHold,\n  recordStatus,\n  onMute,\n  onUnmute,\n  onHold,\n  onUnhold,\n  onRecord,\n  onStopRecord,\n  onShowKeyPad,\n  onHangup,\n  onPark,\n  onAdd,\n  onShowFlipPanel,\n  onToggleTransferPanel,\n  children,\n  showContactDisplayPlaceholder,\n  brand,\n  flipNumbers\n}) {\n  const timeCounter = startTime ?\n    (\n      <span className={styles.timeCounter}>\n        <DurationCounter startTime={startTime} offset={startTimeOffset} />\n      </span>\n    ) : null;\n  return (\n    <div className={styles.root}>\n      <BackHeader\n        onBackClick={onBackButtonClick}\n        backButton={(\n          <span className={styles.backButton}>\n            <i className={classnames(dynamicsFont.arrow, styles.backIcon)} />\n            <span className={styles.backLabel}>{backButtonLabel}</span>\n          </span>\n        )}\n      />\n      <Panel className={styles.panel}>\n        {timeCounter}\n        <CallInfo\n          currentLocale={currentLocale}\n          nameMatches={nameMatches}\n          fallBackName={fallBackName}\n          phoneNumber={phoneNumber}\n          formatPhone={formatPhone}\n          startTime={startTime}\n          areaCode={areaCode}\n          countryCode={countryCode}\n          selectedMatcherIndex={selectedMatcherIndex}\n          onSelectMatcherName={onSelectMatcherName}\n          avatarUrl={avatarUrl}\n          brand={brand}\n          showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n        />\n        <ActiveCallPad\n          className={styles.callPad}\n          currentLocale={currentLocale}\n          isOnMute={isOnMute}\n          isOnHold={isOnHold}\n          recordStatus={recordStatus}\n          onMute={onMute}\n          onUnmute={onUnmute}\n          onHold={onHold}\n          onUnhold={onUnhold}\n          onRecord={onRecord}\n          onStopRecord={onStopRecord}\n          onShowKeyPad={onShowKeyPad}\n          onHangup={onHangup}\n          onAdd={onAdd}\n          onShowFlipPanel={onShowFlipPanel}\n          onToggleTransferPanel={onToggleTransferPanel}\n          flipNumbers={flipNumbers}\n          onPark={onPark}\n        />\n        {children}\n      </Panel>\n    </div>\n  );\n}\n\nActiveCallPanel.propTypes = {\n  phoneNumber: PropTypes.string,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  startTime: PropTypes.number,\n  startTimeOffset: PropTypes.number,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  recordStatus: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  onPark: PropTypes.func.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  onShowKeyPad: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  backButtonLabel: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  onShowFlipPanel: PropTypes.func,\n  flipNumbers: PropTypes.array,\n  onToggleTransferPanel: PropTypes.func,\n};\n\nActiveCallPanel.defaultProps = {\n  startTime: null,\n  startTimeOffset: 0,\n  isOnMute: false,\n  isOnHold: false,\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  backButtonLabel: 'Active Calls',\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  flipNumbers: [],\n  onShowFlipPanel: () => null,\n  onToggleTransferPanel: () => null,\n};\n\nexport default ActiveCallPanel;\n"]}