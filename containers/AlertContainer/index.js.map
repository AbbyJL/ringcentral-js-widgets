{"version":3,"sources":["containers/AlertContainer/index.js"],"names":["mapToProps","_","phone","locale","alert","currentLocale","messages","getDefaultRenderer","rateLimiter","brand","routerInteraction","regionSettingsUrl","callingSettingsUrl","onRegionSettingsLinkClick","push","onCallingSettingsLinkClick","message","handleMessage","props","fullName","timestamp","_throttleDuration","application","undefined","mapToFunctions","getRenderer","getAdditionalRenderer","additionalRenderer","renderer","dismiss","id","AlertContainer"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Alert from 'ringcentral-integration/modules/Alert';\nimport Locale from 'ringcentral-integration/modules/Locale';\n\nimport AnimationAlert from '../../components/AnimationAlert';\n\nimport AuthAlert from '../../components/AuthAlert';\nimport CallAlert from '../../components/CallAlert';\nimport CallingSettingsAlert from '../../components/CallingSettingsAlert';\nimport RegionSettingsAlert from '../../components/RegionSettingsAlert';\nimport MessageSenderAlert from '../../components/MessageSenderAlert';\nimport RateExceededAlert from '../../components/RateExceededAlert';\nimport ConnectivityAlert from '../../components/ConnectivityAlert';\nimport WebphoneAlert from '../../components/WebphoneAlert';\nimport MessageStoreAlert from '../../components/MessageStoreAlert';\nimport MeetingAlert from '../../components/MeetingAlert';\nimport RolesAndPermissionsAlert from '../../components/RolesAndPermissionsAlert';\nimport withPhone from '../../lib/withPhone';\nimport ConferenceAlert from '../../components/ConferenceAlert/index';\n\n\nfunction mapToProps(_, {\n  phone: {\n    locale,\n    alert,\n  },\n}) {\n  return {\n    currentLocale: locale.currentLocale,\n    messages: alert.messages,\n  };\n}\n\nfunction getDefaultRenderer({\n  rateLimiter,\n  brand,\n  routerInteraction,\n  regionSettingsUrl,\n  callingSettingsUrl,\n}) {\n  const onRegionSettingsLinkClick = () => {\n    routerInteraction.push(regionSettingsUrl);\n  };\n  const onCallingSettingsLinkClick = () => {\n    routerInteraction.push(callingSettingsUrl);\n  };\n  return (message) => {\n    if (AuthAlert.handleMessage(message)) {\n      return AuthAlert;\n    }\n    if (CallAlert.handleMessage(message)) {\n      return props => (\n        <CallAlert\n          {...props}\n          brand={brand}\n          onAreaCodeLinkClick={onRegionSettingsLinkClick}\n        />\n      );\n    }\n    if (CallingSettingsAlert.handleMessage(message)) {\n      return props => (\n        <CallingSettingsAlert\n          {...props}\n          brand={brand.fullName}\n          onCallingSettingsLinkClick={onCallingSettingsLinkClick}\n        />\n      );\n    }\n\n    if (RegionSettingsAlert.handleMessage(message)) {\n      return props => (\n        <RegionSettingsAlert\n          {...props}\n          onRegionSettingsLinkClick={onRegionSettingsLinkClick}\n        />\n      );\n    }\n\n    if (MessageSenderAlert.handleMessage(message)) {\n      return props => (\n        <MessageSenderAlert\n          {...props}\n          onAreaCodeLink={onRegionSettingsLinkClick}\n        />\n      );\n    }\n\n    if (MessageStoreAlert.handleMessage(message)) {\n      return MessageStoreAlert;\n    }\n\n    if (RateExceededAlert.handleMessage(message)) {\n      return props => (\n        <RateExceededAlert\n          {...props}\n          timestamp={rateLimiter.timestamp}\n          duration={rateLimiter._throttleDuration} />\n      );\n    }\n\n    if (ConnectivityAlert.handleMessage(message)) {\n      return ConnectivityAlert;\n    }\n\n    if (WebphoneAlert.handleMessage(message)) {\n      return WebphoneAlert;\n    }\n    if (MeetingAlert.handleMessage(message)) {\n      return MeetingAlert;\n    }\n    if (RolesAndPermissionsAlert.handleMessage(message)) {\n      return props => (\n        <RolesAndPermissionsAlert\n          {...props}\n          brand={brand.fullName}\n          application={brand.application} />\n      );\n    }\n\n    if (ConferenceAlert.handleMessage(message)) {\n      return ConferenceAlert;\n    }\n\n    return undefined;\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    rateLimiter,\n    brand,\n    alert,\n    routerInteraction,\n  },\n  regionSettingsUrl,\n  callingSettingsUrl,\n  getRenderer = getDefaultRenderer({\n    rateLimiter,\n    brand,\n    routerInteraction,\n    regionSettingsUrl,\n    callingSettingsUrl,\n  }),\n  getAdditionalRenderer,\n}) {\n  const additionalRenderer = getAdditionalRenderer && getAdditionalRenderer();\n  return {\n    getRenderer: (message) => {\n      if (additionalRenderer) {\n        const renderer = additionalRenderer(message);\n        if (renderer) return renderer;\n      }\n      return getRenderer(message);\n    },\n    dismiss: (id) => {\n      alert.dismiss(id);\n    },\n  };\n}\n\nconst AlertContainer = withPhone(connect(\n  mapToProps,\n  mapToFunctions\n)(AnimationAlert));\n\nexport default AlertContainer;\n"]}