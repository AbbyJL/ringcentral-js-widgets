{"version":3,"sources":["containers/ComposeTextPage/index.js"],"names":["mapToProps","_","phone","composeText","connectivityMonitor","contactSearch","locale","messageSender","rateLimiter","rolesAndPermissions","currentLocale","sendButtonDisabled","ready","idle","messageText","length","toNumbers","typingToNumber","connectivity","throttling","senderNumbers","senderNumbersList","senderNumber","outboundSMS","permissions","OutboundSMS","searchContactList","sortedResult","showSpinner","mapToFunctions","messageStore","regionSettings","routerInteraction","formatContactPhone","phoneNumber","areaCode","countryCode","send","then","responses","pushMessages","conversationId","conversation","id","push","clean","formatPhone","searchContact","search","searchString","updateSenderNumber","updateTypingToNumber","cleanTypingToNumber","addToNumber","removeToNumber","updateMessageText","ComposeTextPage"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport ComposeTextPanel from '../../components/ComposeTextPanel';\nimport withPhone from '../../lib/withPhone';\n\nfunction mapToProps(_, {\n  phone: {\n    composeText,\n    connectivityMonitor,\n    contactSearch,\n    locale,\n    messageSender,\n    rateLimiter,\n    rolesAndPermissions,\n  },\n}) {\n  return {\n    currentLocale: locale.currentLocale,\n    sendButtonDisabled: (\n      !(composeText.ready && messageSender.idle) ||\n      (composeText.messageText.length === 0) ||\n      (\n        composeText.toNumbers.length === 0 &&\n        composeText.typingToNumber.length === 0\n      ) ||\n      !connectivityMonitor.connectivity ||\n      rateLimiter.throttling\n    ),\n    senderNumbers: messageSender.senderNumbersList,\n    senderNumber: composeText.senderNumber,\n    typingToNumber: composeText.typingToNumber,\n    toNumbers: composeText.toNumbers,\n    messageText: composeText.messageText,\n    outboundSMS: rolesAndPermissions.permissions.OutboundSMS,\n    searchContactList: contactSearch.sortedResult,\n    showSpinner: !(\n      composeText.ready &&\n      locale.ready &&\n      messageSender.ready &&\n      rolesAndPermissions.ready &&\n      contactSearch.ready\n    ),\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    composeText,\n    contactSearch,\n    messageStore,\n    regionSettings,\n    routerInteraction,\n  },\n  formatContactPhone = phoneNumber => formatNumber({\n    phoneNumber,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n  }),\n}) {\n  return {\n    send: () =>\n      composeText.send().then((responses) => {\n        if (!responses || responses.length === 0) {\n          return null;\n        }\n        messageStore.pushMessages(responses);\n        if (responses.length === 1) {\n          const conversationId =\n            responses[0] && responses[0].conversation && responses[0].conversation.id;\n          if (!conversationId) {\n            return null;\n          }\n          routerInteraction.push(`/conversations/${conversationId}`);\n        } else {\n          routerInteraction.push('/messages');\n        }\n        composeText.clean();\n        return null;\n      }),\n    formatPhone: formatContactPhone,\n    formatContactPhone,\n    searchContact: searchString => (\n      contactSearch.search({ searchString })\n    ),\n    updateSenderNumber: ({ phoneNumber }) => composeText.updateSenderNumber(phoneNumber),\n    updateTypingToNumber: (...args) => composeText.updateTypingToNumber(...args),\n    cleanTypingToNumber: (...args) => composeText.cleanTypingToNumber(...args),\n    addToNumber: (...args) => composeText.addToNumber(...args),\n    removeToNumber: (...args) => composeText.removeToNumber(...args),\n    updateMessageText: (...args) => composeText.updateMessageText(...args),\n  };\n}\n\nconst ComposeTextPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions\n)(ComposeTextPanel));\n\nexport default ComposeTextPage;\n"]}