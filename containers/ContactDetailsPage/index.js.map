{"version":3,"sources":["containers/ContactDetailsPage/index.js"],"names":["mapToProps","_","params","phone","locale","contacts","contactDetails","contactSearch","currentLocale","contactItem","contact","showSpinner","ready","mapToFunctions","dialerRoute","composeTextRoute","routerInteraction","regionSettings","call","composeText","getContact","find","id","contactId","type","contactType","clearContact","clear","formatNumber","phoneNumber","areaCode","countryCode","getAvatar","getProfileImage","getPresence","onBackClick","goBack","onClickToDial","isIdle","push","onToNumberChange","onCall","undefined","onClickToSMS","isDummyContact","name","updateTypingToNumber","search","searchString","addToNumber","typingToNumber","cleanTypingToNumber","ContactDetailsPage"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAQG;AAAA,MAPDC,MAOC,QAPDA,MAOC;AAAA,wBANDC,KAMC;AAAA,MALCC,MAKD,cALCA,MAKD;AAAA,MAJCC,QAID,cAJCA,QAID;AAAA,MAHCC,cAGD,cAHCA,cAGD;AAAA,MAFCC,aAED,cAFCA,aAED;;AACD,SAAO;AACLC,mBAAeJ,OAAOI,aADjB;AAELC,iBAAaH,eAAeI,OAFvB;AAGLC,iBAAa,EACXP,OAAOQ,KAAP,IACAL,cAAcK,KADd,IAEAN,eAAeM,KAHJ;AAHR,GAAP;AASD;;AAED,SAASC,cAAT,CAAwBZ,CAAxB,SAYG;AAAA;;AAAA,MAXDC,MAWC,SAXDA,MAWC;AAAA,gCAVDY,WAUC;AAAA,MAVDA,WAUC,qCAVa,SAUb;AAAA,oCATDC,gBASC;AAAA,MATDA,gBASC,yCATkB,cASlB;AAAA,0BARDZ,KAQC;AAAA,MAPCa,iBAOD,eAPCA,iBAOD;AAAA,MANCV,cAMD,eANCA,cAMD;AAAA,MALCW,cAKD,eALCA,cAKD;AAAA,MAJCC,IAID,eAJCA,IAID;AAAA,MAHCC,WAGD,eAHCA,WAGD;AAAA,MAFCZ,aAED,eAFCA,aAED;;AACD,SAAO;AACLa,gBAAY,sBAAM;AAChBd,qBAAee,IAAf,CAAoB;AAClBC,YAAIpB,OAAOqB,SADO;AAElBC,cAAMtB,OAAOuB;AAFK,OAApB;AAID,KANI;AAOLC,kBAAc,wBAAM;AAClBpB,qBAAeqB,KAAf;AACD,KATI;AAULC,kBAAc;AAAA,aAAe,4BAAa;AACxCC,gCADwC;AAExCC,kBAAUb,eAAea,QAFe;AAGxCC,qBAAad,eAAec;AAHY,OAAb,CAAf;AAAA,KAVT;AAeLC,eAAW;AAAA,aAAW1B,eAAe2B,eAAf,CAA+BvB,OAA/B,CAAX;AAAA,KAfN;AAgBLwB,iBAAa;AAAA,aAAW5B,eAAe4B,WAAf,CAA2BxB,OAA3B,CAAX;AAAA,KAhBR;AAiBLyB,iBAAa,uBAAM;AACjBnB,wBAAkBoB,MAAlB;AACD,KAnBI;AAoBLC,mBAAenB,OACb,UAACW,WAAD,EAAiB;AACf,UAAIX,KAAKoB,MAAT,EAAiB;AACftB,0BAAkBuB,IAAlB,CAAuBzB,WAAvB;AACAI,aAAKsB,gBAAL,CAAsBX,WAAtB;AACAX,aAAKuB,MAAL;AACD;AACF,KAPY,GAQbC,SA5BG;AA6BLC,kBAAcxB;AAAA,6EACZ,iBAAOT,OAAP;AAAA,YAAgBkC,cAAhB,uEAAiC,KAAjC;AAAA;AAAA;AAAA;AAAA;AACE,oBAAI5B,iBAAJ,EAAuB;AACrBA,oCAAkBuB,IAAlB,CAAuBxB,gBAAvB;AACD;AACD;AACA,oBAAIL,QAAQmC,IAAR,IAAgBnC,QAAQmB,WAAxB,IAAuCe,cAA3C,EAA2D;AACzDzB,8BAAY2B,oBAAZ,CAAiCpC,QAAQmC,IAAzC;AACAtC,gCAAcwC,MAAd,CAAqB,EAAEC,cAActC,QAAQmC,IAAxB,EAArB;AACD,iBAHD,MAGO;AACL1B,8BAAY8B,WAAZ,CAAwBvC,OAAxB;AACA,sBAAIS,YAAY+B,cAAZ,KAA+BxC,QAAQmB,WAA3C,EAAwD;AACtDV,gCAAYgC,mBAAZ;AACD;AACF;;AAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADY;;AAAA;AAAA;AAAA;AAAA,UAgBZT;AA7CG,GAAP;AA+CD;;AAED,IAAMU,qBAAqB,yBAAU,yBAAQpD,UAAR,EAAoBa,cAApB,+BAAV,CAA3B;;kBAEeuC,kB","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport ContactDetailsView from '../../components/ContactDetailsView';\nimport withPhone from '../../lib/withPhone';\n\nfunction mapToProps(_, {\n  params,\n  phone: {\n    locale,\n    contacts,\n    contactDetails,\n    contactSearch,\n  },\n}) {\n  return {\n    currentLocale: locale.currentLocale,\n    contactItem: contactDetails.contact,\n    showSpinner: !(\n      locale.ready &&\n      contactSearch.ready &&\n      contactDetails.ready\n    ),\n  };\n}\n\nfunction mapToFunctions(_, {\n  params,\n  dialerRoute = '/dialer',\n  composeTextRoute = '/composeText',\n  phone: {\n    routerInteraction,\n    contactDetails,\n    regionSettings,\n    call,\n    composeText,\n    contactSearch,\n  },\n}) {\n  return {\n    getContact: () => {\n      contactDetails.find({\n        id: params.contactId,\n        type: params.contactType\n      });\n    },\n    clearContact: () => {\n      contactDetails.clear();\n    },\n    formatNumber: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    getAvatar: contact => contactDetails.getProfileImage(contact),\n    getPresence: contact => contactDetails.getPresence(contact),\n    onBackClick: () => {\n      routerInteraction.goBack();\n    },\n    onClickToDial: call ?\n      (phoneNumber) => {\n        if (call.isIdle) {\n          routerInteraction.push(dialerRoute);\n          call.onToNumberChange(phoneNumber);\n          call.onCall();\n        }\n      } :\n      undefined,\n    onClickToSMS: composeText ?\n      async (contact, isDummyContact = false) => {\n        if (routerInteraction) {\n          routerInteraction.push(composeTextRoute);\n        }\n        // if contact autocomplete, if no match fill the number only\n        if (contact.name && contact.phoneNumber && isDummyContact) {\n          composeText.updateTypingToNumber(contact.name);\n          contactSearch.search({ searchString: contact.name });\n        } else {\n          composeText.addToNumber(contact);\n          if (composeText.typingToNumber === contact.phoneNumber) {\n            composeText.cleanTypingToNumber();\n          }\n        }\n      } :\n      undefined,\n  };\n}\n\nconst ContactDetailsPage = withPhone(connect(mapToProps, mapToFunctions)(ContactDetailsView));\n\nexport default ContactDetailsPage;\n"]}