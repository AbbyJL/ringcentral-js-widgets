{"version":3,"sources":["containers/SettingsPage/index.js"],"names":["mapToProps","_","phone","accountInfo","auth","brand","extensionInfo","locale","localeSettings","regionSettings","callingSettings","version","rolesAndPermissions","detailedPresence","showRegion","showCalling","showAudio","showFeedback","params","loginNumber","loggedIn","loginStatus","ready","extensionNumber","phoneNumber","mainCompanyNumber","join","countryCode","areaCode","showSpinner","callingEnabled","id","availableCountries","length","find","c","isoCode","currentLocale","brandId","ringoutEnabled","outboundSMS","permissions","OutboundSMS","InternalSMS","isCallQueueMember","dndStatus","userStatus","showPresenceSettings","supportedLocales","savedLocale","mapToFunctions","routerInteraction","regionSettingsUrl","callingSettingsUrl","audioSettingsUrl","feedbackSettingsUrl","onLogoutButtonClick","logout","onRegionSettingsLinkClick","push","onCallingSettingsLinkClick","onAudioSettingsLinkClick","onFeedbackSettingsLinkClick","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","saveLocale","SettingsPage","default"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport loginStatus from 'ringcentral-integration/modules/Auth/loginStatus';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport SettingsPanel from '../../components/SettingsPanel';\nimport withPhone from '../../lib/withPhone';\n\nfunction mapToProps(_, {\n  phone: {\n    accountInfo,\n    auth,\n    brand,\n    extensionInfo,\n    locale,\n    localeSettings,\n    regionSettings,\n    callingSettings,\n    version,\n    rolesAndPermissions,\n    detailedPresence,\n  },\n  showRegion = true,\n  showCalling = true,\n  showAudio = true,\n  showFeedback = true,\n  params,\n}) {\n  let loginNumber = '';\n  const loggedIn = auth.loginStatus === loginStatus.loggedIn;\n  if (\n    loggedIn &&\n    accountInfo.ready &&\n    extensionInfo.ready\n  ) {\n    // If no extensionNumber, extensionNumber field needs to be omitted\n    const extensionNumber = extensionInfo.extensionNumber &&\n      extensionInfo.extensionNumber !== '0' ? extensionInfo.extensionNumber : null;\n    const phoneNumber = [accountInfo.mainCompanyNumber, extensionNumber].join('*');\n    loginNumber = formatNumber({\n      phoneNumber,\n      countryCode: regionSettings.countryCode,\n      areaCode: regionSettings.areaCode,\n    });\n  }\n  return {\n    showSpinner: !(\n      accountInfo.ready &&\n      auth.ready &&\n      loggedIn &&\n      extensionInfo.ready &&\n      locale.ready &&\n      regionSettings.ready &&\n      (!callingSettings || callingSettings.ready) &&\n      rolesAndPermissions.ready &&\n      (!detailedPresence || detailedPresence.ready) &&\n      (!localeSettings || localeSettings.ready)\n    ),\n    showFeedback,\n    showCalling: showCalling && callingSettings && rolesAndPermissions.callingEnabled,\n    showAudio: showAudio && rolesAndPermissions.callingEnabled,\n    showRegion:\n      loggedIn &&\n      brand.id === '1210' &&\n      (\n        regionSettings.availableCountries.length > 1 ||\n        !!regionSettings.availableCountries.find(c => c.isoCode === 'US') ||\n        !!regionSettings.availableCountries.find(c => c.isoCode === 'CA')\n      ) &&\n      rolesAndPermissions.callingEnabled &&\n      showRegion,\n    loginNumber,\n    version,\n    currentLocale: locale.currentLocale,\n    brandId: brand.id,\n    ringoutEnabled: rolesAndPermissions.ringoutEnabled,\n    outboundSMS: !!rolesAndPermissions.permissions.OutboundSMS ||\n    !!rolesAndPermissions.permissions.InternalSMS,\n    isCallQueueMember: extensionInfo.isCallQueueMember,\n    dndStatus: detailedPresence && detailedPresence.dndStatus,\n    userStatus: detailedPresence && detailedPresence.userStatus,\n    showPresenceSettings: !!(detailedPresence && params && params.showPresenceSettings),\n    supportedLocales: localeSettings && localeSettings.supportedLocales,\n    savedLocale: localeSettings && localeSettings.savedLocale,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    auth,\n    detailedPresence,\n    routerInteraction,\n    localeSettings,\n  },\n  regionSettingsUrl = '/settings/region',\n  callingSettingsUrl = '/settings/calling',\n  audioSettingsUrl = '/settings/audio',\n  feedbackSettingsUrl = '/settings/feedback',\n}) {\n  return {\n    onLogoutButtonClick: async () => {\n      await auth.logout();\n    },\n    onRegionSettingsLinkClick: () => {\n      routerInteraction.push(regionSettingsUrl);\n    },\n    onCallingSettingsLinkClick: () => {\n      routerInteraction.push(callingSettingsUrl);\n    },\n    onAudioSettingsLinkClick: () => {\n      routerInteraction.push(audioSettingsUrl);\n    },\n    onFeedbackSettingsLinkClick: () => {\n      routerInteraction.push(feedbackSettingsUrl);\n    },\n    setAvailable: (...args) => (detailedPresence && detailedPresence.setAvailable(...args)),\n    setBusy: (...args) => (detailedPresence && detailedPresence.setBusy(...args)),\n    setDoNotDisturb: (...args) => (detailedPresence && detailedPresence.setDoNotDisturb(...args)),\n    setInvisible: (...args) => (detailedPresence && detailedPresence.setInvisible(...args)),\n    toggleAcceptCallQueueCalls: (...args) => (\n      detailedPresence && detailedPresence.toggleAcceptCallQueueCalls(...args)\n    ),\n    saveLocale: localeSettings && (locale => localeSettings.saveLocale(locale)),\n  };\n}\nconst SettingsPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(SettingsPanel));\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  SettingsPage as default,\n};\n"]}