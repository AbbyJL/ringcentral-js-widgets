{"version":3,"sources":["containers/SettingsPage/index.js"],"names":["mapToProps","_","phone","accountInfo","auth","brand","extensionInfo","locale","localeSettings","regionSettings","callingSettings","version","rolesAndPermissions","detailedPresence","showRegion","showCalling","showAudio","showFeedback","showUserGuide","params","loginNumber","loggedIn","loginStatus","ready","extensionNumber","phoneNumber","mainCompanyNumber","join","countryCode","areaCode","showSpinner","callingEnabled","id","availableCountries","length","find","c","isoCode","currentLocale","brandId","ringoutEnabled","outboundSMS","permissions","OutboundSMS","InternalSMS","isCallQueueMember","dndStatus","userStatus","showPresenceSettings","supportedLocales","savedLocale","hasUserGuidePermission","mapToFunctions","routerInteraction","userGuide","regionSettingsUrl","callingSettingsUrl","audioSettingsUrl","feedbackSettingsUrl","onLogoutButtonClick","logout","onRegionSettingsLinkClick","push","onCallingSettingsLinkClick","onAudioSettingsLinkClick","onFeedbackSettingsLinkClick","onUserGuideClick","start","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","saveLocale","SettingsPage","default"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAoBG;AAAA,wBAnBDC,KAmBC;AAAA,MAlBCC,WAkBD,cAlBCA,WAkBD;AAAA,MAjBCC,IAiBD,cAjBCA,IAiBD;AAAA,MAhBCC,KAgBD,cAhBCA,KAgBD;AAAA,MAfCC,aAeD,cAfCA,aAeD;AAAA,MAdCC,MAcD,cAdCA,MAcD;AAAA,MAbCC,cAaD,cAbCA,cAaD;AAAA,MAZCC,cAYD,cAZCA,cAYD;AAAA,MAXCC,eAWD,cAXCA,eAWD;AAAA,MAVCC,OAUD,cAVCA,OAUD;AAAA,MATCC,mBASD,cATCA,mBASD;AAAA,MARCC,gBAQD,cARCA,gBAQD;AAAA,6BANDC,UAMC;AAAA,MANDA,UAMC,mCANY,IAMZ;AAAA,8BALDC,WAKC;AAAA,MALDA,WAKC,oCALa,IAKb;AAAA,4BAJDC,SAIC;AAAA,MAJDA,SAIC,kCAJW,IAIX;AAAA,+BAHDC,YAGC;AAAA,MAHDA,YAGC,qCAHc,IAGd;AAAA,gCAFDC,aAEC;AAAA,MAFDA,aAEC,sCAFe,IAEf;AAAA,MADDC,MACC,QADDA,MACC;;AACD,MAAIC,cAAc,EAAlB;AACA,MAAMC,WAAWjB,KAAKkB,WAAL,KAAqB,sBAAYD,QAAlD;AACA,MACEA,YACAlB,YAAYoB,KADZ,IAEAjB,cAAciB,KAHhB,EAIE;AACA;AACA,QAAMC,kBAAkBlB,cAAckB,eAAd,IACtBlB,cAAckB,eAAd,KAAkC,GADZ,GACkBlB,cAAckB,eADhC,GACkD,IAD1E;AAEA,QAAMC,cAAc,CAACtB,YAAYuB,iBAAb,EAAgCF,eAAhC,EAAiDG,IAAjD,CAAsD,GAAtD,CAApB;AACAP,kBAAc,4BAAa;AACzBK,8BADyB;AAEzBG,mBAAanB,eAAemB,WAFH;AAGzBC,gBAAUpB,eAAeoB;AAHA,KAAb,CAAd;AAKD;AACD,SAAO;AACLC,iBAAa,EACX3B,YAAYoB,KAAZ,IACAnB,KAAKmB,KADL,IAEAF,QAFA,IAGAf,cAAciB,KAHd,IAIAhB,OAAOgB,KAJP,IAKAd,eAAec,KALf,KAMC,CAACb,eAAD,IAAoBA,gBAAgBa,KANrC,KAOAX,oBAAoBW,KAPpB,KAQC,CAACV,gBAAD,IAAqBA,iBAAiBU,KARvC,MASC,CAACf,cAAD,IAAmBA,eAAee,KATnC,CADW,CADR;AAaLN,8BAbK;AAcLF,iBAAaA,eAAeL,eAAf,IAAkCE,oBAAoBmB,cAd9D;AAeLf,eAAWA,aAAaJ,oBAAoBmB,cAfvC;AAgBLjB,gBACEO,YACAhB,MAAM2B,EAAN,KAAa,MADb,KAGEvB,eAAewB,kBAAf,CAAkCC,MAAlC,GAA2C,CAA3C,IACA,CAAC,CAACzB,eAAewB,kBAAf,CAAkCE,IAAlC,CAAuC;AAAA,aAAKC,EAAEC,OAAF,KAAc,IAAnB;AAAA,KAAvC,CADF,IAEA,CAAC,CAAC5B,eAAewB,kBAAf,CAAkCE,IAAlC,CAAuC;AAAA,aAAKC,EAAEC,OAAF,KAAc,IAAnB;AAAA,KAAvC,CALJ,KAOAzB,oBAAoBmB,cAPpB,IAQAjB,UAzBG;AA0BLM,4BA1BK;AA2BLT,oBA3BK;AA4BL2B,mBAAe/B,OAAO+B,aA5BjB;AA6BLC,aAASlC,MAAM2B,EA7BV;AA8BLQ,oBAAgB5B,oBAAoB4B,cA9B/B;AA+BLC,iBAAa,CAAC,CAAC7B,oBAAoB8B,WAApB,CAAgCC,WAAlC,IACb,CAAC,CAAC/B,oBAAoB8B,WAApB,CAAgCE,WAhC7B;AAiCLC,uBAAmBvC,cAAcuC,iBAjC5B;AAkCLC,eAAWjC,oBAAoBA,iBAAiBiC,SAlC3C;AAmCLC,gBAAYlC,oBAAoBA,iBAAiBkC,UAnC5C;AAoCLC,0BAAsB,CAAC,EAAEnC,oBAAoBM,MAApB,IAA8BA,OAAO6B,oBAAvC,CApClB;AAqCLC,sBAAkBzC,kBAAkBA,eAAeyC,gBArC9C;AAsCLC,iBAAa1C,kBAAkBA,eAAe0C,WAtCzC;AAuCLhC,mBAAeA,iBAAiBN,oBAAoBuC;AAvC/C,GAAP;AAyCD;;AAED,SAASC,cAAT,CAAwBnD,CAAxB,SAYG;AAAA;;AAAA,0BAXDC,KAWC;AAAA,MAVCE,IAUD,eAVCA,IAUD;AAAA,MATCS,gBASD,eATCA,gBASD;AAAA,MARCwC,iBAQD,eARCA,iBAQD;AAAA,MAPC7C,cAOD,eAPCA,cAOD;AAAA,MANC8C,SAMD,eANCA,SAMD;AAAA,oCAJDC,iBAIC;AAAA,MAJDA,iBAIC,yCAJmB,kBAInB;AAAA,oCAHDC,kBAGC;AAAA,MAHDA,kBAGC,yCAHoB,mBAGpB;AAAA,oCAFDC,gBAEC;AAAA,MAFDA,gBAEC,yCAFkB,iBAElB;AAAA,oCADDC,mBACC;AAAA,MADDA,mBACC,yCADqB,oBACrB;;AACD,SAAO;AACLC;AAAA,6EAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACbvD,KAAKwD,MAAL,EADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAArB;;AAAA;AAAA;AAAA;AAAA,OADK;AAILC,+BAA2B,qCAAM;AAC/BR,wBAAkBS,IAAlB,CAAuBP,iBAAvB;AACD,KANI;AAOLQ,gCAA4B,sCAAM;AAChCV,wBAAkBS,IAAlB,CAAuBN,kBAAvB;AACD,KATI;AAULQ,8BAA0B,oCAAM;AAC9BX,wBAAkBS,IAAlB,CAAuBL,gBAAvB;AACD,KAZI;AAaLQ,iCAA6B,uCAAM;AACjCZ,wBAAkBS,IAAlB,CAAuBJ,mBAAvB;AACD,KAfI;AAgBLQ,sBAAkB,4BAAM;AACtBZ,gBAAUa,KAAV;AACD,KAlBI;AAmBLC,kBAAc;AAAA,aAAcvD,oBAAoBA,iBAAiBuD,YAAjB,mCAAlC;AAAA,KAnBT;AAoBLC,aAAS;AAAA,aAAcxD,oBAAoBA,iBAAiBwD,OAAjB,mCAAlC;AAAA,KApBJ;AAqBLC,qBAAiB;AAAA,aAAczD,oBAAoBA,iBAAiByD,eAAjB,mCAAlC;AAAA,KArBZ;AAsBLC,kBAAc;AAAA,aAAc1D,oBAAoBA,iBAAiB0D,YAAjB,mCAAlC;AAAA,KAtBT;AAuBLC,gCAA4B;AAAA,aAC1B3D,oBAAoBA,iBAAiB2D,0BAAjB,mCADM;AAAA,KAvBvB;AA0BLC,gBAAYjE,kBAAmB;AAAA,aAAUA,eAAeiE,UAAf,CAA0BlE,MAA1B,CAAV;AAAA;AA1B1B,GAAP;AA4BD;AACD,IAAMmE,eAAe,yBAAU,yBAC7B1E,UAD6B,EAE7BoD,cAF6B,0BAAV,CAArB;;QAMEA,c,GAAAA,c;QACApD,U,GAAAA,U;QACgB2E,O,GAAhBD,Y","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport loginStatus from 'ringcentral-integration/modules/Auth/loginStatus';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport SettingsPanel from '../../components/SettingsPanel';\nimport withPhone from '../../lib/withPhone';\n\nfunction mapToProps(_, {\n  phone: {\n    accountInfo,\n    auth,\n    brand,\n    extensionInfo,\n    locale,\n    localeSettings,\n    regionSettings,\n    callingSettings,\n    version,\n    rolesAndPermissions,\n    detailedPresence,\n  },\n  showRegion = true,\n  showCalling = true,\n  showAudio = true,\n  showFeedback = true,\n  showUserGuide = true,\n  params,\n}) {\n  let loginNumber = '';\n  const loggedIn = auth.loginStatus === loginStatus.loggedIn;\n  if (\n    loggedIn &&\n    accountInfo.ready &&\n    extensionInfo.ready\n  ) {\n    // If no extensionNumber, extensionNumber field needs to be omitted\n    const extensionNumber = extensionInfo.extensionNumber &&\n      extensionInfo.extensionNumber !== '0' ? extensionInfo.extensionNumber : null;\n    const phoneNumber = [accountInfo.mainCompanyNumber, extensionNumber].join('*');\n    loginNumber = formatNumber({\n      phoneNumber,\n      countryCode: regionSettings.countryCode,\n      areaCode: regionSettings.areaCode,\n    });\n  }\n  return {\n    showSpinner: !(\n      accountInfo.ready &&\n      auth.ready &&\n      loggedIn &&\n      extensionInfo.ready &&\n      locale.ready &&\n      regionSettings.ready &&\n      (!callingSettings || callingSettings.ready) &&\n      rolesAndPermissions.ready &&\n      (!detailedPresence || detailedPresence.ready) &&\n      (!localeSettings || localeSettings.ready)\n    ),\n    showFeedback,\n    showCalling: showCalling && callingSettings && rolesAndPermissions.callingEnabled,\n    showAudio: showAudio && rolesAndPermissions.callingEnabled,\n    showRegion:\n      loggedIn &&\n      brand.id === '1210' &&\n      (\n        regionSettings.availableCountries.length > 1 ||\n        !!regionSettings.availableCountries.find(c => c.isoCode === 'US') ||\n        !!regionSettings.availableCountries.find(c => c.isoCode === 'CA')\n      ) &&\n      rolesAndPermissions.callingEnabled &&\n      showRegion,\n    loginNumber,\n    version,\n    currentLocale: locale.currentLocale,\n    brandId: brand.id,\n    ringoutEnabled: rolesAndPermissions.ringoutEnabled,\n    outboundSMS: !!rolesAndPermissions.permissions.OutboundSMS ||\n    !!rolesAndPermissions.permissions.InternalSMS,\n    isCallQueueMember: extensionInfo.isCallQueueMember,\n    dndStatus: detailedPresence && detailedPresence.dndStatus,\n    userStatus: detailedPresence && detailedPresence.userStatus,\n    showPresenceSettings: !!(detailedPresence && params && params.showPresenceSettings),\n    supportedLocales: localeSettings && localeSettings.supportedLocales,\n    savedLocale: localeSettings && localeSettings.savedLocale,\n    showUserGuide: showUserGuide && rolesAndPermissions.hasUserGuidePermission,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    auth,\n    detailedPresence,\n    routerInteraction,\n    localeSettings,\n    userGuide,\n  },\n  regionSettingsUrl = '/settings/region',\n  callingSettingsUrl = '/settings/calling',\n  audioSettingsUrl = '/settings/audio',\n  feedbackSettingsUrl = '/settings/feedback',\n}) {\n  return {\n    onLogoutButtonClick: async () => {\n      await auth.logout();\n    },\n    onRegionSettingsLinkClick: () => {\n      routerInteraction.push(regionSettingsUrl);\n    },\n    onCallingSettingsLinkClick: () => {\n      routerInteraction.push(callingSettingsUrl);\n    },\n    onAudioSettingsLinkClick: () => {\n      routerInteraction.push(audioSettingsUrl);\n    },\n    onFeedbackSettingsLinkClick: () => {\n      routerInteraction.push(feedbackSettingsUrl);\n    },\n    onUserGuideClick: () => {\n      userGuide.start();\n    },\n    setAvailable: (...args) => (detailedPresence && detailedPresence.setAvailable(...args)),\n    setBusy: (...args) => (detailedPresence && detailedPresence.setBusy(...args)),\n    setDoNotDisturb: (...args) => (detailedPresence && detailedPresence.setDoNotDisturb(...args)),\n    setInvisible: (...args) => (detailedPresence && detailedPresence.setInvisible(...args)),\n    toggleAcceptCallQueueCalls: (...args) => (\n      detailedPresence && detailedPresence.toggleAcceptCallQueueCalls(...args)\n    ),\n    saveLocale: localeSettings && (locale => localeSettings.saveLocale(locale)),\n  };\n}\nconst SettingsPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(SettingsPanel));\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  SettingsPage as default,\n};\n"]}