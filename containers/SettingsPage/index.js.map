{"version":3,"sources":["containers/SettingsPage/index.js"],"names":["mapToProps","_","phone","accountInfo","auth","brand","extensionInfo","locale","localeSettings","regionSettings","callingSettings","version","rolesAndPermissions","detailedPresence","params","loginNumber","loggedIn","loginStatus","ready","extensionNumber","phoneNumber","mainCompanyNumber","join","countryCode","areaCode","showSpinner","showRegion","id","availableCountries","length","find","c","isoCode","currentLocale","brandId","ringoutEnabled","outboundSMS","permissions","OutboundSMS","InternalSMS","isCallQueueMember","dndStatus","userStatus","showPresenceSettings","supportedLocales","savedLocale","mapToFunctions","routerInteraction","regionSettingsUrl","callingSettingsUrl","audioSettingsUrl","onLogoutButtonClick","logout","onRegionSettingsLinkClick","push","onCallingSettingsLinkClick","onAudioSettingsLinkClick","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","saveLocale","SettingsPage","default"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport loginStatus from 'ringcentral-integration/modules/Auth/loginStatus';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport SettingsPanel from '../../components/SettingsPanel';\nimport withPhone from '../../lib/withPhone';\n\nfunction mapToProps(_, {\n  phone: {\n    accountInfo,\n    auth,\n    brand,\n    extensionInfo,\n    locale,\n    localeSettings,\n    regionSettings,\n    callingSettings,\n    version,\n    rolesAndPermissions,\n    detailedPresence,\n  },\n  params,\n}) {\n  let loginNumber = '';\n  const loggedIn = auth.loginStatus === loginStatus.loggedIn;\n  if (\n    loggedIn &&\n    accountInfo.ready &&\n    extensionInfo.ready\n  ) {\n    // If no extensionNumber, extensionNumber field needs to be omitted\n    const extensionNumber = extensionInfo.extensionNumber &&\n      extensionInfo.extensionNumber !== '0' ? extensionInfo.extensionNumber : null;\n    const phoneNumber = [accountInfo.mainCompanyNumber, extensionNumber].join('*');\n    loginNumber = formatNumber({\n      phoneNumber,\n      countryCode: regionSettings.countryCode,\n      areaCode: regionSettings.areaCode,\n    });\n  }\n  return {\n    showSpinner: !(\n      accountInfo.ready &&\n      auth.ready &&\n      loggedIn &&\n      extensionInfo.ready &&\n      locale.ready &&\n      regionSettings.ready &&\n      callingSettings.ready &&\n      rolesAndPermissions.ready &&\n      (!detailedPresence || detailedPresence.ready) &&\n      (!localeSettings || localeSettings.ready)\n    ),\n    showRegion: loggedIn && brand.id === '1210' && (\n      regionSettings.availableCountries.length > 1 ||\n      !!regionSettings.availableCountries.find(c => c.isoCode === 'US') ||\n      !!regionSettings.availableCountries.find(c => c.isoCode === 'CA')\n    ),\n    loginNumber,\n    version,\n    currentLocale: locale.currentLocale,\n    brandId: brand.id,\n    ringoutEnabled: rolesAndPermissions.ringoutEnabled,\n    outboundSMS: !!rolesAndPermissions.permissions.OutboundSMS ||\n    !!rolesAndPermissions.permissions.InternalSMS,\n    isCallQueueMember: extensionInfo.isCallQueueMember,\n    dndStatus: detailedPresence && detailedPresence.dndStatus,\n    userStatus: detailedPresence && detailedPresence.userStatus,\n    showPresenceSettings: !!(detailedPresence && params && params.showPresenceSettings),\n    supportedLocales: localeSettings && localeSettings.supportedLocales,\n    savedLocale: localeSettings && localeSettings.savedLocale,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    auth,\n    detailedPresence,\n    routerInteraction,\n    localeSettings,\n  },\n  regionSettingsUrl = '/settings/region',\n  callingSettingsUrl = '/settings/calling',\n  audioSettingsUrl = '/settings/audio',\n}) {\n  return {\n    onLogoutButtonClick: async () => {\n      await auth.logout();\n    },\n    onRegionSettingsLinkClick: () => {\n      routerInteraction.push(regionSettingsUrl);\n    },\n    onCallingSettingsLinkClick: () => {\n      routerInteraction.push(callingSettingsUrl);\n    },\n    onAudioSettingsLinkClick: () => {\n      routerInteraction.push(audioSettingsUrl);\n    },\n    setAvailable: (...args) => (detailedPresence && detailedPresence.setAvailable(...args)),\n    setBusy: (...args) => (detailedPresence && detailedPresence.setBusy(...args)),\n    setDoNotDisturb: (...args) => (detailedPresence && detailedPresence.setDoNotDisturb(...args)),\n    setInvisible: (...args) => (detailedPresence && detailedPresence.setInvisible(...args)),\n    toggleAcceptCallQueueCalls: (...args) => (\n      detailedPresence && detailedPresence.toggleAcceptCallQueueCalls(...args)\n    ),\n    saveLocale: localeSettings && (locale => localeSettings.saveLocale(locale)),\n  };\n}\nconst SettingsPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(SettingsPanel));\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  SettingsPage as default,\n};\n"]}