{"version":3,"sources":["containers/SettingsPage/index.js"],"names":["mapToProps","_","phone","accountInfo","auth","brand","extensionInfo","locale","regionSettings","callingSettings","version","rolesAndPermissions","presence","params","loginNumber","loggedIn","loginStatus","ready","extensionNumber","phoneNumber","mainCompanyNumber","join","countryCode","areaCode","showSpinner","showRegion","id","availableCountries","length","find","c","isoCode","currentLocale","brandId","ringoutEnabled","outboundSMS","permissions","OutboundSMS","InternalSMS","isCallQueueMember","dndStatus","userStatus","showPresenceSettings","mapToFunctions","router","regionSettingsUrl","callingSettingsUrl","audioSettingsUrl","onLogoutButtonClick","logout","onRegionSettingsLinkClick","push","onCallingSettingsLinkClick","onAudioSettingsLinkClick","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","SettingsPage","default"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport loginStatus from 'ringcentral-integration/modules/Auth/loginStatus';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport SettingsPanel from '../../components/SettingsPanel';\n\nfunction mapToProps(_, {\n  phone: {\n    accountInfo,\n    auth,\n    brand,\n    extensionInfo,\n    locale,\n    regionSettings,\n    callingSettings,\n    version,\n    rolesAndPermissions,\n    presence,\n  },\n  params,\n}) {\n  let loginNumber = '';\n  const loggedIn = auth.loginStatus === loginStatus.loggedIn;\n  if (\n    loggedIn &&\n    accountInfo.ready &&\n    extensionInfo.ready\n  ) {\n    // If no extensionNumber, extensionNumber field needs to be omitted\n    const extensionNumber = extensionInfo.extensionNumber &&\n      extensionInfo.extensionNumber !== '0' ? extensionInfo.extensionNumber : null;\n    const phoneNumber = [accountInfo.mainCompanyNumber, extensionNumber].join('*');\n    loginNumber = formatNumber({\n      phoneNumber,\n      countryCode: regionSettings.countryCode,\n      areaCode: regionSettings.areaCode,\n    });\n  }\n  return {\n    showSpinner: !(\n      accountInfo.ready &&\n      auth.ready &&\n      loggedIn &&\n      extensionInfo.ready &&\n      locale.ready &&\n      regionSettings.ready &&\n      callingSettings.ready &&\n      rolesAndPermissions.ready &&\n      (!presence || presence.ready)\n    ),\n    showRegion: loggedIn && brand.id === '1210' && (\n      regionSettings.availableCountries.length > 1 ||\n      !!regionSettings.availableCountries.find(c => c.isoCode === 'US') ||\n      !!regionSettings.availableCountries.find(c => c.isoCode === 'CA')\n    ),\n    loginNumber,\n    version,\n    currentLocale: locale.currentLocale,\n    brandId: brand.id,\n    ringoutEnabled: rolesAndPermissions.ringoutEnabled,\n    outboundSMS: !!rolesAndPermissions.permissions.OutboundSMS ||\n    !!rolesAndPermissions.permissions.InternalSMS,\n    isCallQueueMember: extensionInfo.isCallQueueMember,\n    dndStatus: presence && presence.dndStatus,\n    userStatus: presence && presence.userStatus,\n    showPresenceSettings: !!(presence && params && params.showPresenceSettings),\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    auth,\n    presence,\n    router,\n  },\n  regionSettingsUrl = '/settings/region',\n  callingSettingsUrl = '/settings/calling',\n  audioSettingsUrl = '/settings/audio',\n}) {\n  return {\n    onLogoutButtonClick: async () => {\n      await auth.logout();\n    },\n    onRegionSettingsLinkClick: () => {\n      router.push(regionSettingsUrl);\n    },\n    onCallingSettingsLinkClick: () => {\n      router.push(callingSettingsUrl);\n    },\n    onAudioSettingsLinkClick: () => {\n      router.push(audioSettingsUrl);\n    },\n    setAvailable: (...args) => (presence && presence.setAvailable(...args)),\n    setBusy: (...args) => (presence && presence.setBusy(...args)),\n    setDoNotDisturb: (...args) => (presence && presence.setDoNotDisturb(...args)),\n    setInvisible: (...args) => (presence && presence.setInvisible(...args)),\n    toggleAcceptCallQueueCalls: (...args) => (\n      presence && presence.toggleAcceptCallQueueCalls(...args)\n    ),\n  };\n}\nconst SettingsPage = connect(\n  mapToProps,\n  mapToFunctions,\n)(SettingsPanel);\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  SettingsPage as default,\n};\n"]}