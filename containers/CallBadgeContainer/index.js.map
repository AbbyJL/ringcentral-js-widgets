{"version":3,"sources":["containers/CallBadgeContainer/index.js"],"names":["CallBadge","props","state","badgeOffsetX","badgeOffsetY","updatePositionOffset","x","y","setState","onClick","isRinging","_isRinging","toggleMinimized","session","id","goToCallCtrl","direction","inbound","callStatus","connecting","active","minimized","hidden","getString","currentLocale","propTypes","shape","string","startTime","number","isOnMute","bool","isOnHold","isOnRecord","to","from","isRequired","func","mapToProps","_","phone","webphone","locale","currentSession","activeSession","ringSession","mapToFunctions","sessionId","CallBadgeContainer"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\n\nimport ActiveCallBadge from '../../components/ActiveCallBadge';\nimport withPhone from '../../lib/withPhone';\n\nimport i18n from './i18n';\n\nclass CallBadge extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      badgeOffsetX: 0,\n      badgeOffsetY: 0,\n    };\n\n    this.updatePositionOffset = (x, y) => {\n      this.setState({\n        badgeOffsetX: x,\n        badgeOffsetY: y,\n      });\n    };\n\n    this.onClick = () => {\n      const isRinging = this._isRinging();\n      if (isRinging) {\n        this.props.toggleMinimized(this.props.session.id);\n        return;\n      }\n      this.props.goToCallCtrl();\n    };\n  }\n\n  _isRinging() {\n    let isRinging = false;\n    const session = this.props.session;\n    if (\n      session.direction === callDirections.inbound &&\n      session.callStatus === sessionStatus.connecting\n    ) {\n      isRinging = true;\n    }\n    return isRinging;\n  }\n\n  render() {\n    const session = this.props.session;\n    const active = !!session.id;\n    if (!active) {\n      return null;\n    }\n    const isRinging = this._isRinging();\n    if (isRinging && !session.minimized) {\n      return null;\n    }\n    if (this.props.hidden) {\n      return null;\n    }\n    return (\n      <ActiveCallBadge\n        onClick={this.onClick}\n        offsetX={this.state.badgeOffsetX}\n        offsetY={this.state.badgeOffsetY}\n        updatePositionOffset={this.updatePositionOffset}\n        title={i18n.getString('activeCall', this.props.currentLocale)}\n      />\n    );\n  }\n}\n\nCallBadge.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnRecord: PropTypes.bool,\n    to: PropTypes.string,\n    from: PropTypes.string,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  toggleMinimized: PropTypes.func.isRequired,\n  goToCallCtrl: PropTypes.func.isRequired,\n  hidden: PropTypes.bool.isRequired,\n};\n\nfunction mapToProps(_, {\n  phone: {\n    webphone,\n    locale,\n  },\n  hidden,\n  goToCallCtrl,\n}) {\n  const currentSession =\n    webphone.activeSession || webphone.ringSession || {};\n  return {\n    currentLocale: locale.currentLocale,\n    session: currentSession,\n    hidden,\n    goToCallCtrl,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    webphone,\n  },\n}) {\n  return {\n    toggleMinimized: sessionId => webphone.toggleMinimized(sessionId),\n  };\n}\n\nconst CallBadgeContainer = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(CallBadge));\n\nexport default CallBadgeContainer;\n\n"]}