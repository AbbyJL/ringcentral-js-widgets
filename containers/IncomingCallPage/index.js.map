{"version":3,"sources":["containers/IncomingCallPage/index.js"],"names":["IncomingCallPage","props","state","selectedMatcherIndex","avatarUrl","hasOtherActiveCall","onSelectMatcherName","option","nameMatches","findIndex","match","id","setState","contact","updateSessionMatchedContact","session","getAvatarUrl","then","answer","reject","toVoiceMail","replyWithMessage","message","onForward","forwardNumber","toggleMinimized","answerAndEnd","hangup","activeSessionId","answerAndHold","onHold","_mounted","_updateAvatarAndMatchIndex","nextProps","contactMatch","active","minimized","phoneNumber","direction","outbound","to","from","fallbackUserName","inbound","getString","currentLocale","formatPhone","areaCode","countryCode","forwardingNumbers","brand","showContactDisplayPlaceholder","sourceIcons","children","propTypes","shape","string","startTime","number","isOnMute","bool","isOnHold","isOnRecord","object","isRequired","func","node","array","defaultProps","undefined","mapToProps","_","webphone","locale","contactMatcher","regionSettings","forwardingNumber","currentSession","ringSession","contactMapping","dataMapping","fromMatches","toMatches","fullName","mapToFunctions","sessionId","forward","hold","IncomingCallContainer","instanceOf"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Brand from 'ringcentral-integration/modules/Brand';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport Webphone from 'ringcentral-integration/modules/Webphone';\nimport Locale from 'ringcentral-integration/modules/Locale';\nimport RegionSettings from 'ringcentral-integration/modules/RegionSettings';\nimport ForwardingNumber from 'ringcentral-integration/modules/ForwardingNumber';\n\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n\nimport IncomingCallPanel from '../../components/IncomingCallPanel';\n\nimport i18n from './i18n';\n\nclass IncomingCallPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n      hasOtherActiveCall: false,\n    };\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n\n    this.answer = () =>\n      this.props.answer(this.props.session.id);\n    this.reject = () =>\n      this.props.reject(this.props.session.id);\n    this.toVoiceMail = () =>\n      this.props.toVoiceMail(this.props.session.id);\n    this.replyWithMessage = message =>\n      this.props.replyWithMessage(this.props.session.id, message);\n    this.onForward = forwardNumber =>\n      this.props.onForward(this.props.session.id, forwardNumber);\n    this.toggleMinimized = () =>\n      this.props.toggleMinimized(this.props.session.id);\n    this.answerAndEnd = async () => {\n      this.props.hangup(this.props.activeSessionId);\n      await this.props.answer(this.props.session.id);\n    };\n    this.answerAndHold = async () => {\n      await this.props.onHold(this.props.activeSessionId);\n      await this.props.answer(this.props.session.id);\n    };\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.session.id !== nextProps.session.id) {\n      this._updateAvatarAndMatchIndex(nextProps);\n      this.setState({\n        hasOtherActiveCall: !!nextProps.activeSessionId,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let selectedMatcherIndex = 0;\n    let contact = props.session.contactMatch;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(match =>\n        match.id === contact.id\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  render() {\n    const session = this.props.session;\n    const active = !!session.id;\n    if (!active) {\n      return null;\n    }\n    if (session.minimized) {\n      return null;\n    }\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n    let fallbackUserName;\n    if (session.direction === callDirections.inbound && session.from === 'anonymous') {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n    return (\n      <IncomingCallPanel\n        currentLocale={this.props.currentLocale}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        phoneNumber={phoneNumber}\n        answer={this.answer}\n        reject={this.reject}\n        replyWithMessage={this.replyWithMessage}\n        toVoiceMail={this.toVoiceMail}\n        formatPhone={this.props.formatPhone}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        onBackButtonClick={this.toggleMinimized}\n        forwardingNumbers={this.props.forwardingNumbers}\n        onForward={this.onForward}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        hasOtherActiveCall={this.state.hasOtherActiveCall}\n        answerAndEnd={this.answerAndEnd}\n        answerAndHold={this.answerAndHold}\n        sessionId={this.props.session.id}\n        sourceIcons={this.props.sourceIcons}\n      >\n        {this.props.children}\n      </IncomingCallPanel>\n    );\n  }\n}\n\nIncomingCallPage.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnRecord: PropTypes.bool,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  toggleMinimized: PropTypes.func.isRequired,\n  answer: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  toVoiceMail: PropTypes.func.isRequired,\n  replyWithMessage: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  onForward: PropTypes.func.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  brand: PropTypes.string.isRequired,\n  activeSessionId: PropTypes.string,\n  sourceIcons: PropTypes.object,\n};\n\nIncomingCallPage.defaultProps = {\n  children: undefined,\n  activeSessionId: null,\n  sourceIcons: undefined,\n};\n\nfunction mapToProps(_, {\n  webphone,\n  locale,\n  contactMatcher,\n  regionSettings,\n  forwardingNumber,\n  brand,\n  showContactDisplayPlaceholder,\n}) {\n  const currentSession = webphone.ringSession || {};\n  const contactMapping = contactMatcher && contactMatcher.dataMapping;\n  const fromMatches = (contactMapping && contactMapping[currentSession.from]) || [];\n  const toMatches = (contactMapping && contactMapping[currentSession.to]) || [];\n  const nameMatches =\n    currentSession.direction === callDirections.outbound ? toMatches : fromMatches;\n  return {\n    brand: brand.fullName,\n    nameMatches,\n    currentLocale: locale.currentLocale,\n    session: currentSession,\n    activeSessionId: webphone.activeSessionId,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    forwardingNumbers: forwardingNumber.forwardingNumbers,\n    showContactDisplayPlaceholder,\n  };\n}\n\nfunction mapToFunctions(_, {\n  webphone,\n  regionSettings,\n  getAvatarUrl,\n}) {\n  return {\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    answer: sessionId => webphone.answer(sessionId),\n    reject: sessionId => webphone.reject(sessionId),\n    toVoiceMail: sessionId => webphone.toVoiceMail(sessionId),\n    onForward: (sessionId, forwardNumber) => webphone.forward(sessionId, forwardNumber),\n    replyWithMessage: (sessionId, message) => webphone.replyWithMessage(sessionId, message),\n    toggleMinimized: sessionId => webphone.toggleMinimized(sessionId),\n    updateSessionMatchedContact: (sessionId, contact) =>\n      webphone.updateSessionMatchedContact(sessionId, contact),\n    getAvatarUrl,\n    hangup: sessionId => webphone.hangup(sessionId),\n    onHold: sessionId => webphone.hold(sessionId),\n  };\n}\n\nconst IncomingCallContainer = connect(\n  mapToProps,\n  mapToFunctions,\n)(IncomingCallPage);\n\nIncomingCallContainer.propTypes = {\n  showContactDisplayPlaceholder: PropTypes.bool,\n  webphone: PropTypes.instanceOf(Webphone).isRequired,\n  locale: PropTypes.instanceOf(Locale).isRequired,\n  brand: PropTypes.instanceOf(Brand).isRequired,\n  regionSettings: PropTypes.instanceOf(RegionSettings).isRequired,\n  forwardingNumber: PropTypes.instanceOf(ForwardingNumber).isRequired,\n  getAvatarUrl: PropTypes.func,\n  children: PropTypes.node,\n};\n\nIncomingCallContainer.defaultProps = {\n  getAvatarUrl: () => null,\n  showContactDisplayPlaceholder: false,\n  children: undefined,\n};\n\nexport default IncomingCallContainer;\n\n"]}