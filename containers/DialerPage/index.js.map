{"version":3,"sources":["containers/DialerPage/index.js"],"names":["DialerPage","state","props","currentLocale","locale","callingMode","callingSettings","callButtonDisabled","call","isIdle","connectivityMonitor","connectivity","rateLimiter","throttling","toNumber","dispatch","keepToNumber","value","onToNumberChange","onCall","propTypes","instanceOf","isRequired"],"mappings":";;;;;;AAAA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;;;AAEA,IAAMA,aAAa,yBAAQ,UAACC,KAAD,EAAQC,KAAR;AAAA,SAAmB;AAC5CC,mBAAeD,MAAME,MAAN,CAAaD,aADgB;AAE5CE,iBAAaH,MAAMI,eAAN,CAAsBD,WAFS;AAG5CE,wBAAoB,CAACL,MAAMM,IAAN,CAAWC,MAAZ,IACf,CAACP,MAAMQ,mBAAN,CAA0BC,YADZ,IAEfT,MAAMU,WAAN,CAAkBC,UALqB;AAM5CC,cAAUZ,MAAMM,IAAN,CAAWM;AANuB,GAAnB;AAAA,CAAR,EAOf,UAACC,QAAD,EAAWb,KAAX;AAAA,SAAsB;AACxBc,kBAAc,sBAACC,KAAD,EAAW;AACvBf,YAAMM,IAAN,CAAWU,gBAAX,CAA4BD,KAA5B;AACD,KAHuB;AAIxBE,YAAQ;AAAA,aACNjB,MAAMM,IAAN,CAAWW,MAAX,EADM;AAAA;AAJgB,GAAtB;AAAA,CAPe,wBAAnB;;AAeAnB,WAAWoB,SAAX,GAAuB;AACrBZ,QAAM,iBAAUa,UAAV,iBAA2BC,UADZ;AAErBhB,mBAAiB,iBAAUe,UAAV,4BAAsCC,UAFlC;AAGrBZ,uBAAqB,iBAAUW,UAAV,gCAA0CC,UAH1C;AAIrBlB,UAAQ,iBAAUiB,UAAV,mBAA6BC,UAJhB;AAKrBV,eAAa,iBAAUS,UAAV,wBAAkCC;AAL1B,CAAvB;;kBAQetB,U","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport { PropTypes } from 'react';\n\nimport Locale from 'ringcentral-integration/modules/Locale';\nimport CallingSettings from 'ringcentral-integration/modules/CallingSettings';\nimport Call from 'ringcentral-integration/modules/Call';\nimport ConnectivityMonitor from 'ringcentral-integration/modules/ConnectivityMonitor';\nimport RateLimiter from 'ringcentral-integration/modules/RateLimiter';\n\n\nimport DialerPanel from '../../components/DialerPanel';\n\nconst DialerPage = connect((state, props) => ({\n  currentLocale: props.locale.currentLocale,\n  callingMode: props.callingSettings.callingMode,\n  callButtonDisabled: !props.call.isIdle\n    || !props.connectivityMonitor.connectivity\n    || props.rateLimiter.throttling,\n  toNumber: props.call.toNumber,\n}), (dispatch, props) => ({\n  keepToNumber: (value) => {\n    props.call.onToNumberChange(value);\n  },\n  onCall: () =>\n    props.call.onCall(),\n}))(DialerPanel);\n\nDialerPage.propTypes = {\n  call: PropTypes.instanceOf(Call).isRequired,\n  callingSettings: PropTypes.instanceOf(CallingSettings).isRequired,\n  connectivityMonitor: PropTypes.instanceOf(ConnectivityMonitor).isRequired,\n  locale: PropTypes.instanceOf(Locale).isRequired,\n  rateLimiter: PropTypes.instanceOf(RateLimiter).isRequired,\n};\n\nexport default DialerPage;\n"]}