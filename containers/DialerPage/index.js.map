{"version":3,"sources":["containers/DialerPage/index.js"],"names":["mapToProps","_","phone","call","callingSettings","connectivityMonitor","locale","rateLimiter","webphone","audioSettings","dialButtonVolume","dialButtonMuted","isWebphoneMode","callingMode","waitingWebphoneConnected","connecting","webphoneDisconnected","connected","currentLocale","callButtonDisabled","isIdle","connectivity","throttling","toNumber","fromNumbers","fromNumber","showSpinner","ready","mapToFunctions","regionSettings","keepToNumber","value","onToNumberChange","onCall","changeFromNumber","updateFromNumber","formatPhone","phoneNumber","areaCode","countryCode","DialerPage","default"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAaG;AAAA,wBAZDC,KAYC;AAAA,MAXCC,IAWD,cAXCA,IAWD;AAAA,MAVCC,eAUD,cAVCA,eAUD;AAAA,MATCC,mBASD,cATCA,mBASD;AAAA,MARCC,MAQD,cARCA,MAQD;AAAA,MAPCC,WAOD,cAPCA,WAOD;AAAA,MANCC,QAMD,cANCA,QAMD;AAAA,yCALCC,aAKD;AAAA,MAJGC,gBAIH,yBAJGA,gBAIH;AAAA,MAHGC,eAGH,yBAHGA,eAGH;;AACD,MAAMC,iBAAkBR,gBAAgBS,WAAhB,KAAgC,uBAAaL,QAArE;AACA,MAAMM,2BAA4BF,kBAAkBJ,QAAlB,IAA8BA,SAASO,UAAzE;AACA,MAAMC,uBAAwBJ,kBAAkBJ,QAAlB,IAA8B,CAACA,SAASS,SAAtE;AACA,SAAO;AACLC,mBAAeZ,OAAOY,aADjB;AAELL,iBAAaT,gBAAgBS,WAFxB;AAGLD,kCAHK;AAILO,wBACE,CAAChB,KAAKiB,MAAN,IACG,CAACf,oBAAoBgB,YADxB,IAEGd,YAAYe,UAFf,IAGGN,oBARA;AAULO,cAAUpB,KAAKoB,QAVV;AAWLC,iBAAapB,gBAAgBoB,WAXxB;AAYLC,gBAAYrB,gBAAgBqB,UAZvB;AAaLC,iBAAa,EACXvB,KAAKwB,KAAL,IACAvB,gBAAgBuB,KADhB,IAEArB,OAAOqB,KAFP,IAGAtB,oBAAoBsB,KAHpB,KAIC,CAACf,cAAD,IAAmB,CAACJ,QAApB,IAAgC,CAACM,wBAJlC,CADW,CAbR;AAoBLJ,sCApBK;AAqBLC;AArBK,GAAP;AAuBD;;AAED,SAASiB,cAAT,CAAwB3B,CAAxB,SAMG;AAAA,0BALDC,KAKC;AAAA,MAJCC,IAID,eAJCA,IAID;AAAA,MAHCC,eAGD,eAHCA,eAGD;AAAA,MAFCyB,cAED,eAFCA,cAED;;AACD,SAAO;AACLC,kBAAc,sBAACC,KAAD,EAAW;AACvB5B,WAAK6B,gBAAL,CAAsBD,KAAtB;AACD,KAHI;AAILE,YAAQ,kBAAM;AACZ9B,WAAK8B,MAAL;AACD,KANI;AAOLC,sBAAkB;AAAA,aAAa9B,gBAAgB+B,gBAAhB,kCAAb;AAAA,KAPb;AAQLC,iBAAa;AAAA,aAAe,4BAAa;AACvCC,gCADuC;AAEvCC,kBAAUT,kBAAkBA,eAAeS,QAFJ;AAGvCC,qBAAaV,kBAAkBA,eAAeU;AAHP,OAAb,CAAf;AAAA;AARR,GAAP;AAcD;;AAED,IAAMC,aAAa,yBACjBxC,UADiB,EAEjB4B,cAFiB,wBAAnB;;QAMEA,c,GAAAA,c;QACA5B,U,GAAAA,U;QACcyC,O,GAAdD,U","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\n\nimport DialerPanel from '../../components/DialerPanel';\n\nfunction mapToProps(_, {\n  phone: {\n    call,\n    callingSettings,\n    connectivityMonitor,\n    locale,\n    rateLimiter,\n    webphone,\n    audioSettings: {\n      dialButtonVolume,\n      dialButtonMuted,\n    },\n  }\n}) {\n  const isWebphoneMode = (callingSettings.callingMode === callingModes.webphone);\n  const waitingWebphoneConnected = (isWebphoneMode && webphone && webphone.connecting);\n  const webphoneDisconnected = (isWebphoneMode && webphone && !webphone.connected);\n  return {\n    currentLocale: locale.currentLocale,\n    callingMode: callingSettings.callingMode,\n    isWebphoneMode,\n    callButtonDisabled: (\n      !call.isIdle\n      || !connectivityMonitor.connectivity\n      || rateLimiter.throttling\n      || webphoneDisconnected\n    ),\n    toNumber: call.toNumber,\n    fromNumbers: callingSettings.fromNumbers,\n    fromNumber: callingSettings.fromNumber,\n    showSpinner: !(\n      call.ready &&\n      callingSettings.ready &&\n      locale.ready &&\n      connectivityMonitor.ready &&\n      (!isWebphoneMode || !webphone || !waitingWebphoneConnected)\n    ),\n    dialButtonVolume,\n    dialButtonMuted,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    call,\n    callingSettings,\n    regionSettings,\n  }\n}) {\n  return {\n    keepToNumber: (value) => {\n      call.onToNumberChange(value);\n    },\n    onCall: () => {\n      call.onCall();\n    },\n    changeFromNumber: (...args) => callingSettings.updateFromNumber(...args),\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings && regionSettings.areaCode,\n      countryCode: regionSettings && regionSettings.countryCode,\n    }),\n  };\n}\n\nconst DialerPage = connect(\n  mapToProps,\n  mapToFunctions,\n)(DialerPanel);\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  DialerPage as default,\n};\n"]}