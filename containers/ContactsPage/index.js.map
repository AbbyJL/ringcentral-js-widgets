{"version":3,"sources":["containers/ContactsPage/index.js"],"names":["mapToProps","_","locale","contacts","currentLocale","contactSourceNames","sourceNames","contactGroups","searchSource","sourceFilter","searchString","searchFilter","currentPage","pageNumber","showSpinner","ready","mapToFunctions","router","onItemSelect","onVisitPage","getAvatarUrl","getPresence","contact","presence","type","id","push","onSearchContact","updateFilter","ContactsPage"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAGG;AAAA,MAFDC,MAEC,QAFDA,MAEC;AAAA,MADDC,QACC,QADDA,QACC;;AACD,SAAO;AACLC,mBAAeF,OAAOE,aADjB;AAELC,wBAAoBF,SAASG,WAAT,IAAwB,EAFvC;AAGLC,mBAAeJ,SAASI,aAAT,IAA0B,EAHpC;AAILC,kBAAcL,SAASM,YAJlB;AAKLC,kBAAcP,SAASQ,YALlB;AAMLC,iBAAaT,SAASU,UANjB;AAOLC,iBAAa,EACXZ,OAAOa,KAAP,IACAZ,SAASY,KAFE;AAPR,GAAP;AAYD;;AAED,SAASC,cAAT,CAAwBf,CAAxB,SAKG;AAAA;;AAAA,MAJDgB,MAIC,SAJDA,MAIC;AAAA,MAHDd,QAGC,SAHDA,QAGC;AAAA,MAFDe,YAEC,SAFDA,YAEC;AAAA,MADDC,WACC,SADDA,WACC;;AACD,SAAO;AACLC;AAAA,6EAAc;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAY,IAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAd;;AAAA;AAAA;AAAA;AAAA,OADK;AAELC;AAAA,6EAAa,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACYnB,SAASkB,WAAT,CAAqBC,OAArB,CADZ;;AAAA;AACLC,wBADK;AAAA,kDAEJA,QAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAb;;AAAA;AAAA;AAAA;AAAA,OAFK;AAMLL,kBAAcA;AAAA,6EAAiB;AAAA,YAASM,IAAT,SAASA,IAAT;AAAA,YAAeC,EAAf,SAAeA,EAAf;AAAA;AAAA;AAAA;AAAA;AAC7BR,uBAAOS,IAAP,gBAAyBF,IAAzB,SAAiCC,EAAjC;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAjB;;AAAA;AAAA;AAAA;AAAA,OANT;AASLE,qBAAiB,gCAAgD;AAAA,UAA7CnB,YAA6C,SAA7CA,YAA6C;AAAA,UAA/BE,YAA+B,SAA/BA,YAA+B;AAAA,UAAjBG,UAAiB,SAAjBA,UAAiB;;AAC/DV,eAASyB,YAAT,CAAsB;AACpBnB,sBAAcD,YADM;AAEpBG,sBAAcD,YAFM;AAGpBG;AAHoB,OAAtB;AAKD,KAfI;AAgBLM;AAhBK,GAAP;AAkBD;;AAED,IAAMU,eAAe,yBAAQ7B,UAAR,EAAoBgB,cAApB,yBAArB;;kBAEea,Y","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport ContactsView from '../../components/ContactsView';\n\nfunction mapToProps(_, {\n  locale,\n  contacts,\n}) {\n  return {\n    currentLocale: locale.currentLocale,\n    contactSourceNames: contacts.sourceNames || [],\n    contactGroups: contacts.contactGroups || [],\n    searchSource: contacts.sourceFilter,\n    searchString: contacts.searchFilter,\n    currentPage: contacts.pageNumber,\n    showSpinner: !(\n      locale.ready &&\n      contacts.ready\n    ),\n  };\n}\n\nfunction mapToFunctions(_, {\n  router,\n  contacts,\n  onItemSelect,\n  onVisitPage,\n}) {\n  return {\n    getAvatarUrl: async () => null,\n    getPresence: async (contact) => {\n      const presence = await contacts.getPresence(contact);\n      return presence;\n    },\n    onItemSelect: onItemSelect || (async ({ type, id }) => {\n      router.push(`/contacts/${type}/${id}`);\n    }),\n    onSearchContact: ({ searchSource, searchString, pageNumber }) => {\n      contacts.updateFilter({\n        sourceFilter: searchSource,\n        searchFilter: searchString,\n        pageNumber\n      });\n    },\n    onVisitPage,\n  };\n}\n\nconst ContactsPage = connect(mapToProps, mapToFunctions)(ContactsView);\n\nexport default ContactsPage;\n"]}