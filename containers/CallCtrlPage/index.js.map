{"version":3,"sources":["containers/CallCtrlPage/index.js"],"names":["CallCtrlPage","props","state","selectedMatcherIndex","avatarUrl","onSelectMatcherName","option","nameMatches","findIndex","match","id","setState","contact","updateSessionMatchedContact","session","getAvatarUrl","then","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onHangup","onKeyPadChange","sendDTMF","value","onFlip","onTransfer","onPark","_mounted","_updateAvatarAndMatchIndex","nextProps","contactMatch","phoneNumber","direction","outbound","to","from","fallbackUserName","inbound","getString","currentLocale","backButtonLabel","formatPhone","callStatus","startTime","isOnMute","isOnHold","isOnFlip","isOnTransfer","recordStatus","onBackButtonClick","onAdd","areaCode","countryCode","brand","showContactDisplayPlaceholder","flipNumbers","calls","children","propTypes","shape","string","number","bool","object","isRequired","func","node","array","defaultProps","undefined","mapToProps","_","webphone","locale","contactMatcher","regionSettings","forwardingNumber","callMonitor","currentSession","activeSession","contactMapping","dataMapping","fromMatches","toMatches","fullName","mapToFunctions","hangup","sessionId","mute","unmute","hold","unhold","startRecord","stopRecord","flipNumber","flip","transferNumber","transfer","park","CallCtrlContainer","instanceOf"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport Webphone from 'ringcentral-integration/modules/Webphone';\nimport Brand from 'ringcentral-integration/modules/Brand';\nimport Locale from 'ringcentral-integration/modules/Locale';\nimport RegionSettings from 'ringcentral-integration/modules/RegionSettings';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport ForwardingNumber from 'ringcentral-integration/modules/ForwardingNumber';\n\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\n\nimport i18n from './i18n';\n\nclass CallCtrlPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n    };\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n\n    this.onMute = () =>\n      this.props.onMute(this.props.session.id);\n    this.onUnmute = () =>\n      this.props.onUnmute(this.props.session.id);\n    this.onHold = () =>\n      this.props.onHold(this.props.session.id);\n    this.onUnhold = () =>\n      this.props.onUnhold(this.props.session.id);\n    this.onRecord = () =>\n      this.props.onRecord(this.props.session.id);\n    this.onStopRecord = () =>\n      this.props.onStopRecord(this.props.session.id);\n    this.onHangup = () =>\n      this.props.onHangup(this.props.session.id);\n    this.onKeyPadChange = value =>\n      this.props.sendDTMF(value, this.props.session.id);\n    this.onFlip = value =>\n      this.props.onFlip(value, this.props.session.id);\n    this.onTransfer = value =>\n      this.props.onTransfer(value, this.props.session.id);\n    this.onPark = () =>\n      this.props.onPark(this.props.session.id);\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.session.id !== nextProps.session.id) {\n      this._updateAvatarAndMatchIndex(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let contact = props.session.contactMatch;\n    let selectedMatcherIndex = 0;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(match =>\n        match.id === contact.id\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  render() {\n    const session = this.props.session;\n    if (!session.id) {\n      return null;\n    }\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n    let fallbackUserName;\n    if (session.direction === callDirections.inbound && session.from === 'anonymous') {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n    // The label of back button is customizable\n    // the property `backButtonLabel` should be internationalizational\n    const backButtonLabel = this.props.backButtonLabel\n      ? this.props.backButtonLabel\n      : i18n.getString('activeCalls', this.props.currentLocale);\n    return (\n      <CallCtrlPanel\n        backButtonLabel={backButtonLabel}\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={phoneNumber}\n        sessionId={session.id}\n        callStatus={session.callStatus}\n        startTime={session.startTime}\n        isOnMute={session.isOnMute}\n        isOnHold={session.isOnHold}\n        isOnFlip={session.isOnFlip}\n        isOnTransfer={session.isOnTransfer}\n        recordStatus={session.recordStatus}\n        onBackButtonClick={this.props.onBackButtonClick}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onRecord={this.onRecord}\n        onStopRecord={this.onStopRecord}\n        onKeyPadChange={this.onKeyPadChange}\n        onHangup={this.onHangup}\n        onAdd={this.props.onAdd}\n        onFlip={this.onFlip}\n        onTransfer={this.onTransfer}\n        onPark={this.onPark}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        flipNumbers={this.props.flipNumbers}\n        calls={this.props.calls}\n      >\n        {this.props.children}\n      </CallCtrlPanel>\n    );\n  }\n}\n\nCallCtrlPage.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnFlip: PropTypes.bool,\n    isOnTransfer: PropTypes.bool,\n    recordStatus: PropTypes.string,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  sendDTMF: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  onFlip: PropTypes.func.isRequired,\n  onPark: PropTypes.func.isRequired,\n  onTransfer: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  backButtonLabel: PropTypes.string,\n  brand: PropTypes.string.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n  calls: PropTypes.array.isRequired,\n};\n\nCallCtrlPage.defaultProps = {\n  children: undefined,\n  backButtonLabel: null,\n};\n\nfunction mapToProps(_, {\n  webphone,\n  locale,\n  contactMatcher,\n  regionSettings,\n  brand,\n  forwardingNumber,\n  callMonitor,\n}) {\n  const currentSession = webphone.activeSession || {};\n  const contactMapping = contactMatcher && contactMatcher.dataMapping;\n  const fromMatches = (contactMapping && contactMapping[currentSession.from]) || [];\n  const toMatches = (contactMapping && contactMapping[currentSession.to]) || [];\n  const nameMatches =\n    currentSession.direction === callDirections.outbound ? toMatches : fromMatches;\n  return {\n    brand: brand.fullName,\n    nameMatches,\n    currentLocale: locale.currentLocale,\n    session: currentSession,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    flipNumbers: forwardingNumber.flipNumbers,\n    calls: callMonitor.calls\n  };\n}\n\nfunction mapToFunctions(_, {\n  webphone,\n  regionSettings,\n  getAvatarUrl,\n  onBackButtonClick,\n  onAdd,\n}) {\n  return {\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    onHangup: sessionId => webphone.hangup(sessionId),\n    onMute: sessionId => webphone.mute(sessionId),\n    onUnmute: sessionId => webphone.unmute(sessionId),\n    onHold: sessionId => webphone.hold(sessionId),\n    onUnhold: sessionId => webphone.unhold(sessionId),\n    onRecord: sessionId => webphone.startRecord(sessionId),\n    onStopRecord: sessionId => webphone.stopRecord(sessionId),\n    sendDTMF: (value, sessionId) => webphone.sendDTMF(value, sessionId),\n    updateSessionMatchedContact: (sessionId, contact) =>\n      webphone.updateSessionMatchedContact(sessionId, contact),\n    getAvatarUrl,\n    onBackButtonClick,\n    onAdd,\n    onFlip: (flipNumber, sessionId) => webphone.flip(flipNumber, sessionId),\n    onTransfer: (transferNumber, sessionId) => webphone.transfer(transferNumber, sessionId),\n    onPark: sessionId => webphone.park(sessionId),\n  };\n}\n\nconst CallCtrlContainer = connect(\n  mapToProps,\n  mapToFunctions,\n)(CallCtrlPage);\n\nCallCtrlContainer.propTypes = {\n  webphone: PropTypes.instanceOf(Webphone).isRequired,\n  locale: PropTypes.instanceOf(Locale).isRequired,\n  brand: PropTypes.instanceOf(Brand).isRequired,\n  regionSettings: PropTypes.instanceOf(RegionSettings).isRequired,\n  forwardingNumber: PropTypes.instanceOf(ForwardingNumber).isRequired,\n  getAvatarUrl: PropTypes.func,\n  onBackButtonClick: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  backButtonLabel: PropTypes.string,\n  children: PropTypes.node,\n  showContactDisplayPlaceholder: PropTypes.bool,\n};\n\nCallCtrlContainer.defaultProps = {\n  getAvatarUrl: () => null,\n  showContactDisplayPlaceholder: false,\n  children: undefined,\n};\n\nexport default CallCtrlContainer;\n"]}