{"version":3,"sources":["containers/MessagesPage/index.js"],"names":["MessagesPanel","currentLocale","showSpinner","showTitle","props","header","getString","content","contentWithHeader","root","propTypes","string","isRequired","bool","showContactDisplayPlaceholder","sourceIcons","object","defaultProps","undefined","mapToProps","_","brand","locale","messages","contactMatcher","dateTimeFormat","regionSettings","rolesAndPermissions","call","conversationLogger","connectivityMonitor","rateLimiter","enableContactFallback","fullName","conversations","filteredConversations","areaCode","countryCode","disableLinks","connectivity","throttling","disableClickToDial","isIdle","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","loggingMap","ready","searchInput","autoLog","mapToFunctions","dateTimeFormatter","formatDateTime","router","dialerRoute","onCreateContact","onLogConversation","isLoggedContact","conversationDetailRoute","onViewContact","contact","id","type","push","phoneNumber","name","entityType","hasMatchNumber","ignoreCache","forceMatchNumber","onClickToDial","onToNumberChange","onCall","redirect","options","logConversation","onSearchInputChange","e","updateSearchInput","currentTarget","value","showConversationDetail","conversationId","replace"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport Header from '../../components/Header';\nimport SpinnerOverlay from '../../components/SpinnerOverlay';\nimport MessageList from '../../components/MessageList';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction MessagesPanel({\n  currentLocale,\n  showSpinner,\n  showTitle,\n  ...props,\n}) {\n  const header = showTitle ?\n    (<Header>{i18n.getString('title', currentLocale)}</Header>) :\n    null;\n  const content = showSpinner ?\n    <SpinnerOverlay /> :\n    (\n      <MessageList\n        className={classnames(\n          styles.content,\n          showTitle && styles.contentWithHeader\n        )}\n        {...props}\n        currentLocale={currentLocale}\n      />\n    );\n  return (\n    <div className={styles.root}>\n      {header}\n      {content}\n    </div>\n  );\n}\n\nMessagesPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n};\nMessagesPanel.defaultProps = {\n  showSpinner: false,\n  showTitle: false,\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n};\n\nfunction mapToProps(_, {\n  brand,\n  locale,\n  messages,\n  contactMatcher,\n  dateTimeFormat,\n  regionSettings,\n  rolesAndPermissions,\n  call,\n  conversationLogger,\n  connectivityMonitor,\n  rateLimiter,\n  showTitle = false,\n  enableContactFallback = false,\n}) {\n  return ({\n    showTitle,\n    enableContactFallback,\n    brand: brand.fullName,\n    currentLocale: locale.currentLocale,\n    conversations: messages.filteredConversations,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    disableLinks: (\n      !connectivityMonitor.connectivity ||\n      rateLimiter.throttling\n    ),\n    disableClickToDial: !(call && call.isIdle),\n    outboundSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.OutboundSMS\n    ),\n    internalSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.InternalSMS\n    ),\n    loggingMap: (conversationLogger && conversationLogger.loggingMap),\n    showSpinner: !(\n      locale.ready &&\n      messages.ready &&\n      (!contactMatcher || contactMatcher.ready) &&\n      dateTimeFormat.ready &&\n      regionSettings.ready &&\n      rolesAndPermissions.ready &&\n      connectivityMonitor.ready &&\n      rateLimiter.ready &&\n      (!rolesAndPermissions || rolesAndPermissions.ready) &&\n      (!call || call.ready) &&\n      (!conversationLogger || conversationLogger.ready)\n    ),\n    searchInput: messages.searchInput,\n    autoLog: !!(conversationLogger && conversationLogger.autoLog),\n  });\n}\n\nfunction mapToFunctions(_, {\n  dateTimeFormat,\n  dateTimeFormatter = (...args) => dateTimeFormat.formatDateTime(...args),\n  messages,\n  conversationLogger,\n  contactMatcher,\n  call,\n  router,\n  dialerRoute = '/dialer',\n  onCreateContact,\n  onLogConversation,\n  isLoggedContact,\n  conversationDetailRoute = '/conversations/{conversationId}',\n}) {\n  return {\n    dateTimeFormatter,\n    onViewContact: ({ contact }) => {\n      const id = contact.id;\n      const type = contact.type;\n      router.push(`/contacts/${type}/${id}?direct=true`);\n    },\n    onCreateContact: onCreateContact ?\n    async ({ phoneNumber, name, entityType }) => {\n      const hasMatchNumber = await contactMatcher.hasMatchNumber({\n        phoneNumber,\n        ignoreCache: true\n      });\n      // console.debug('confirm hasMatchNumber:', hasMatchNumber);\n      if (!hasMatchNumber) {\n        await onCreateContact({ phoneNumber, name, entityType });\n        await contactMatcher.forceMatchNumber({ phoneNumber });\n      }\n    } :\n    undefined,\n    onClickToDial: call ?\n    (phoneNumber) => {\n      if (call.isIdle) {\n        router.push(dialerRoute);\n        call.onToNumberChange(phoneNumber);\n        call.onCall();\n      }\n    } :\n    undefined,\n    isLoggedContact,\n    onLogConversation: onLogConversation ||\n    (conversationLogger && (async ({ redirect = true, ...options }) => {\n      await conversationLogger.logConversation({\n        ...options,\n        redirect,\n      });\n    })),\n    onSearchInputChange: (e) => {\n      messages.updateSearchInput(e.currentTarget.value);\n    },\n    showConversationDetail(conversationId) {\n      router.push(\n        conversationDetailRoute.replace('{conversationId}', conversationId)\n      );\n    },\n  };\n}\nexport default connect(\n  mapToProps,\n  mapToFunctions,\n)(MessagesPanel);\n"]}