{"version":3,"sources":["containers/RecentActivityContainer/index.js"],"names":["getTabs","ready","currentLocale","dateTimeFormatter","navigateTo","recentMessages","recentCalls","currentContact","messages","calls","unreadMessageCounts","id","contactId","icon","label","getString","path","isActive","view","getData","cleanUp","composeText","noticeCounts","isMessagesLoaded","fromLocal","getMessages","cleanUpMessages","active","isCallsLoaded","getCalls","cleanUpCalls","mapToProps","_","locale","dateTimeFormat","formatDateTime","contactMatcher","getSession","session","contactMatch","contactMapping","dataMapping","phoneNumber","direction","outbound","to","from","length","title","showSpinner","tabs","defaultTab"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport RecentActivityPanel from '../../components/RecentActivityPanel';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport RecentActivityMessages from '../../components/RecentActivityMessages';\nimport RecentActivityCalls from '../../components/RecentActivityCalls';\nimport VoicemailIcon from '../../assets/images/VoicemailIcon.svg';\nimport FaxIcon from '../../assets/images/Fax.svg';\nimport i18n from './i18n';\n\nfunction getTabs({\n  ready,\n  currentLocale,\n  dateTimeFormatter,\n  navigateTo,\n  recentMessages,\n  recentCalls,\n  currentContact,\n}) {\n  if (!ready) return [];\n  let messages = [];\n  let calls = [];\n  let unreadMessageCounts = 0;\n  if (currentContact && currentContact.id) {\n    const contactId = currentContact.id;\n    if (recentMessages.messages[contactId]) {\n      messages = recentMessages.messages[contactId];\n    }\n    if (recentCalls.calls[contactId]) {\n      calls = recentCalls.calls[contactId];\n    }\n    if (recentMessages.unreadMessageCounts[contactId]) {\n      unreadMessageCounts = recentMessages.unreadMessageCounts[contactId];\n    }\n  }\n  return [\n    {\n      icon: <VoicemailIcon width={21} height={21} />,\n      label: i18n.getString('voicemail', currentLocale),\n      path: 'voicemails',\n      isActive: path => path === 'voicemails',\n      view: null,\n      getData: () => {},\n      cleanUp: () => {}\n    },\n    {\n      icon: <span className={dynamicsFont.composeText} />,\n      label: i18n.getString('text', currentLocale),\n      path: 'recentMessages',\n      noticeCounts: unreadMessageCounts,\n      isActive: path => path === 'recentMessages',\n      view: (\n        <RecentActivityMessages\n          messages={messages}\n          navigateTo={navigateTo}\n          dateTimeFormatter={dateTimeFormatter}\n          currentLocale={currentLocale}\n          isMessagesLoaded={recentMessages.isMessagesLoaded}\n        />\n      ),\n      getData: (fromLocal) => {\n        recentMessages.getMessages(currentContact, fromLocal);\n      },\n      cleanUp: () => recentMessages.cleanUpMessages(currentContact)\n    },\n    {\n      icon: <FaxIcon width={21} height={21} />,\n      label: i18n.getString('fax', currentLocale),\n      path: 'faxes',\n      isActive: path => path === 'faxes',\n      view: null,\n      getData: () => {},\n      cleanUp: () => {}\n    },\n    {\n      icon: <span className={dynamicsFont.active} />,\n      label: i18n.getString('call', currentLocale),\n      path: 'recentCalls',\n      isActive: path => path === 'recentCalls',\n      view: (\n        <RecentActivityCalls\n          calls={calls}\n          dateTimeFormatter={dateTimeFormatter}\n          currentLocale={currentLocale}\n          isCallsLoaded={recentCalls.isCallsLoaded}\n        />\n      ),\n      getData: () => {\n        recentCalls.getCalls(currentContact);\n      },\n      cleanUp: () => recentCalls.cleanUpCalls(currentContact)\n    },\n  ];\n}\n\nfunction mapToProps(_, {\n  locale,\n  currentLocale = locale.currentLocale,\n  dateTimeFormat,\n  navigateTo,\n  dateTimeFormatter = (...args) => dateTimeFormat.formatDateTime(...args),\n  recentMessages,\n  recentCalls,\n  contactMatcher,\n  getSession\n}) {\n  const session = getSession();\n  let currentContact = session.contactMatch;\n  const contactMapping = contactMatcher && contactMatcher.dataMapping;\n  const phoneNumber = session.direction === callDirections.outbound ?\n    session.to : session.from;\n  if (!currentContact) {\n    currentContact = contactMapping && contactMapping[phoneNumber];\n    if (currentContact && currentContact.length >= 1) {\n      currentContact = currentContact[0];\n    }\n  }\n  const ready =\n    dateTimeFormat.ready &&\n    locale.ready &&\n    contactMatcher.ready &&\n    recentMessages.ready &&\n    recentCalls.ready;\n  return {\n    currentLocale,\n    title: i18n.getString('recentActivities', locale.currentLocale),\n    showSpinner: !ready,\n    currentContact,\n    calls: recentCalls.calls || [],\n    tabs: getTabs({\n      ready,\n      currentLocale,\n      dateTimeFormatter,\n      navigateTo,\n      currentContact,\n      recentMessages,\n      recentCalls\n    }),\n    defaultTab: 'recentCalls'\n  };\n}\n\nexport default connect(mapToProps)(RecentActivityPanel);\n"]}