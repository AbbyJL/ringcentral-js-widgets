{"version":3,"sources":["containers/ConferencePage/index.js"],"names":["mapToProps","_","phone","conference","regionSettings","locale","currentLocale","localeReady","ready","composeText","serviceFeatures","extensionInfo","brand","data","hostCode","participantCode","allowJoinBeforeHost","phoneNumbers","dialInNumbers","map","p","_region","i18n","getString","country","isoCode","region","location","phoneNumber","disableTxtBtn","SMS","enabled","Pager","dialInNumber","additionalNumbers","countryCode","areaCode","code","name","showSpinner","mapToFunctions","routerInteraction","call","alert","msg","warning","message","updateDialInNumber","updateAdditionalNumbers","additionalDialInNumbers","inviteWithText","text","updateMessageText","onInviteWithText","push","joinAsHost","onJoinAsHost","history","onAllowJoinBeforeHostChange","updateEnableJoinBeforeHost","showHelpCommands","ConferencePage","ConferencePanel","default"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport ConferencePanel from '../../components/ConferencePanel';\nimport withPhone from '../../lib/withPhone';\nimport i18n from './i18n';\n\nfunction mapToProps(_, {\n  phone: {\n    conference,\n    regionSettings,\n    locale: {\n      currentLocale,\n      ready: localeReady\n    },\n    composeText,\n    extensionInfo: { serviceFeatures },\n    brand\n  },\n}) {\n  const {\n    hostCode = '',\n    participantCode = '',\n    allowJoinBeforeHost = false,\n    phoneNumbers = [],\n  } = conference.data || {};\n  const dialInNumbers = phoneNumbers.map((p) => {\n    const _region = i18n.getString(`conference_${p.country.isoCode}`, currentLocale);\n    // only show the provinces of canada\n    return {\n      region: p.location && p.country.isoCode === 'CA'\n        ? `${_region}, ${p.location}`\n        : _region,\n      phoneNumber: p.phoneNumber\n    };\n  });\n  const disableTxtBtn = (\n    (!serviceFeatures.SMS || !serviceFeatures.SMS.enabled) &&\n    (!serviceFeatures.Pager || !serviceFeatures.Pager.enabled)\n  );\n  return {\n    dialInNumbers,\n    dialInNumber: conference.dialInNumber || '',\n    hostCode,\n    participantCode,\n    allowJoinBeforeHost,\n    additionalNumbers: conference.additionalNumbers,\n    disableTxtBtn,\n    countryCode: regionSettings.countryCode,\n    areaCode: regionSettings.areaCode,\n    currentLocale,\n    brand: {\n      code: brand.code,\n      name: brand.name\n    },\n    showSpinner: !(\n      conference.ready &&\n      regionSettings.ready &&\n      localeReady &&\n      composeText.ready\n    ),\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    conference,\n    composeText,\n    routerInteraction,\n    call,\n    alert\n  },\n}) {\n  return {\n    alert: (msg) => {\n      alert.warning({ message: msg });\n    },\n    updateDialInNumber: (dialInNumber) => {\n      conference.updateDialInNumber(dialInNumber);\n    },\n    updateAdditionalNumbers: (additionalDialInNumbers) => {\n      conference.updateAdditionalNumbers(additionalDialInNumbers);\n    },\n    inviteWithText: (text) => {\n      composeText.updateMessageText(text);\n      // for track\n      conference.onInviteWithText();\n      routerInteraction.push('/composeText');\n    },\n    joinAsHost: (phoneNumber) => {\n      // for track\n      conference.onJoinAsHost();\n      routerInteraction.history.push('/dialer');\n      call.call({ phoneNumber });\n    },\n    onAllowJoinBeforeHostChange: (allowJoinBeforeHost) => {\n      conference.updateEnableJoinBeforeHost(allowJoinBeforeHost);\n    },\n    showHelpCommands: () => {\n      routerInteraction.push('/conference/commands');\n    }\n  };\n}\n\n\nconst ConferencePage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(ConferencePanel));\n\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  ConferencePage as default,\n};\n"]}