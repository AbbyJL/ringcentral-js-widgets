{"version":3,"sources":["containers/ConferencePage/index.js"],"names":["mapToProps","_","phone","conference","regionSettings","locale","composeText","data","hostCode","participantCode","allowJoinBeforeHost","dialInNumbers","phoneNumbers","p","push","region","country","name","phoneNumber","dialInNumber","additionalNumbers","countryCode","areaCode","currentLocale","showSpinner","ready","mapToFunctions","routerInteraction","call","updateDialInNumber","updateAdditionalNumbers","additionalDialInNumbers","inviteWithText","text","updateMessageText","joinAsHost","history","onAllowJoinBeforeHostChange","updateEnableJoinBeforeHost","showHelpCommands","ConferencePage","default"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAOG;AAAA,wBANDC,KAMC;AAAA,MALCC,UAKD,cALCA,UAKD;AAAA,MAJCC,cAID,cAJCA,cAID;AAAA,MAHCC,MAGD,cAHCA,MAGD;AAAA,MAFCC,WAED,cAFCA,WAED;AAAA,MACOC,IADP,GACgBJ,UADhB,CACOI,IADP;AAAA,MAEOC,QAFP,GAE0DD,IAF1D,CAEOC,QAFP;AAAA,MAEiBC,eAFjB,GAE0DF,IAF1D,CAEiBE,eAFjB;AAAA,MAEkCC,mBAFlC,GAE0DH,IAF1D,CAEkCG,mBAFlC;;AAGD,MAAMC,gBAAgB,EAAtB;AAHC;AAAA;AAAA;;AAAA;AAID,oDAAgBJ,KAAKK,YAArB,4GAAmC;AAAA,UAAxBC,CAAwB;;AACjCF,oBAAcG,IAAd,CAAmB;AACjBC,gBAAQF,EAAEG,OAAF,CAAUC,IADD;AAEjBC,qBAAaL,EAAEK;AAFE,OAAnB;AAID;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUD,SAAO;AACLP,gCADK;AAELQ,kBAAchB,WAAWgB,YAFpB;AAGLX,sBAHK;AAILC,oCAJK;AAKLC,4CALK;AAMLU,uBAAmBjB,WAAWiB,iBANzB;AAOLC,iBAAajB,eAAeiB,WAPvB;AAQLC,cAAUlB,eAAekB,QARpB;AASLC,mBAAelB,OAAOkB,aATjB;AAULC,iBAAa,EACXrB,WAAWsB,KAAX,IACArB,eAAeqB,KADf,IAEApB,OAAOoB,KAFP,IAGAnB,YAAYmB,KAJD;AAVR,GAAP;AAiBD;;AAED,SAASC,cAAT,CAAwBzB,CAAxB,SAOG;AAAA,0BANDC,KAMC;AAAA,MALCC,UAKD,eALCA,UAKD;AAAA,MAJCG,WAID,eAJCA,WAID;AAAA,MAHCqB,iBAGD,eAHCA,iBAGD;AAAA,MAFCC,IAED,eAFCA,IAED;;AACD,SAAO;AACLC,wBAAoB,4BAACV,YAAD,EAAkB;AACpChB,iBAAW0B,kBAAX,CAA8BV,YAA9B;AACD,KAHI;AAILW,6BAAyB,iCAACC,uBAAD,EAA6B;AACpD5B,iBAAW2B,uBAAX,CAAmCC,uBAAnC;AACD,KANI;AAOLC,oBAAgB,wBAACC,IAAD,EAAU;AACxB3B,kBAAY4B,iBAAZ,CAA8BD,IAA9B;AACAN,wBAAkBb,IAAlB,CAAuB,cAAvB;AACD,KAVI;AAWLqB,gBAAY,oBAACjB,WAAD,EAAiB;AAC3BS,wBAAkBS,OAAlB,CAA0BtB,IAA1B,CAA+B,SAA/B;AACAc,WAAKA,IAAL,CAAU,EAAEV,wBAAF,EAAV;AACD,KAdI;AAeLmB,iCAA6B,qCAAC3B,mBAAD,EAAyB;AACpDP,iBAAWmC,0BAAX,CAAsC5B,mBAAtC;AACD,KAjBI;AAkBL6B,sBAAkB,4BAAM;AACtBZ,wBAAkBb,IAAlB,CAAuB,sBAAvB;AACD;AApBI,GAAP;AAsBD;;AAGD,IAAM0B,iBAAiB,yBAAU,yBAC/BxC,UAD+B,EAE/B0B,cAF+B,4BAAV,CAAvB;;QAOEA,c,GAAAA,c;QACA1B,U,GAAAA,U;QACkByC,O,GAAlBD,c","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport ConferencePanel from '../../components/ConferencePanel';\nimport withPhone from '../../lib/withPhone';\n\nfunction mapToProps(_, {\n  phone: {\n    conference,\n    regionSettings,\n    locale,\n    composeText,\n  },\n}) {\n  const { data } = conference;\n  const { hostCode, participantCode, allowJoinBeforeHost } = data;\n  const dialInNumbers = [];\n  for (const p of data.phoneNumbers) {\n    dialInNumbers.push({\n      region: p.country.name,\n      phoneNumber: p.phoneNumber\n    });\n  }\n  return {\n    dialInNumbers,\n    dialInNumber: conference.dialInNumber,\n    hostCode,\n    participantCode,\n    allowJoinBeforeHost,\n    additionalNumbers: conference.additionalNumbers,\n    countryCode: regionSettings.countryCode,\n    areaCode: regionSettings.areaCode,\n    currentLocale: locale.currentLocale,\n    showSpinner: !(\n      conference.ready &&\n      regionSettings.ready &&\n      locale.ready &&\n      composeText.ready\n    ),\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    conference,\n    composeText,\n    routerInteraction,\n    call,\n  },\n}) {\n  return {\n    updateDialInNumber: (dialInNumber) => {\n      conference.updateDialInNumber(dialInNumber);\n    },\n    updateAdditionalNumbers: (additionalDialInNumbers) => {\n      conference.updateAdditionalNumbers(additionalDialInNumbers);\n    },\n    inviteWithText: (text) => {\n      composeText.updateMessageText(text);\n      routerInteraction.push('/composeText');\n    },\n    joinAsHost: (phoneNumber) => {\n      routerInteraction.history.push('/dialer');\n      call.call({ phoneNumber });\n    },\n    onAllowJoinBeforeHostChange: (allowJoinBeforeHost) => {\n      conference.updateEnableJoinBeforeHost(allowJoinBeforeHost);\n    },\n    showHelpCommands: () => {\n      routerInteraction.push('/conference/commands');\n    }\n  };\n}\n\n\nconst ConferencePage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(ConferencePanel));\n\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  ConferencePage as default,\n};\n"]}