{"version":3,"sources":["containers/ConferencePage/index.js"],"names":["mapToProps","_","phone","conference","regionSettings","locale","composeText","serviceFeatures","extensionInfo","brand","data","hostCode","participantCode","allowJoinBeforeHost","dialInNumbers","phoneNumbers","p","push","region","country","name","phoneNumber","disableTxtBtn","SMS","enabled","Pager","dialInNumber","additionalNumbers","countryCode","areaCode","currentLocale","code","showSpinner","ready","mapToFunctions","routerInteraction","call","alert","msg","warning","message","updateDialInNumber","updateAdditionalNumbers","additionalDialInNumbers","inviteWithText","text","updateMessageText","joinAsHost","history","onAllowJoinBeforeHostChange","updateEnableJoinBeforeHost","showHelpCommands","ConferencePage","default"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport ConferencePanel from '../../components/ConferencePanel';\nimport withPhone from '../../lib/withPhone';\n\nfunction mapToProps(_, {\n  phone: {\n    conference,\n    regionSettings,\n    locale,\n    composeText,\n    extensionInfo: { serviceFeatures },\n    brand\n  },\n}) {\n  const { data } = conference;\n  const { hostCode, participantCode, allowJoinBeforeHost } = data;\n  const dialInNumbers = [];\n  for (const p of data.phoneNumbers) {\n    dialInNumbers.push({\n      region: p.country.name,\n      phoneNumber: p.phoneNumber\n    });\n  }\n  const disableTxtBtn = !serviceFeatures.SMS.enabled && !serviceFeatures.Pager.enabled;\n  return {\n    dialInNumbers,\n    dialInNumber: conference.dialInNumber,\n    hostCode,\n    participantCode,\n    allowJoinBeforeHost,\n    additionalNumbers: conference.additionalNumbers,\n    disableTxtBtn,\n    countryCode: regionSettings.countryCode,\n    areaCode: regionSettings.areaCode,\n    currentLocale: locale.currentLocale,\n    brand: {\n      code: brand.code,\n      name: brand.name\n    },\n    showSpinner: !(\n      conference.ready &&\n      regionSettings.ready &&\n      locale.ready &&\n      composeText.ready\n    ),\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    conference,\n    composeText,\n    routerInteraction,\n    call,\n    alert\n  },\n}) {\n  return {\n    alert: (msg) => {\n      alert.warning({ message: msg });\n    },\n    updateDialInNumber: (dialInNumber) => {\n      conference.updateDialInNumber(dialInNumber);\n    },\n    updateAdditionalNumbers: (additionalDialInNumbers) => {\n      conference.updateAdditionalNumbers(additionalDialInNumbers);\n    },\n    inviteWithText: (text) => {\n      composeText.updateMessageText(text);\n      routerInteraction.push('/composeText');\n    },\n    joinAsHost: (phoneNumber) => {\n      routerInteraction.history.push('/dialer');\n      call.call({ phoneNumber });\n    },\n    onAllowJoinBeforeHostChange: (allowJoinBeforeHost) => {\n      conference.updateEnableJoinBeforeHost(allowJoinBeforeHost);\n    },\n    showHelpCommands: () => {\n      routerInteraction.push('/conference/commands');\n    }\n  };\n}\n\n\nconst ConferencePage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(ConferencePanel));\n\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  ConferencePage as default,\n};\n"]}