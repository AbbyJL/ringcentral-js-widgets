{"version":3,"sources":["containers/ConferencePage/index.js"],"names":["mapToProps","_","phone","conference","regionSettings","locale","composeText","serviceFeatures","extensionInfo","brand","currentLocale","data","hostCode","participantCode","allowJoinBeforeHost","dialInNumbers","phoneNumbers","p","region","getString","country","isoCode","location","push","phoneNumber","disableTxtBtn","SMS","enabled","Pager","dialInNumber","additionalNumbers","countryCode","areaCode","code","name","showSpinner","ready","mapToFunctions","routerInteraction","call","alert","msg","warning","message","updateDialInNumber","updateAdditionalNumbers","additionalDialInNumbers","inviteWithText","text","updateMessageText","onInviteWithText","joinAsHost","onJoinAsHost","history","onAllowJoinBeforeHostChange","updateEnableJoinBeforeHost","showHelpCommands","ConferencePage","default"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QASG;AAAA,wBARDC,KAQC;AAAA,MAPCC,UAOD,cAPCA,UAOD;AAAA,MANCC,cAMD,cANCA,cAMD;AAAA,MALCC,MAKD,cALCA,MAKD;AAAA,MAJCC,WAID,cAJCA,WAID;AAAA,MAHkBC,eAGlB,cAHCC,aAGD,CAHkBD,eAGlB;AAAA,MAFCE,KAED,cAFCA,KAED;;AACD,MAAMC,gBAAgBL,OAAOK,aAA7B;AADC,MAEOC,IAFP,GAEgBR,UAFhB,CAEOQ,IAFP;AAAA,MAGOC,QAHP,GAG0DD,IAH1D,CAGOC,QAHP;AAAA,MAGiBC,eAHjB,GAG0DF,IAH1D,CAGiBE,eAHjB;AAAA,MAGkCC,mBAHlC,GAG0DH,IAH1D,CAGkCG,mBAHlC;;AAID,MAAMC,gBAAgB,EAAtB;AAJC;AAAA;AAAA;;AAAA;AAKD,oDAAgBJ,KAAKK,YAArB,4GAAmC;AAAA,UAAxBC,CAAwB;;AACjC,UAAIC,SAAS,eAAKC,SAAL,CAAeF,EAAEG,OAAF,CAAUC,OAAzB,EAAkCX,aAAlC,CAAb;AACA,UAAIO,EAAEK,QAAN,EAAgB;AACdJ,kBAAU,IAAV;AACAA,kBAAUD,EAAEK,QAAZ;AACD;AACDP,oBAAcQ,IAAd,CAAmB;AACjBL,sBADiB;AAEjBM,qBAAaP,EAAEO;AAFE,OAAnB;AAID;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBD,MAAMC,gBAAgB,CAAClB,gBAAgBmB,GAAhB,CAAoBC,OAArB,IAAgC,CAACpB,gBAAgBqB,KAAhB,CAAsBD,OAA7E;AACA,SAAO;AACLZ,gCADK;AAELc,kBAAc1B,WAAW0B,YAFpB;AAGLjB,sBAHK;AAILC,oCAJK;AAKLC,4CALK;AAMLgB,uBAAmB3B,WAAW2B,iBANzB;AAOLL,gCAPK;AAQLM,iBAAa3B,eAAe2B,WARvB;AASLC,cAAU5B,eAAe4B,QATpB;AAULtB,gCAVK;AAWLD,WAAO;AACLwB,YAAMxB,MAAMwB,IADP;AAELC,YAAMzB,MAAMyB;AAFP,KAXF;AAeLC,iBAAa,EACXhC,WAAWiC,KAAX,IACAhC,eAAegC,KADf,IAEA/B,OAAO+B,KAFP,IAGA9B,YAAY8B,KAJD;AAfR,GAAP;AAsBD;;AAED,SAASC,cAAT,CAAwBpC,CAAxB,SAQG;AAAA,0BAPDC,KAOC;AAAA,MANCC,UAMD,eANCA,UAMD;AAAA,MALCG,WAKD,eALCA,WAKD;AAAA,MAJCgC,iBAID,eAJCA,iBAID;AAAA,MAHCC,IAGD,eAHCA,IAGD;AAAA,MAFCC,MAED,eAFCA,KAED;;AACD,SAAO;AACLA,WAAO,eAACC,GAAD,EAAS;AACdD,aAAME,OAAN,CAAc,EAAEC,SAASF,GAAX,EAAd;AACD,KAHI;AAILG,wBAAoB,4BAACf,YAAD,EAAkB;AACpC1B,iBAAWyC,kBAAX,CAA8Bf,YAA9B;AACD,KANI;AAOLgB,6BAAyB,iCAACC,uBAAD,EAA6B;AACpD3C,iBAAW0C,uBAAX,CAAmCC,uBAAnC;AACD,KATI;AAULC,oBAAgB,wBAACC,IAAD,EAAU;AACxB1C,kBAAY2C,iBAAZ,CAA8BD,IAA9B;AACA;AACA7C,iBAAW+C,gBAAX;AACAZ,wBAAkBf,IAAlB,CAAuB,cAAvB;AACD,KAfI;AAgBL4B,gBAAY,oBAAC3B,WAAD,EAAiB;AAC3B;AACArB,iBAAWiD,YAAX;AACAd,wBAAkBe,OAAlB,CAA0B9B,IAA1B,CAA+B,SAA/B;AACAgB,WAAKA,IAAL,CAAU,EAAEf,wBAAF,EAAV;AACD,KArBI;AAsBL8B,iCAA6B,qCAACxC,mBAAD,EAAyB;AACpDX,iBAAWoD,0BAAX,CAAsCzC,mBAAtC;AACD,KAxBI;AAyBL0C,sBAAkB,4BAAM;AACtBlB,wBAAkBf,IAAlB,CAAuB,sBAAvB;AACD;AA3BI,GAAP;AA6BD;;AAGD,IAAMkC,iBAAiB,yBAAU,yBAC/BzD,UAD+B,EAE/BqC,cAF+B,4BAAV,CAAvB;;QAOEA,c,GAAAA,c;QACArC,U,GAAAA,U;QACkB0D,O,GAAlBD,c","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport ConferencePanel from '../../components/ConferencePanel';\nimport withPhone from '../../lib/withPhone';\nimport i18n from './i18n';\n\nfunction mapToProps(_, {\n  phone: {\n    conference,\n    regionSettings,\n    locale,\n    composeText,\n    extensionInfo: { serviceFeatures },\n    brand\n  },\n}) {\n  const currentLocale = locale.currentLocale;\n  const { data } = conference;\n  const { hostCode, participantCode, allowJoinBeforeHost } = data;\n  const dialInNumbers = [];\n  for (const p of data.phoneNumbers) {\n    let region = i18n.getString(p.country.isoCode, currentLocale);\n    if (p.location) {\n      region += ', ';\n      region += p.location;\n    }\n    dialInNumbers.push({\n      region,\n      phoneNumber: p.phoneNumber\n    });\n  }\n  const disableTxtBtn = !serviceFeatures.SMS.enabled && !serviceFeatures.Pager.enabled;\n  return {\n    dialInNumbers,\n    dialInNumber: conference.dialInNumber,\n    hostCode,\n    participantCode,\n    allowJoinBeforeHost,\n    additionalNumbers: conference.additionalNumbers,\n    disableTxtBtn,\n    countryCode: regionSettings.countryCode,\n    areaCode: regionSettings.areaCode,\n    currentLocale,\n    brand: {\n      code: brand.code,\n      name: brand.name\n    },\n    showSpinner: !(\n      conference.ready &&\n      regionSettings.ready &&\n      locale.ready &&\n      composeText.ready\n    ),\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    conference,\n    composeText,\n    routerInteraction,\n    call,\n    alert\n  },\n}) {\n  return {\n    alert: (msg) => {\n      alert.warning({ message: msg });\n    },\n    updateDialInNumber: (dialInNumber) => {\n      conference.updateDialInNumber(dialInNumber);\n    },\n    updateAdditionalNumbers: (additionalDialInNumbers) => {\n      conference.updateAdditionalNumbers(additionalDialInNumbers);\n    },\n    inviteWithText: (text) => {\n      composeText.updateMessageText(text);\n      // for track\n      conference.onInviteWithText();\n      routerInteraction.push('/composeText');\n    },\n    joinAsHost: (phoneNumber) => {\n      // for track\n      conference.onJoinAsHost();\n      routerInteraction.history.push('/dialer');\n      call.call({ phoneNumber });\n    },\n    onAllowJoinBeforeHostChange: (allowJoinBeforeHost) => {\n      conference.updateEnableJoinBeforeHost(allowJoinBeforeHost);\n    },\n    showHelpCommands: () => {\n      routerInteraction.push('/conference/commands');\n    }\n  };\n}\n\n\nconst ConferencePage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(ConferencePanel));\n\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  ConferencePage as default,\n};\n"]}