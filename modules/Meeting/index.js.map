{"version":3,"sources":["modules/Meeting/index.js"],"names":["UTC_TIMEZONE_ID","MeetingType","SCHEDULED","RECURRING","INSTANT","getDefaultMeetingSettings","topic","extensionName","meetingType","password","schedule","startTime","Date","getTime","durationInMinutes","timeZone","id","host","allowJoinBeforeHost","startHostVideo","startParticipantsVideo","audioOptions","_requireMeetingPassword","_showDate","_showTime","_saved","MeetingErrors","type","_errors","push","message","length","Meeting","deps","dep","optional","alert","client","extensionInfo","storage","options","actionTypes","_alert","_client","_extensionInfo","_storage","_reducer","_lastMeetingSettingKey","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","_init","_shouldReset","_reset","ready","pending","dispatch","initSuccess","resetSuccess","_initMeeting","info","name","updateMeeting","meeting","lastMeetingInfo","isAlertSuccess","isScheduling","initScheduling","_validate","formattedMeeting","_format","account","extension","post","resp","serviceInfo","get","scheduled","setTimeout","scheduledSuccess","resetScheduling","all","error","warning","formatted","_schedule","utc","format","invalidMeetingInfo","errors","emptyTopic","noPassword","durationIncorrect","state","getItem","schedulingStatus","scheduling","status"],"mappings":"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","file":"index.js","sourcesContent":["import moment from 'moment';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport background from '../../lib/background';\nimport actionTypes from './actionTypes';\nimport scheduleStatus from './scheduleStatus';\nimport meetingStatus from './meetingStatus';\nimport getMeetingReducer, { getMeetingStorageReducer } from './getMeetingReducer';\n\nexport const UTC_TIMEZONE_ID = '1';\nexport const MeetingType = {\n  SCHEDULED: 'Scheduled',\n  RECURRING: 'Recurring',\n  INSTANT: 'Instant',\n};\n\n// Basic default meeting type information\nexport const getDefaultMeetingSettings = extensionName => ({\n  topic: `${extensionName}'s Meeting`,\n  meetingType: MeetingType.SCHEDULED,\n  password: null,\n  schedule: {\n    startTime: (new Date()).getTime(),\n    durationInMinutes: 60,\n    timeZone: {\n      id: UTC_TIMEZONE_ID\n    }\n  },\n  host: {\n    id: null,\n  },\n  allowJoinBeforeHost: false,\n  startHostVideo: false,\n  startParticipantsVideo: false,\n  audioOptions: ['Phone', 'ComputerAudio'],\n  _requireMeetingPassword: false,\n  _showDate: false,\n  _showTime: false,\n  _saved: false,\n});\n\nclass MeetingErrors {\n  constructor(type) {\n    this._errors = [];\n    if (type) this._errors.push({ message: type });\n  }\n\n  push(type) {\n    if (type) this._errors.push({ message: type });\n  }\n\n  get all() {\n    return this._errors;\n  }\n\n  get length() {\n    return this._errors.length;\n  }\n}\n\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'ExtensionInfo',\n    'Storage',\n    { dep: 'MeetingOptions', optional: true }\n  ]\n})\nexport default class Meeting extends RcModule {\n  constructor({\n    alert,\n    client,\n    extensionInfo,\n    storage,\n    ...options\n  }) {\n    super({ ...options, actionTypes });\n    this._alert = alert;\n    this._client = client;\n    this._extensionInfo = extensionInfo;\n    this._storage = storage;\n    this._reducer = getMeetingReducer(this.actionTypes);\n    this._lastMeetingSettingKey = 'lastMeetingSetting';\n    this._storage.registerReducer({\n      key: this._lastMeetingSettingKey,\n      reducer: getMeetingStorageReducer(this.actionTypes)\n    });\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._alert.ready &&\n      this._storage.ready &&\n      this._extensionInfo.ready &&\n      this.pending\n    );\n  }\n\n  _init() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess\n    });\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._alert.ready ||\n        !this._storage.ready ||\n        !this._extensionInfo.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess\n    });\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting settings from previous one.\n   */\n  @background\n  init() {\n    this._initMeeting();\n  }\n\n  @proxify\n  reload() {\n    this._initMeeting();\n  }\n\n  _initMeeting() {\n    const extensionName = this._extensionInfo.info.name || '';\n    this.store.dispatch({\n      type: this.actionTypes.updateMeeting,\n      meeting: {\n        ...getDefaultMeetingSettings(extensionName),\n        // Load last meeting settings\n        ...this.lastMeetingInfo\n      }\n    });\n  }\n\n  @proxify\n  update(meeting) {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeeting,\n      meeting\n    });\n  }\n\n  @proxify\n  async schedule(meeting, { isAlertSuccess = true } = {}) {\n    if (this.isScheduling) return null;\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initScheduling\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n\n      const resp = await this._client\n        .account()\n        .extension()\n        .meeting()\n        .post(formattedMeeting);\n      const serviceInfo = await this._client\n        .account()\n        .extension()\n        .meeting()\n        .serviceInfo()\n        .get();\n      this.store.dispatch({\n        type: this.actionTypes.scheduled,\n        meeting: {\n          ...formattedMeeting,\n          _saved: meeting._saved\n        }\n      });\n      // Reload meeting info\n      this._initMeeting();\n      // Notify user the meeting has been scheduled\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.info({\n            message: meetingStatus.scheduledSuccess\n          });\n        }, 50);\n      }\n      return {\n        meeting: resp,\n        serviceInfo,\n        extensionInfo: this.extensionInfo\n      };\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetScheduling\n      });\n      if (errors instanceof MeetingErrors) {\n        for (const error of errors.all) {\n          this._alert.warning(error);\n        }\n      }\n      return null;\n    }\n  }\n\n  /**\n   * Format meeting information.\n   * @param {Object} meeting\n   */\n  _format(meeting) {\n    const {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password,\n      schedule,\n    } = meeting;\n    const formatted = {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n    };\n    if (password) {\n      formatted.password = password;\n    }\n    // Recurring meetings do not have schedule info\n    if (meetingType !== MeetingType.RECURRING) {\n      const _schedule = {\n        durationInMinutes: schedule.durationInMinutes,\n        timeZone: { id: UTC_TIMEZONE_ID }\n      };\n      if (schedule.startTime) {\n        // Format selected startTime to utc standard time\n        // Timezone information is not included here\n        _schedule.startTime = moment.utc(schedule.startTime).format();\n      }\n      formatted.schedule = _schedule;\n    }\n    return formatted;\n  }\n\n  /**\n   * Validate meeting information format.\n   * @param {Object} meeting\n   * @throws\n   */\n  _validate(meeting) {\n    if (!meeting) {\n      throw new MeetingErrors(meetingStatus.invalidMeetingInfo);\n    }\n    const {\n      topic,\n      password,\n      schedule,\n      _requireMeetingPassword,\n    } = meeting;\n    const errors = new MeetingErrors();\n    if (topic.length <= 0) {\n      errors.push(meetingStatus.emptyTopic);\n    }\n    if (_requireMeetingPassword && (!password || password.length <= 0)) {\n      errors.push(meetingStatus.noPassword);\n    }\n    if (schedule) {\n      if (schedule.durationInMinutes < 0) {\n        errors.push(meetingStatus.durationIncorrect);\n      }\n    }\n    if (errors.length > 0) {\n      throw errors;\n    }\n  }\n\n  get extensionInfo() {\n    return this._extensionInfo.info;\n  }\n\n  get meeting() {\n    return this.state.meeting;\n  }\n\n  get lastMeetingInfo() {\n    const state = this._storage.getItem(this._lastMeetingSettingKey);\n    return state;\n  }\n\n  get isScheduling() {\n    return this.state.schedulingStatus === scheduleStatus.scheduling;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"]}