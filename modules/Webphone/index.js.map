{"version":3,"sources":["modules/Webphone/index.js"],"names":["FIRST_THREE_RETRIES_DELAY","FOURTH_RETRIES_DELAY","FIFTH_RETRIES_DELAY","MAX_RETRIES_DELAY","Webphone","deps","dep","optional","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","contactMatcher","extensionDevice","numberValidate","audioSettings","tabManager","onCallEnd","onCallRing","onCallStart","options","actionTypes","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","ensureExist","_client","_rolesAndPermissions","_extensionDevice","_numberValidate","_audioSettings","_contactMatcher","_tabManager","_onCallEndFunc","_onCallRingFunc","_onCallStartFunc","_webphone","_remoteVideo","_localVideo","_sessions","_reducer","addSelector","sessions","outputs","forEach","session","push","to","from","ringSessionId","ringSession","find","id","activeSessionId","activeSession","filter","addQuerySource","getQueriesFn","_selectors","sessionPhoneNumbers","readyCheckFn","ready","_isFirstRegister","document","createElement","setAttribute","muted","body","appendChild","volume","callVolume","supportDevices","setSinkId","outputDeviceId","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","subscribe","_onStateChange","_shouldInit","initSuccess","_shouldReset","resetSuccess","disconnect","_ringtoneVolume","ringtoneVolume","_ringtoneMuted","ringtoneMuted","userAgent","audioHelper","setVolume","_callVolume","_outputDeviceId","loggedIn","pending","service","platform","post","sipInfo","transport","response","json","account","extension","device","list","devices","records","phoneLines","length","concat","stop","unregister","removeAllListeners","provisionData","_removeWebphone","RingCentralWebphone","uuid","endpointId","logLevel","enabled","incoming","incomingAudio","outgoing","outgoingAudio","onRegistered","registered","info","message","webphoneErrors","connected","onUnregistered","unregistered","onRegistrationFailed","cause","connectionStatus","connectFailed","errorCode","needToReconnect","console","error","statusCode","status_code","webphoneCountOverLimit","webphoneForbidden","requestTimeout","internalServerError","serverTimeout","unknownError","danger","allowDuplicates","payload","registrationFailed","_connect","on","debug","_onInvite","reconnect","_retrySleep","connecting","resetRetryCounts","active","connect","_sipProvision","sipProvision","disconnecting","_createWebphone","ttl","indexOf","refreshServiceFeatures","notWebphonePermission","sipProvisionError","connectError","disconnected","browserNotSupported","warning","_fetchDL","notOutboundCallWithoutDL","log","checkDLError","hangup","_updateSessions","callStatus","sessionStatus","finished","_onCallStart","_onCallEnd","newSession","replaced","direction","callDirections","inbound","_addSession","_onAccepted","isOnMute","onMute","onHold","mediaHandler","onGetUserMediaError","creationTime","Date","now","_onCallRing","sessionId","get","_holdOtherSession","accept","acceptOptions","callAnswer","reject","unhold","forwardNumber","validateNumbers","validatedResult","result","errors","callErrors","phoneNumber","validPhoneNumber","numbers","e164","isForwarded","forward","forwardError","_sessionHandleWithId","mute","muteError","unmute","isOnHold","local","hold","holdError","currentSessionId","recordStatus","startRecord","recording","idle","code","recordDisabled","recordError","stopRecord","park","transferNumber","isOnTransfer","transfer","transferError","ua","invite","media","once","warmTransfer","flipValue","flip","isOnFlip","flipError","dtmfValue","dtmf","terminate","isToVoicemail","toVoicemail","toVoiceMailError","replyOptions","isReplied","replyWithMessage","func","toNumber","fromNumber","homeCountryId","outbound","contact","contactMatch","updateSessions","values","map","normalizeSession","set","delete","minimized","normalizedSession","callStart","triggerMatch","callRing","playIncoming","_removeSession","callEnd","connectRetryCounts","state","status","moduleStatuses","ringSessions","onHoldSessions","lastEndedSessions","webphoneEnabled","audio","deviceId","inputDeviceId","video","render","remote","RcModule","proxify"],"mappings":"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","file":"index.js","sourcesContent":["import RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport { Module } from '../../lib/di';\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport connectionStatus from './connectionStatus';\n\nimport sessionStatus from './sessionStatus';\nimport recordStatus from './recordStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\nimport callErrors from '../Call/callErrors';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport {\n  isBrowserSupport,\n  normalizeSession,\n  isRing,\n  isOnHold,\n} from './webphoneHelper';\nimport getWebphoneReducer from './getWebphoneReducer';\n\nconst FIRST_THREE_RETRIES_DELAY = 10 * 1000;\nconst FOURTH_RETRIES_DELAY = 30 * 1000;\nconst FIFTH_RETRIES_DELAY = 60 * 1000;\nconst MAX_RETRIES_DELAY = 2 * 60 * 1000;\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Client',\n    { dep: 'ContactMatcher', optional: true },\n    'ExtensionDevice',\n    'NumberValidate',\n    'RolesAndPermissions',\n    'AudioSettings',\n    { dep: 'TabManager', optional: true },\n    { dep: 'WebphoneOptions', optional: true }\n  ]\n})\nexport default class Webphone extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {String} params.appKey - app key\n   * @param {String} params.appName - app name\n   * @param {String} params.appVersion - app version\n   * @param {Number} params.webphoneLogLevel - log Level\n   * @param {Alert} params.alert - alert module instance\n   * @param {Auth} params.auth - auth module instance\n   * @param {Client} params.client - client module instance\n   * @param {RolesAndPermissions} params.rolesAndPermissions - rolesAndPermissions module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {GlobalStorage} params.globalStorage - globalStorage module instance\n   * @param {ExtensionDevice} params.extensionDevice - extensionDevice module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   * @param {ContactMatcher} params.contactMatcher - contactMatcher module instance, optional\n   * @param {Function} params.onCallEnd - callback on a call end\n   * @param {Function} params.onCallRing - callback on a call ring\n   * @param {Function} params.onCallStart - callback on a call start\n   */\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    contactMatcher,\n    extensionDevice,\n    numberValidate,\n    audioSettings,\n    tabManager,\n    onCallEnd,\n    onCallRing,\n    onCallStart,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = this::ensureExist(auth, 'auth');\n    this._client = this::ensureExist(client, 'client');\n    this._rolesAndPermissions = this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._extensionDevice = this::ensureExist(extensionDevice, 'extensionDevice');\n    this._numberValidate = this::ensureExist(numberValidate, 'numberValidate');\n    this._audioSettings = this::ensureExist(audioSettings, 'audioSettings');\n    this._contactMatcher = contactMatcher;\n    this._tabManager = tabManager;\n    this._onCallEndFunc = onCallEnd;\n    this._onCallRingFunc = onCallRing;\n    this._onCallStartFunc = onCallStart;\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n\n    this._sessions = new Map();\n\n    this._reducer = getWebphoneReducer(this.actionTypes);\n\n    this.addSelector('sessionPhoneNumbers',\n      () => this.sessions,\n      (sessions) => {\n        const outputs = [];\n        sessions.forEach((session) => {\n          outputs.push(session.to);\n          outputs.push(session.from);\n        });\n        return outputs;\n      }\n    );\n\n    this.addSelector('ringSession',\n      () => this.ringSessionId,\n      () => this.sessions,\n      (ringSessionId, sessions) => {\n        if (!ringSessionId) {\n          return null;\n        }\n        const ringSession = sessions.find(\n          session => session.id === ringSessionId\n        );\n        return ringSession;\n      }\n    );\n\n    this.addSelector('activeSession',\n      () => this.activeSessionId,\n      () => this.sessions,\n      (activeSessionId, sessions) => {\n        if (!activeSessionId) {\n          return null;\n        }\n        const activeSession = sessions.find(\n          session => session.id === activeSessionId\n        );\n        return activeSession;\n      }\n    );\n\n    this.addSelector('ringSessions',\n      () => this.sessions,\n      sessions => sessions.filter(session => isRing(session))\n    );\n\n    this.addSelector('onHoldSessions',\n      () => this.sessions,\n      sessions => sessions.filter(session => isOnHold(session))\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionPhoneNumbers,\n        readyCheckFn: () => (\n          this.ready\n        ),\n      });\n    }\n\n    this._isFirstRegister = true;\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    this._localVideo.muted = true;\n\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this._remoteVideo.volume = this._audioSettings.callVolume;\n    if (this._audioSettings.supportDevices) {\n      this._remoteVideo.setSinkId(this._audioSettings.outputDeviceId);\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n\n  initialize() {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined'\n    ) {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n    if (\n      this.ready &&\n      (\n        this._ringtoneVolume !== this._audioSettings.ringtoneVolume ||\n        this._ringtoneMuted !== this._audioSettings.ringtoneMuted\n      )\n    ) {\n      this._ringtoneVolume = this._audioSettings.ringtoneVolume;\n      this._ringtoneMuted = this._audioSettings.ringtoneMuted;\n      if (\n        this._webphone &&\n        this._webphone.userAgent\n      ) {\n        this._webphone.userAgent.audioHelper\n          .setVolume(this._ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume);\n      }\n    }\n    if (\n      this.ready &&\n      this._callVolume !== this._audioSettings.callVolume\n    ) {\n      this._callVolume = this._audioSettings.callVolume;\n      if (\n        this._remoteVideo\n      ) {\n        this._remoteVideo.volume = this._audioSettings.callVolume;\n      }\n    }\n    if (\n      this.ready &&\n      this._audioSettings.supportDevices &&\n      this._outputDeviceId !== this._audioSettings.outputDeviceId\n    ) {\n      this._outputDeviceId = this._audioSettings.outputDeviceId;\n      if (\n        this._remoteVideo\n      ) {\n        this._remoteVideo.setSinkId(this._outputDeviceId);\n      }\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      this._extensionDevice.ready &&\n      this._numberValidate.ready &&\n      this._audioSettings.ready &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready ||\n        !this._numberValidate.ready ||\n        !this._extensionDevice.ready ||\n        (!!this._tabManager && !this._tabManager.ready) ||\n        !this._audioSettings.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service.platform()\n      .post('/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }]\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._client.account().extension().device().list();\n    const devices = response.records;\n    let phoneLines = [];\n    devices.forEach((device) => {\n      if (!device.phoneLines || device.phoneLines.length === 0) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  _removeWebphone() {\n    if (!this._webphone || !this._webphone.userAgent) {\n      return;\n    }\n    this._webphone.userAgent.stop();\n    this._webphone.userAgent.unregister();\n    this._webphone.userAgent.removeAllListeners();\n    this._webphone = null;\n  }\n\n  _createWebphone(provisionData) {\n    this._removeWebphone();\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpointId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n        incoming: incomingAudio, // path to audio file for incoming call\n        outgoing: outgoingAudio, // path to aduotfile for outgoing call\n      }\n    });\n    this._isFirstRegister = true;\n    const onRegistered = () => {\n      if (this._isFirstRegister) {\n        this.store.dispatch({\n          type: this.actionTypes.registered,\n        });\n        this._alert.info({\n          message: webphoneErrors.connected,\n        });\n      }\n      this._isFirstRegister = false;\n    };\n    const onUnregistered = () => {\n      this._isFirstRegister = true;\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    };\n    const onRegistrationFailed = (response, cause) => {\n      if (this.connectionStatus === connectionStatus.connectFailed) {\n        return;\n      }\n      this._isFirstRegister = true;\n      let errorCode;\n      let needToReconnect = false;\n      console.error(response);\n      console.error('webphone register failed:', cause);\n      // limit logic:\n      /*\n      * Specialties of this flow are next:\n      *   6th WebRTC in another browser receives 6th ‘EndpointID’ and 1st ‘InstanceID’,\n      *   which has been given previously to the 1st ‘EndpointID’.\n      *   It successfully registers on WSX by moving 1st ‘EndpointID’ to a blacklist state.\n      *   When 1st WebRTC client re-registers on expiration timeout,\n      *   WSX defines that 1st ‘EndpointID’ is blacklisted and responds with ‘SIP/2.0 403 Forbidden,\n      *   instance id is intercepted by another registration’ and remove it from black list.\n      *   So if 1st WebRTC will send re-register again with the same ‘InstanceID’,\n      *   it will be accepted and 6th ‘EndpointID’ will be blacklisted.\n      *   (But the WebRTC client must logout on receiving SIP/2.0 403 Forbidden error and in case of login -\n      *   provision again via Platform API and receive new InstanceID)\n      */\n      const statusCode = response ? response.status_code : null;\n      switch (statusCode) {\n        // Webphone account overlimit\n        case 503: case 603: {\n          errorCode = webphoneErrors.webphoneCountOverLimit;\n          needToReconnect = true;\n          break;\n        }\n        case 403: {\n          errorCode = webphoneErrors.webphoneForbidden;\n          needToReconnect = true;\n          break;\n        }\n        // Request Timeout\n        case 408: {\n          errorCode = webphoneErrors.requestTimeout;\n          needToReconnect = true;\n          break;\n        }\n        // Internal server error\n        case 500: {\n          errorCode = webphoneErrors.internalServerError;\n          break;\n        }\n        // Timeout\n        case 504: {\n          errorCode = webphoneErrors.serverTimeout;\n          needToReconnect = true;\n          break;\n        }\n        default: {\n          errorCode = webphoneErrors.unknownError;\n          break;\n        }\n      }\n      this._alert.danger({\n        message: errorCode,\n        allowDuplicates: false,\n        payload: {\n          statusCode\n        }\n      });\n      this.store.dispatch({\n        type: this.actionTypes.registrationFailed,\n        errorCode,\n        statusCode,\n      });\n      if (cause === 'Request Timeout') {\n        needToReconnect = true;\n      }\n      if (needToReconnect) {\n        this._removeWebphone();\n        this._connect(needToReconnect);\n      }\n    };\n    this._webphone.userAgent.audioHelper.setVolume(\n      this._audioSettings.ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume\n    );\n    this._webphone.userAgent.on('registered', onRegistered);\n    this._webphone.userAgent.on('unregistered', onUnregistered);\n    this._webphone.userAgent.on('registrationFailed', onRegistrationFailed);\n    this._webphone.userAgent.on('invite', (session) => {\n      console.debug('UA invite');\n      this._onInvite(session);\n    });\n  }\n\n  @proxify\n  async _connect(reconnect = false) {\n    try {\n      if (reconnect) {\n        await this._retrySleep();\n      }\n\n      if (!this._auth.loggedIn) {\n        return;\n      }\n\n      // do not connect if it is connecting\n      if (this.connectionStatus === connectionStatus.connecting) {\n        return;\n      }\n\n      // when reconnect is break by disconnect\n      if (reconnect && this.connectionStatus !== connectionStatus.connectFailed) {\n        this.store.dispatch({\n          type: this.actionTypes.resetRetryCounts,\n        });\n        return;\n      }\n\n      if (this._tabManager && !this._tabManager.active) {\n        await sleep(FIRST_THREE_RETRIES_DELAY);\n        await this._connect(reconnect);\n        return;\n      }\n\n      this.store.dispatch({\n        type: (\n          reconnect ?\n            this.actionTypes.reconnect : this.actionTypes.connect\n        )\n      });\n\n      const sipProvision = await this._sipProvision();\n\n      // do not continue if it is disconnecting\n      if (this.disconnecting) {\n        return;\n      }\n      this._createWebphone(sipProvision);\n    } catch (error) {\n      console.error(error);\n      this._alert.danger({\n        message: webphoneErrors.connectFailed,\n        ttl: 0,\n        allowDuplicates: false,\n      });\n      let needToReconnect = true;\n      let errorCode;\n      if (\n        error && error.message &&\n        (error.message.indexOf('Feature [WebPhone] is not available') > -1)\n      ) {\n        this._rolesAndPermissions.refreshServiceFeatures();\n        needToReconnect = false;\n        errorCode = webphoneErrors.notWebphonePermission;\n      } else {\n        errorCode = webphoneErrors.sipProvisionError;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        error,\n      });\n      if (needToReconnect) {\n        await this._connect(needToReconnect);\n      }\n    }\n  }\n\n  /**\n   * connect a web phone.\n   */\n  @proxify\n  async connect() {\n    if (\n      this._auth.loggedIn &&\n      this.enabled &&\n      (\n        this.connectionStatus === connectionStatus.disconnected ||\n        this.connectionStatus === connectionStatus.connectFailed\n      )\n    ) {\n      if (!isBrowserSupport()) {\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.browserNotSupported,\n        });\n        this._alert.warning({\n          message: webphoneErrors.browserNotSupported,\n          ttl: 0,\n        });\n        return;\n      }\n      try {\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this.store.dispatch({\n            type: this.actionTypes.connectError,\n            errorCode: webphoneErrors.notOutboundCallWithoutDL,\n          });\n          this._alert.warning({\n            message: webphoneErrors.notOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.checkDLError,\n        });\n        this._alert.warning({\n          message: webphoneErrors.checkDLError,\n        });\n      }\n      await this._connect();\n    }\n  }\n\n  _disconnect() {\n    if (\n      this.connectionStatus === connectionStatus.connected ||\n      this.connectionStatus === connectionStatus.connecting ||\n      this.connectionStatus === connectionStatus.connectFailed\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.disconnect,\n      });\n      if (this._webphone) {\n        this._sessions.forEach((session) => {\n          this.hangup(session);\n        });\n        this._removeWebphone();\n        this._sessions = new Map();\n        this._updateSessions();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    }\n  }\n\n  @proxify\n  async disconnect() {\n    this._disconnect();\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', () => {\n      if (session.callStatus === sessionStatus.finished) {\n        return;\n      }\n      console.log('accepted');\n      session.callStatus = sessionStatus.connected;\n      this._onCallStart(session);\n    });\n    session.on('progress', () => {\n      console.log('progress...');\n      session.callStatus = sessionStatus.connecting;\n      this._updateSessions();\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      session.callStatus = sessionStatus.replaced;\n      newSession.callStatus = sessionStatus.connected;\n      newSession.direction = callDirections.inbound;\n      this._addSession(newSession);\n      this._onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.isOnMute = true;\n      session.callStatus = sessionStatus.onMute;\n      this._updateSessions();\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.isOnMute = false;\n      session.callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.on('hold', () => {\n      console.log('Event: hold');\n      session.callStatus = sessionStatus.onHold;\n      this._updateSessions();\n    });\n    session.on('unhold', () => {\n      console.log('Event: unhold');\n      session.callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.mediaHandler.on('userMediaFailed', () => {\n      this._audioSettings.onGetUserMediaError();\n    });\n  }\n\n  _onInvite(session) {\n    session.creationTime = Date.now();\n    session.direction = callDirections.inbound;\n    session.callStatus = sessionStatus.connecting;\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      this._onCallEnd(session);\n    });\n    this._onCallRing(session);\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      this._holdOtherSession(session.id);\n      this._onAccepted(session, 'inbound');\n      await session.accept(this.acceptOptions);\n      this._onCallStart(session);\n      this.store.dispatch({ // for track\n        type: this.actionTypes.callAnswer,\n      });\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      // this._removeSession(session);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async reject(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.reject();\n    } catch (e) {\n      console.error(e);\n      // this._removeSession(session);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async resume(sessionId) {\n    await this.unhold(sessionId);\n  }\n\n  @proxify\n  async forward(sessionId, forwardNumber) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      const validatedResult\n        = await this._numberValidate.validateNumbers([forwardNumber]);\n      if (!validatedResult.result) {\n        validatedResult.errors.forEach((error) => {\n          this._alert.warning({\n            message: callErrors[error.type],\n            payload: {\n              phoneNumber: error.phoneNumber\n            }\n          });\n        });\n        return false;\n      }\n      const validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      session.isForwarded = true;\n      await session.forward(validPhoneNumber, this.acceptOptions);\n      console.log('Forwarded');\n      this._onCallEnd(session);\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.forwardError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async mute(sessionId) {\n    try {\n      this._sessionHandleWithId(sessionId, (session) => {\n        session.isOnMute = true;\n        session.mute();\n        this._updateSessions();\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.muteError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.isOnMute = false;\n      session.unmute();\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    if (session.isOnHold().local) {\n      return true;\n    }\n    try {\n      await session.hold();\n      this._updateSessions();\n      return true;\n    } catch (e) {\n      console.error('hold error:', e);\n      this._alert.warning({\n        message: webphoneErrors.holdError\n      });\n      return false;\n    }\n  }\n\n  _holdOtherSession(currentSessionId) {\n    this._sessions.forEach((session, sessionId) => {\n      if (currentSessionId === sessionId) {\n        return;\n      }\n      if (session.isOnHold().local) {\n        return;\n      }\n      session.hold();\n    });\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (session.isOnHold().local) {\n        this._holdOtherSession(session.id);\n        await session.unhold();\n        this._onCallStart(session);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    // If the status of current session is not connected,\n    // the recording process can not be started.\n    if (session.callStatus === sessionStatus.connecting) {\n      return;\n    }\n    try {\n      session.recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.startRecord();\n      session.recordStatus = recordStatus.recording;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.recordStatus = recordStatus.idle;\n      this._updateSessions();\n      // Recording has been disabled\n      if (e && e.code === -5) {\n        this._alert.danger({\n          message: webphoneErrors.recordDisabled\n        });\n        // Disabled phone recording\n        session.recordStatus = recordStatus.pending;\n        this._updateSessions();\n        return;\n      }\n      this._alert.danger({\n        message: webphoneErrors.recordError,\n        payload: {\n          errorCode: e.code\n        }\n      });\n    }\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.stopRecord();\n      session.recordStatus = recordStatus.idle;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.recordStatus = recordStatus.recording;\n      this._updateSessions();\n    }\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.isOnTransfer = true;\n      this._updateSessions();\n      const validatedResult\n        = await this._numberValidate.validateNumbers([transferNumber]);\n      if (!validatedResult.result) {\n        validatedResult.errors.forEach((error) => {\n          this._alert.warning({\n            message: callErrors[error.type],\n            payload: {\n              phoneNumber: error.phoneNumber\n            }\n          });\n        });\n        session.isOnTransfer = false;\n        this._updateSessions();\n        return;\n      }\n      const validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      await session.transfer(validPhoneNumber);\n      session.isOnTransfer = false;\n      this._updateSessions();\n      this._onCallEnd(session);\n    } catch (e) {\n      console.error(e);\n      session.isOnTransfer = false;\n      this._updateSessions();\n      this._alert.danger({\n        message: webphoneErrors.transferError\n      });\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        media: this.acceptOptions.media\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n          this._onCallEnd(session);\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      // this._onCallEnd(session);\n      session.isOnFlip = true;\n      console.log('Flipped');\n    } catch (e) {\n      session.isOnFlip = false;\n      this._alert.warning({\n        message: webphoneErrors.flipError\n      });\n      console.error(e);\n    }\n    this._updateSessions();\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.dtmf(dtmfValue);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.terminate();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.isToVoicemail = true;\n      await session.toVoicemail();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n      this._alert.warning({\n        message: webphoneErrors.toVoiceMailError\n      });\n    }\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.isReplied = true;\n      await session.replyWithMessage(replyOptions);\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  /**\n   * start a outbound call.\n   * @param {toNumber} recipient number\n   * @param {fromNumber} call Id\n   * @param {homeCountryId} homeCountry Id\n   */\n  @proxify\n  async makeCall({ toNumber, fromNumber, homeCountryId }) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return null;\n    }\n    const phoneLines = await this._fetchDL();\n    if (phoneLines.length === 0) {\n      this._alert.warning({\n        message: webphoneErrors.notOutboundCallWithoutDL,\n      });\n      return null;\n    }\n    const session = this._webphone.userAgent.invite(toNumber, {\n      media: this.acceptOptions.media,\n      fromNumber,\n      homeCountryId,\n    });\n    session.direction = callDirections.outbound;\n    session.callStatus = sessionStatus.connecting;\n    session.creationTime = Date.now();\n    this._onAccepted(session);\n    this._holdOtherSession(session.id);\n    this._onCallStart(session);\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(sessionId, contact) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.contactMatch = contact;\n      this._updateSessions();\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this._updateSessions();\n  }\n\n  _removeSession(session) {\n    this._sessions.delete(session.id);\n    this._updateSessions();\n  }\n\n  @proxify\n  async toggleMinimized(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.minimized = !session.minimized;\n      this._updateSessions();\n    });\n  }\n\n  _onCallStart(session) {\n    this._addSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callStart,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (this._contactMatcher) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (typeof this._onCallStartFunc === 'function') {\n      this._onCallStartFunc(normalizedSession, this.activeSession);\n    }\n  }\n\n  _onCallRing(session) {\n    this._addSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callRing,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (this._contactMatcher) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (this.activeSession && !isOnHold(this.activeSession)) {\n      this._webphone.userAgent.audioHelper.playIncoming(false);\n    }\n    if (typeof this._onCallRingFunc === 'function') {\n      this._onCallRingFunc(normalizedSession, this.ringSession);\n    }\n  }\n\n  _onCallEnd(session) {\n    this._removeSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callEnd,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (typeof this._onCallEndFunc === 'function') {\n      this._onCallEndFunc(normalizedSession, this.activeSession);\n    }\n  }\n\n  async _retrySleep() {\n    if (this.connectRetryCounts < 3) {\n      await sleep(FIRST_THREE_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 3) {\n      await sleep(FOURTH_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 4) {\n      await sleep(FIFTH_RETRIES_DELAY); // sleep 30 seconds\n    }\n    if (this.connectRetryCounts > 4) {\n      await sleep(MAX_RETRIES_DELAY); // sleep 30 seconds\n    }\n  }\n\n  /**\n   * Inform user what is happening with webphone,\n   * this will be invoked when webphone itself run into error situation\n   */\n  @proxify\n  async showAlert() {\n    if (!this.errorCode) return;\n    this._alert.danger({\n      message: this.errorCode,\n      allowDuplicates: false,\n      payload: {\n        statusCode: this.statusCode\n      },\n    });\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ringSessionId() {\n    return this.state.ringSessionId;\n  }\n\n  get activeSessionId() {\n    return this.state.activeSessionId;\n  }\n\n  /**\n   * Current active session(Outbound and InBound that answered)\n   */\n  get activeSession() {\n    return this._selectors.activeSession();\n  }\n\n  /**\n   * Current ring session(inbound)\n   */\n  get ringSession() {\n    return this._selectors.ringSession();\n  }\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  get ringSessions() {\n    return this._selectors.ringSessions();\n  }\n\n  get onHoldSessions() {\n    return this._selectors.onHoldSessions();\n  }\n\n  get lastEndedSessions() {\n    return this.state.lastEndedSessions;\n  }\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      media: {\n        audio: {\n          deviceId: this._audioSettings.inputDeviceId,\n        },\n        video: false,\n        render: {\n          remote: this._remoteVideo,\n          local: this._localVideo,\n        }\n      }\n    };\n  }\n  get isOnTransfer() {\n    return this.activeSession && this.activeSession.isOnTransfer;\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n\n  get statusCode() {\n    return this.state.statusCode;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n}\n"]}