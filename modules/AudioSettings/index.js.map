{"version":3,"sources":["modules/AudioSettings/index.js"],"names":["AudioSettings","deps","auth","alert","storage","rolesAndPermissions","options","actionTypes","_storage","ensureExist","_auth","_alert","_rolesAndPermissions","_storageKey","registerReducer","key","reducer","_reducer","addSelector","state","availableDevices","device","kind","devices","supportDevices","_checkDevices","store","subscribe","ready","loggedIn","webphoneEnabled","userMedia","hasAutoPrompted","getUserMedia","markAutoPrompted","dispatch","type","autoPrompted","_onStateChange","navigator","mediaDevices","addEventListener","pending","_shouldInit","init","initSuccess","_shouldReset","reset","resetSuccess","enumerateDevices","setAvailableDevices","resolve","webkitGetUserMedia","mozGetUserMedia","audio","stream","_onGetUserMediaSuccess","stop","getTracks","forEach","track","error","onGetUserMediaError","userMediaAlert","item","message","audioSettingsErrors","userMediaPermission","messages","dismiss","id","getUserMediaSuccess","getUserMediaError","danger","allowDuplicates","ttl","dialButtonVolume","dialButtonMuted","ringtoneVolume","ringtoneMuted","callVolume","outputDeviceId","inputDeviceId","setData","getItem","deviceId","HTMLMediaElement","prototype","setSinkId","_selectors","availableOutputDevices","availableInputDevices","cacheData","length","label","status","RcModule","proxify"],"mappings":"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","file":"index.js","sourcesContent":["import { find, filter } from 'ramda';\nimport RcModule from '../../lib/RcModule';\nimport proxify from '../../lib/proxy/proxify';\nimport { Module } from '../../lib/di';\nimport ensureExist from '../../lib/ensureExist';\nimport actionTypes from './actionTypes';\nimport getAudioSettingsReducer from './getAudioSettingsReducer';\nimport getStorageReducer from './getStorageReducer';\nimport audioSettingsErrors from './audioSettingsErrors';\n\n/**\n * @class\n * @description AudioSettings module.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Storage',\n    'RolesAndPermissions',\n  ],\n})\nexport default class AudioSettings extends RcModule {\n  constructor({\n    auth,\n    alert,\n    storage,\n    rolesAndPermissions,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._storage = this::ensureExist(storage, 'storage');\n    this._auth = this::ensureExist(auth, 'auth');\n    this._alert = this::ensureExist(alert, 'alert');\n    this._rolesAndPermissions = this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._storageKey = 'audioSettings';\n    this._storage.registerReducer({\n      key: this._storageKey,\n      reducer: getStorageReducer(this.actionTypes),\n    });\n    this._reducer = getAudioSettingsReducer(this.actionTypes);\n\n    this.addSelector('availableOutputDevices',\n      () => this.state.availableDevices,\n      devices => filter(device => device.kind === 'audiooutput', devices),\n    );\n    this.addSelector('availableInputDevices',\n      () => this.state.availableDevices,\n      devices => filter(device => device.kind === 'audioinput', devices),\n    );\n  }\n\n  initializeProxy() {\n    // Check audio permissions everytime app client starts\n    if (this.supportDevices) {\n      this._checkDevices();\n    }\n    this.store.subscribe(() => {\n      if (\n        this.ready &&\n        this._auth.loggedIn &&\n        this._rolesAndPermissions.webphoneEnabled &&\n        !this.userMedia\n      ) {\n        // Make sure it only prompts once\n        if (this.hasAutoPrompted) return;\n        this.getUserMedia();\n        this.markAutoPrompted();\n      }\n    });\n  }\n\n  @proxify\n  async markAutoPrompted() {\n    this.store.dispatch({\n      type: this.actionTypes.autoPrompted\n    });\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n    if (\n      navigator &&\n      navigator.mediaDevices &&\n      navigator.mediaDevices.addEventListener\n    ) {\n      navigator.mediaDevices.addEventListener('devicechange', () => {\n        this._checkDevices();\n      });\n    }\n  }\n\n  _shouldInit() {\n    return !!(\n      this.pending &&\n      this._storage.ready &&\n      this._auth.ready &&\n      this._rolesAndPermissions.ready\n    );\n  }\n  _shouldReset() {\n    return !!(\n      this.ready &&\n      (\n        !this._auth.ready ||\n        !this._storage.ready ||\n        !this._rolesAndPermissions.ready\n      )\n    );\n  }\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      if (this.supportDevices) {\n        await this._checkDevices();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  @proxify\n  async _checkDevices() {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    this.store.dispatch({\n      type: this.actionTypes.setAvailableDevices,\n      devices,\n    });\n  }\n\n  getUserMedia() {\n    return new Promise((resolve) => {\n      navigator.getUserMedia = navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia;\n      if (navigator.getUserMedia) {\n        navigator.getUserMedia({\n          audio: true,\n        }, (stream) => {\n          this._onGetUserMediaSuccess();\n          if (typeof stream.stop === 'function') {\n            stream.stop();\n          } else {\n            stream.getTracks().forEach((track) => {\n              track.stop();\n            });\n          }\n          resolve();\n        }, (error) => {\n          this.onGetUserMediaError(error);\n          resolve();\n        });\n      }\n    });\n  }\n\n  @proxify\n  async _onGetUserMediaSuccess() {\n    const userMediaAlert = find(\n      item => item.message === audioSettingsErrors.userMediaPermission,\n      this._alert.messages,\n    );\n    if (userMediaAlert) {\n      this._alert.dismiss(userMediaAlert.id);\n    }\n    this.store.dispatch({\n      type: this.actionTypes.getUserMediaSuccess,\n    });\n    this._checkDevices();\n  }\n\n  @proxify\n  async onGetUserMediaError(error) {\n    this.store.dispatch({\n      type: this.actionTypes.getUserMediaError,\n      error,\n    });\n    this._alert.danger({\n      message: audioSettingsErrors.userMediaPermission,\n      allowDuplicates: false,\n    });\n  }\n\n  @proxify\n  async showAlert() {\n    if (!this.userMedia) {\n      this._alert.danger({\n        message: audioSettingsErrors.userMediaPermission,\n        allowDuplicates: false,\n        ttl: 30 * 1000,\n      });\n    }\n  }\n\n  @proxify\n  async setData({\n    dialButtonVolume = this.dialButtonVolume,\n    dialButtonMuted = this.dialButtonMuted,\n    ringtoneVolume = this.ringtoneVolume,\n    ringtoneMuted = this.ringtoneMuted,\n    callVolume = this.callVolume,\n    outputDeviceId = this.outputDeviceId,\n    inputDeviceId = this.inputDeviceId,\n  }) {\n    this.store.dispatch({\n      type: this.actionTypes.setData,\n      dialButtonVolume,\n      dialButtonMuted,\n      ringtoneVolume,\n      ringtoneMuted,\n      callVolume,\n      outputDeviceId,\n      inputDeviceId,\n    });\n  }\n\n  get outputDeviceId() {\n    return this._storage.getItem(this._storageKey).outputDeviceId;\n  }\n  get outputDevice() {\n    return find(device => (\n      device.kind === 'audiooutput' &&\n      device.deviceId === this.outputDeviceId\n    ), this.availableDevices);\n  }\n  get inputDeviceId() {\n    return this._storage.getItem(this._storageKey).inputDeviceId;\n  }\n  get inputDevice() {\n    return find(device => (\n      device.kind === 'audioinput' &&\n      device.deviceId === this.inputDeviceId\n    ), this.availableDevices);\n  }\n  get supportDevices() {\n    return !!(\n      HTMLMediaElement.prototype.setSinkId &&\n      navigator.mediaDevices &&\n      navigator.mediaDevices.enumerateDevices\n    );\n  }\n  get availableDevices() {\n    return this.state.availableDevices;\n  }\n  get availableOutputDevices() {\n    return this._selectors.availableOutputDevices();\n  }\n  get availableInputDevices() {\n    return this._selectors.availableInputDevices();\n  }\n\n  get cacheData() {\n    return this._storage.getItem(this._storageKey) || {};\n  }\n\n  get dialButtonVolume() {\n    return this.cacheData.dialButtonVolume;\n  }\n  get dialButtonMuted() {\n    return this.cacheData.dialButtonMuted;\n  }\n  get ringtoneVolume() {\n    return this.cacheData.ringtoneVolume;\n  }\n  get ringtoneMuted() {\n    return this.cacheData.ringtoneMuted;\n  }\n  get callVolume() {\n    return this.cacheData.callVolume;\n  }\n\n  get userMedia() {\n    // this detection method may not work in the future\n    // currently there is no good way to detect this\n    return !!(\n      this.availableDevices.length &&\n      this.availableDevices[0].label !== ''\n    );\n  }\n\n  get hasAutoPrompted() {\n    return this.cacheData.hasAutoPrompted;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"]}