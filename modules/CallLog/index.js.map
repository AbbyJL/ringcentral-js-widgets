{"version":3,"sources":["modules/CallLog/index.js"],"names":["processData","getISODateFrom","getISODateTo","DEFAULT_TTL","DEFAULT_TOKEN_EXPIRES_IN","DEFAULT_DAY_SPAN","RECORD_COUNT","DEFAULT_TIME_TO_RETRY","SYNC_DELAY","data","records","timestamp","Date","syncInfo","syncTime","getTime","syncToken","daySpan","d","toISOString","dateTo","forEach","call","startTime","presenceRegExp","CallLog","deps","dep","optional","auth","client","storage","subscription","rolesAndPermissions","tabManager","ttl","tokenExpiresIn","timeToRetry","polling","disableCache","options","actionTypes","_subscriptionHandler","message","test","event","body","activeCalls","ownerId","_auth","_storage","_tabManager","active","sync","_onStateChange","loggedIn","ready","_subscription","_rolesAndPermissions","status","pending","store","dispatch","type","init","_daySpan","token","now","_tokenExpiresIn","clearToken","permissions","ReadCallLog","_init","initSuccess","reset","_clearTimeout","_promise","resetSuccess","_lastMessage","_client","_dataStorageKey","_tokenStorageKey","_timestampStorageKey","_ttl","_timeToRetry","_polling","_reducer","registerReducer","key","reducer","addSelector","filter","result","stopped","busy","unknown","faxSendError","faxReceiptError","callFailed","faxReceipt","console","log","_startPolling","subscribe","detailedPresence","dateFrom","account","extension","callLog","list","params","iSync","callLogSync","syncType","Error","iSyncSuccess","iSyncError","error","fSync","recordCount","supplementRecords","length","_fetch","fSyncSuccess","fSyncError","shouldFSync","_iSync","_fSync","_retry","_sync","_queueSync","state","getItem","_selectors","calls","ReadPresenceStatus"],"mappings":"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","file":"index.js","sourcesContent":["import { Module } from '../../lib/di';\nimport Pollable from '../../lib/Pollable';\nimport fetchList from '../../lib/fetchList';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport getDateFrom from '../../lib/getDateFrom';\nimport actionTypes from './actionTypes';\nimport getCallLogReducer, {\n  getDataReducer,\n  getTimestampReducer,\n  getTokenReducer,\n} from './getCallLogReducer';\nimport sleep from '../../lib/sleep';\nimport subscriptionFilters from '../../enums/subscriptionFilters';\nimport syncTypes from '../../enums/syncTypes';\nimport {\n  hasEndedCalls,\n  removeDuplicateIntermediateCalls,\n  removeInboundRingOutLegs,\n} from '../../lib/callLogHelpers';\nimport callResults from '../../enums/callResults';\nimport proxify from '../../lib/proxy/proxify';\n\nconst DEFAULT_TTL = 5 * 60 * 1000;\nconst DEFAULT_TOKEN_EXPIRES_IN = 60 * 60 * 1000;\nconst DEFAULT_DAY_SPAN = 7;\nconst RECORD_COUNT = 250;\nconst DEFAULT_TIME_TO_RETRY = 62 * 1000;\nconst SYNC_DELAY = 30 * 1000;\n\nexport function processData(data) {\n  return {\n    records: data.records,\n    timestamp: (new Date(data.syncInfo.syncTime)).getTime(),\n    syncToken: data.syncInfo.syncToken,\n  };\n}\n\nexport function getISODateFrom(daySpan) {\n  const d = getDateFrom(daySpan);\n  return d.toISOString();\n}\n\nexport function getISODateTo(records) {\n  let dateTo;\n  records.forEach((call) => {\n    if (!dateTo || call.startTime < dateTo) dateTo = call.startTime;\n  });\n  return dateTo && (new Date(dateTo)).toISOString();\n}\n// to not use $ at the end, presence with sipData has extra query parameters\nconst presenceRegExp = /\\/presence\\?detailedTelephonyState=true/;\n\n/**\n * @class\n * @description Call log managing module\n */\n@Module({\n  deps: [\n    'Auth',\n    'Client',\n    'Subscription',\n    'RolesAndPermissions',\n    { dep: 'TabManager', optional: true },\n    { dep: 'Storage', optional: true },\n    { dep: 'CallLogOptions', optional: true }\n  ]\n})\nexport default class CallLog extends Pollable {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Auth} params.auth - auth module instance\n   * @param {Client} params.client - client module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {Subscription} params.subscription - subscription module instance\n   * @param {RolesAndPermissions} params.rolesAndPermissions - rolesAndPermissions module instance\n   * @param {Number} params.ttl - local cache timestamp\n   * @param {Number} params.tokenExpiresIn - time for token expire\n   * @param {Number} params.timeToRetry - waiting time to retry\n   * @param {Number} params.daySpan - day span of call log\n   * @param {Bool} params.polling - polling flag\n   * @param {Bool} params.disableCache - disable cache flag, default false\n   */\n  constructor({\n    auth,\n    client,\n    storage,\n    subscription,\n    rolesAndPermissions,\n    tabManager,\n    ttl = DEFAULT_TTL,\n    tokenExpiresIn = DEFAULT_TOKEN_EXPIRES_IN,\n    timeToRetry = DEFAULT_TIME_TO_RETRY,\n    daySpan = DEFAULT_DAY_SPAN,\n    polling = true,\n    disableCache = false,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._client = client;\n    if (!disableCache) {\n      this._storage = storage;\n    }\n    this._subscription = subscription;\n    this._rolesAndPermissions = rolesAndPermissions;\n    this._tabManager = tabManager;\n    this._dataStorageKey = 'callLogData';\n    this._tokenStorageKey = 'callLogToken';\n    this._timestampStorageKey = 'callLogTimestamp';\n    this._ttl = ttl;\n    this._tokenExpiresIn = tokenExpiresIn;\n    this._timeToRetry = timeToRetry;\n    this._daySpan = daySpan;\n    this._polling = polling;\n\n    if (this._storage) {\n      this._reducer = getCallLogReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._dataStorageKey,\n        reducer: getDataReducer(this.actionTypes),\n      });\n      this._storage.registerReducer({\n        key: this._tokenStorageKey,\n        reducer: getTokenReducer(this.actionTypes),\n      });\n      this._storage.registerReducer({\n        key: this._timestampStorageKey,\n        reducer: getTimestampReducer(this.actionTypes),\n      });\n    } else {\n      this._reducer = getCallLogReducer(this.actionTypes, {\n        data: getDataReducer(this.actionTypes),\n        token: getTokenReducer(this.actionTypes),\n        timestamp: getTimestampReducer(this.actionTypes),\n      });\n    }\n\n    this.addSelector('calls',\n      () => this.data,\n      data => (\n        // TODO make sure removeDuplicateIntermediateCalls is necessary here\n        removeInboundRingOutLegs(removeDuplicateIntermediateCalls(data.filter(call => (\n          // [RCINT-3472] calls with result === 'stopped' seems to be useless\n          call.result !== callResults.stopped &&\n          // [RCINT-51111] calls with result === 'busy'\n          call.result !== callResults.busy &&\n          // [RCINT-6839]\n          // Call processing result is undefined\n          call.result !== callResults.unknown &&\n          // Outgoing fax sending has failed\n          call.result !== callResults.faxSendError &&\n          // Incoming fax has failed to be received\n          call.result !== callResults.faxReceiptError &&\n          // Outgoing fax has failed because of no answer\n          call.result !== callResults.callFailed &&\n          // Outgoing fax sending has been stopped\n          call.result !== callResults.stopped &&\n          // Error Internal error occurred when receiving fax\n          call.result !== callResults.faxReceipt\n        ))))\n      ),\n    );\n\n    this._promise = null;\n    this._lastMessage = null;\n  }\n  _subscriptionHandler = async (message) => {\n    if (\n      presenceRegExp.test(message.event) &&\n      message.body &&\n      message.body.activeCalls &&\n      hasEndedCalls(message.body.activeCalls)\n    ) {\n      const { ownerId } = this._auth;\n      await sleep(SYNC_DELAY);\n      if (\n        ownerId === this._auth.ownerId &&\n        (!this._storage || !this._tabManager || this._tabManager.active)\n      ) {\n        this.sync();\n      }\n    }\n  }\n  _onStateChange = async () => {\n    if (\n      this._auth.loggedIn &&\n      (!this._storage || this._storage.ready) &&\n      (!this._subscription || this._subscription.ready) &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this._rolesAndPermissions.ready &&\n      this.status === moduleStatuses.pending\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n        daySpan: this._daySpan,\n      });\n      if (\n        this.token &&\n        (\n          !this.timestamp ||\n          Date.now() - this.timestamp > this._tokenExpiresIn\n        )\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.clearToken,\n        });\n      }\n      if (this._rolesAndPermissions.permissions.ReadCallLog) {\n        await this._init();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (\n      (\n        !this._auth.loggedIn ||\n        (!!this._storage && !this._storage.ready) ||\n        (this._subscription && !this._subscription.ready) ||\n        (this._tabManager && !this._tabManager.ready) ||\n        !this._rolesAndPermissions.ready\n      ) &&\n      this.ready\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this._clearTimeout();\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    } else if (\n      this.ready &&\n      this._subscription &&\n      this._subscription.ready &&\n      this._subscription.message &&\n      this._subscription.message !== this._lastMessage\n    ) {\n      this._lastMessage = this._subscription.message;\n      this._subscriptionHandler(this._lastMessage);\n    }\n  }\n\n  async _init() {\n    if (!this._storage || !this._tabManager || this._tabManager.active) {\n      try {\n        await this.sync();\n      } catch (e) {\n        console.log(e);\n      }\n    } else if (this._polling) {\n      this._startPolling();\n    }\n    if (this._subscription) {\n      this._subscription.subscribe(subscriptionFilters.detailedPresence);\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(this._onStateChange);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get data() {\n    if (this._storage) {\n      return this._storage.getItem(this._dataStorageKey);\n    }\n    return this.state.data;\n  }\n\n  get calls() {\n    return this._selectors.calls();\n  }\n\n  get token() {\n    if (this._storage) {\n      return this._storage.getItem(this._tokenStorageKey);\n    }\n    return this.state.token;\n  }\n\n  get timestamp() {\n    if (this._storage) {\n      return this._storage.getItem(this._timestampStorageKey);\n    }\n    return this.state.timestamp;\n  }\n\n  get ttl() {\n    return this._ttl;\n  }\n\n  get timeToRetry() {\n    return this._timeToRetry;\n  }\n\n  get canReadCallLog() {\n    return !!this._rolesAndPermissions.permissions.ReadCallLog;\n  }\n\n  get canReadPresence() {\n    return !!this._rolesAndPermissions.permissions.ReadPresenceStatus;\n  }\n\n  @proxify\n  async _fetch({ dateFrom, dateTo }) {\n    return fetchList(params => (\n      this._client.account().extension().callLog().list({\n        ...params,\n        dateFrom,\n        dateTo,\n      })\n    ));\n  }\n  @proxify\n  async _iSync() {\n    const ownerId = this._auth.ownerId;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.iSync,\n      });\n      const data = await this._client.account().extension().callLogSync().list({\n        syncType: syncTypes.iSync,\n        syncToken: this.token,\n      });\n      if (ownerId !== this._auth.ownerId) throw Error('request aborted');\n      this.store.dispatch({\n        type: this.actionTypes.iSyncSuccess,\n        ...processData(data),\n        daySpan: this._daySpan,\n      });\n    } catch (error) {\n      if (ownerId === this._auth.ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.iSyncError,\n          error,\n        });\n        throw error;\n      }\n    }\n  }\n  @proxify\n  async _fSync() {\n    const ownerId = this._auth.ownerId;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.fSync,\n      });\n\n      const dateFrom = getISODateFrom(this._daySpan);\n      const data = await this._client.account().extension().callLogSync().list({\n        recordCount: RECORD_COUNT,\n        syncType: syncTypes.fSync,\n        dateFrom,\n      });\n      if (ownerId !== this._auth.ownerId) throw Error('request aborted');\n      let supplementRecords;\n      const {\n        records,\n        timestamp,\n        syncToken,\n      } = processData(data);\n      if (records.length >= RECORD_COUNT) {\n        // reach the max record count\n        supplementRecords = (await this._fetch({\n          dateFrom,\n          dateTo: getISODateTo(records),\n        }));\n      }\n      if (ownerId !== this._auth.ownerId) throw Error('request aborted');\n      this.store.dispatch({\n        type: this.actionTypes.fSyncSuccess,\n        records,\n        supplementRecords,\n        timestamp,\n        syncToken,\n        daySpan: this._daySpan,\n      });\n    } catch (error) {\n      if (ownerId === this._auth.ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.fSyncError,\n          error,\n        });\n        throw error;\n      }\n    }\n  }\n  @proxify\n  async _sync(syncType) {\n    const ownerId = this._auth.ownerId;\n    try {\n      let shouldFSync = syncType === syncTypes.fSync;\n      if (!shouldFSync) {\n        try {\n          await this._iSync();\n        } catch (error) {\n          shouldFSync = true;\n        }\n      }\n      if (shouldFSync && ownerId === this._auth.ownerId) {\n        await this._fSync();\n      }\n      if (this._polling) {\n        this._startPolling();\n      }\n    } catch (error) {\n      if (ownerId === this._auth.ownerId) {\n        if (this._polling) {\n          this._startPolling(this.timeToRetry);\n        } else {\n          this._retry();\n        }\n      }\n    }\n    this._promise = null;\n  }\n  @proxify\n  async sync(syncType = this.token ? syncTypes.iSync : syncTypes.fSync) {\n    if (!this._promise) {\n      this._promise = this._sync(syncType);\n      return this._promise;\n    } else if (!this._queueSync) {\n      this._queueSync = (async () => {\n        await this._promise;\n        this._promise = (async () => {\n          await sleep(300);\n          return this._sync(syncType);\n        })();\n        this._queueSync = null;\n        return this._promise;\n      })();\n      return this._queueSync;\n    }\n    return this._queueSync;\n  }\n  @proxify\n  fetchData() {\n    return this.sync();\n  }\n}\n"]}