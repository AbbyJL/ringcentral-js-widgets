{"version":3,"sources":["modules/Conversation/getConversationReducer.js"],"names":["getConversationStatusReducer","getConversationIdReducer","getMessagesReducer","getSenderNumberReducer","getRecipientsReducer","getMessageStoreUpdatedAtReducer","getMessageTextsReducer","getConversationReducer","types","state","conversationStatus","idle","type","reply","pushing","replySuccess","replyError","conversationId","loadId","load","unload","messages","senderNumber","recipients","updateRecipients","conversationsTimestamp","text","id","updateMessages","concat","filter","msg","removeMessage","status","messageStoreUpdatedAt","messageTexts"],"mappings":"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","file":"getConversationReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport conversationStatus from './conversationStatus';\n\nexport function getConversationStatusReducer(types) {\n  return (state = conversationStatus.idle, { type }) => {\n    switch (type) {\n      case types.reply:\n        return conversationStatus.pushing;\n      case types.replySuccess:\n      case types.replyError:\n        return conversationStatus.idle;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getConversationIdReducer(types) {\n  return (state = null, { type, conversationId }) => {\n    switch (type) {\n      case types.loadId:\n      case types.load:\n        return conversationId;\n      case types.unload:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMessagesReducer(types) {\n  return (state = [], { type, messages }) => {\n    switch (type) {\n      case types.load:\n        return messages;\n      case types.unload:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSenderNumberReducer(types) {\n  return (state = null, { type, senderNumber = null }) => {\n    switch (type) {\n      case types.load:\n        return senderNumber;\n      case types.unload:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getRecipientsReducer(types) {\n  return (state = [], { type, recipients }) => {\n    switch (type) {\n      case types.load:\n      case types.updateRecipients:\n        return recipients;\n      case types.unload:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMessageStoreUpdatedAtReducer(types) {\n  return (state = null, { type, conversationsTimestamp }) => {\n    switch (type) {\n      case types.load: {\n        return conversationsTimestamp;\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMessageTextsReducer(types) {\n  return (state = [], { type, text, id }) => {\n    switch (type) {\n      case types.updateMessages:\n        return [{ id, text }].concat(\n          state.filter(msg => typeof msg === 'object' && msg.id !== id),\n        );\n      case types.removeMessage:\n        return state.filter(msg => typeof msg === 'object' && msg.id !== id);\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getConversationReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    conversationStatus: getConversationStatusReducer(types),\n    id: getConversationIdReducer(types),\n    messages: getMessagesReducer(types),\n    senderNumber: getSenderNumberReducer(types),\n    recipients: getRecipientsReducer(types),\n    messageStoreUpdatedAt: getMessageStoreUpdatedAtReducer(types),\n    messageTexts: getMessageTextsReducer(types),\n  });\n}\n"]}