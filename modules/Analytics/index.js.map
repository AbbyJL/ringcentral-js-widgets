{"version":3,"sources":["modules/Analytics/index.js"],"names":["INIT_TRACK_LIST","Analytics","deps","dep","optional","analyticsKey","appName","appVersion","brandCode","auth","call","webphone","contacts","messageSender","adapter","routerInteraction","messageStore","contactDetails","callHistory","conference","userGuide","options","actionTypes","_analyticsKey","_appName","_appVersion","_brandCode","_auth","_call","_webphone","_contacts","_messageSender","_adapter","_router","_messageStore","_contactDetails","_callHistory","_conference","_userGuide","_reducer","_segment","_trackList","store","subscribe","_onStateChange","load","userId","name","global","analytics","identify","event","properties","trackProps","brand","track","router","eventPostfix","ready","lastActions","length","_promise","_processActions","forEach","action","key","dispatch","type","clear","methodNames","push","loginSuccess","ownerId","logout","connect","callSettingMode","callingModes","connectSuccess","registered","send","sendOver","createCallLog","createSMSLog","clickToDial","clickToSMS","viewEntity","createEntity","editCallLog","editSMSLog","locationChange","path","payload","pathname","target","_getTrackTarget","trackNavigation","callAnswer","isOnTransfer","updateSessions","clickToCall","fromType","removeMessage","markMessages","inviteWithText","updateAdditionalNumbers","joinAsHost","updateCarousel","curIdx","playing","routes","split","firstRoute","targets","find","undefined","state","lastAction","moduleStatuses","RcModule"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport actionTypes from './actionTypes';\nimport getAnalyticsReducer from './getAnalyticsReducer';\n\nimport { Segment } from '../../lib/Analytics';\nimport callingModes from '../CallingSettings/callingModes';\n\nconst INIT_TRACK_LIST = [\n  '_authentication',\n  '_logout',\n  '_callAttempt',\n  '_callConnected',\n  '_webRTCRegistration',\n  '_smsAttempt',\n  '_smsSent',\n  '_logCall',\n  '_logSMS',\n  '_clickToDial',\n  '_clickToSMS',\n  '_viewEntity',\n  '_createEntity',\n  '_editCallLog',\n  '_editSMSLog',\n  '_navigate',\n  '_inboundCall',\n  '_coldTransfer',\n  '_textClickToDial',\n  '_voicemailClickToDial',\n  '_voicemailClickToSMS',\n  '_voicemailDelete',\n  '_voicemailFlag',\n  '_contactDetailClickToDial',\n  '_contactDetailClickToSMS',\n  '_callHistoryClickToDial',\n  '_callHistoryClickToSMS',\n  '_conferenceInviteWithText',\n  '_conferenceAddDialInNumber',\n  '_conferenceJoinAsHost',\n  '_showWhatsNew',\n];\n\n/**\n * @class\n * @description Analytics module.\n */\n@Module({\n  deps: [\n    { dep: 'Auth', optional: true },\n    { dep: 'Call', optional: true },\n    { dep: 'Webphone', optional: true },\n    { dep: 'Contacts', optional: true },\n    { dep: 'MessageSender', optional: true },\n    { dep: 'MessageStore', optional: true },\n    { dep: 'ContactDetails', optional: true },\n    { dep: 'CallHistory', optional: true },\n    { dep: 'Conference', optional: true },\n    { dep: 'RouterInteraction', optional: true },\n    { dep: 'AnalyticsAdapter', optional: true },\n    { dep: 'AnalyticsOptions', optional: true },\n    { dep: 'UserGuide', optional: true },\n  ]\n})\nexport default class Analytics extends RcModule {\n  constructor({\n    // config\n    analyticsKey,\n    appName,\n    appVersion,\n    brandCode,\n    // modules\n    auth,\n    call,\n    webphone,\n    contacts,\n    messageSender,\n    adapter,\n    routerInteraction,\n    messageStore,\n    contactDetails,\n    callHistory,\n    conference,\n    userGuide,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes\n    });\n    // config\n    this._analyticsKey = analyticsKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._brandCode = brandCode;\n    // modules\n    this._auth = auth;\n    this._call = call;\n    this._webphone = webphone;\n    this._contacts = contacts;\n    this._messageSender = messageSender;\n    this._adapter = adapter;\n    this._router = routerInteraction;\n    this._messageStore = messageStore;\n    this._contactDetails = contactDetails;\n    this._callHistory = callHistory;\n    this._conference = conference;\n    this._userGuide = userGuide;\n    // init\n    this._reducer = getAnalyticsReducer(this.actionTypes);\n    this._segment = Segment();\n    this._trackList = INIT_TRACK_LIST;\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n    this._segment.load(this._analyticsKey);\n  }\n\n  identify({\n    userId,\n    name,\n  }) {\n    global.analytics.identify(userId, {\n      name\n    });\n  }\n\n  track(event, {\n    ...properties\n  }) {\n    const trackProps = {\n      appName: this._appName,\n      appVersion: this._appVersion,\n      brand: this._brandCode,\n      ...properties,\n    };\n    global.analytics.track(event, trackProps);\n  }\n\n  trackNavigation({ router, eventPostfix }) {\n    const trackProps = {\n      router,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      brand: this._brandCode,\n    };\n    this.track(`Navigator Clicked (${eventPostfix})`, trackProps);\n  }\n\n  async _onStateChange() {\n    if (this.ready && this.lastActions.length && !this._promise) {\n      this._promise = this._processActions();\n    }\n  }\n  async _processActions() {\n    if (this.lastActions.length) {\n      await sleep(300);\n      this.lastActions.forEach((action) => {\n        this._trackList.forEach((key) => {\n          this[key](action);\n        });\n      });\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.clear,\n      });\n    }\n  }\n\n  /**\n   * Append more action to track\n   * First, Inherit this class and declare channel specific method on it\n   * Then append more method name to track using this method\n   * @param {string[]} methodNames\n   */\n  appendTrackList(methodNames) {\n    this._trackList.push(...methodNames);\n  }\n\n  _authentication(action) {\n    if (this._auth && this._auth.actionTypes.loginSuccess === action.type) {\n      this.identify({\n        userId: this._auth.ownerId,\n      });\n      this.track('Authentication');\n    }\n  }\n\n  _logout(action) {\n    if (this._auth && this._auth.actionTypes.logout === action.type) {\n      this.track('Logout');\n    }\n  }\n\n  _callAttempt(action) {\n    if (this._call && this._call.actionTypes.connect === action.type) {\n      if (action.callSettingMode === callingModes.webphone) {\n        this.track('Call Attempt WebRTC');\n      } else {\n        this.track('Call Attempt', {\n          callSettingMode: action.callSettingMode\n        });\n      }\n    }\n  }\n\n  _callConnected(action) {\n    if (this._call && this._call.actionTypes.connectSuccess === action.type) {\n      if (action.callSettingMode === callingModes.webphone) {\n        this.track('Outbound WebRTC Call Connected');\n      } else {\n        this.track('Outbound Call Connected', {\n          callSettingMode: action.callSettingMode\n        });\n      }\n    }\n  }\n\n  _webRTCRegistration(action) {\n    if (this._webphone && this._webphone.actionTypes.registered === action.type) {\n      this.track('WebRTC registration');\n    }\n  }\n\n  _smsAttempt(action) {\n    if (this._messageSender && this._messageSender.actionTypes.send === action.type) {\n      this.track('SMS Attempt');\n    }\n  }\n\n  _smsSent(action) {\n    if (this._messageSender && this._messageSender.actionTypes.sendOver === action.type) {\n      this.track('SMS Sent');\n    }\n  }\n\n  _logCall(action) {\n    if (this._adapter && this._adapter.actionTypes.createCallLog === action.type) {\n      this.track('Log Call');\n    }\n  }\n\n  _logSMS(action) {\n    if (this._adapter && this._adapter.actionTypes.createSMSLog === action.type) {\n      this.track('Log SMS');\n    }\n  }\n\n  _clickToDial(action) {\n    if (this._adapter && this._adapter.actionTypes.clickToDial === action.type) {\n      this.track('Click To Dial');\n    }\n  }\n\n  _clickToSMS(action) {\n    if (this._adapter && this._adapter.actionTypes.clickToSMS === action.type) {\n      this.track('Click To SMS');\n    }\n  }\n\n  _viewEntity(action) {\n    if (this._adapter && this._adapter.actionTypes.viewEntity === action.type) {\n      this.track('View Entity Details');\n    }\n  }\n\n  _createEntity(action) {\n    if (this._adapter && this._adapter.actionTypes.createEntity === action.type) {\n      this.track('Add Entity');\n    }\n  }\n\n  _editCallLog(action) {\n    if (this._adapter && this._adapter.actionTypes.editCallLog === action.type) {\n      this.track('Edit Call Log');\n    }\n  }\n\n  _editSMSLog(action) {\n    if (this._adapter && this._adapter.actionTypes.editSMSLog === action.type) {\n      this.track('Edit SMS Log');\n    }\n  }\n\n  _navigate(action) {\n    if (this._router && this._router.actionTypes.locationChange === action.type) {\n      const path = action.payload && action.payload.pathname;\n      const target = this._getTrackTarget(path);\n      if (target) {\n        this.trackNavigation({\n          ...target\n        });\n      }\n    }\n  }\n\n  _inboundCall(action) {\n    if (this._webphone && this._webphone.actionTypes.callAnswer === action.type) {\n      this.track('Inbound WebRTC Call Connected');\n    }\n  }\n\n  _coldTransfer(action) {\n    if (this._webphone\n      && this._webphone.isOnTransfer === true\n      && this._webphone.actionTypes.updateSessions === action.type\n    ) {\n      this.track('Cold Transfer Call');\n    }\n  }\n\n  _textClickToDial(action) {\n    if (this._messageStore\n      && this._messageStore.actionTypes.clickToCall === action.type\n      && (action.fromType === 'Pager' || action.fromType === 'SMS')) {\n      this.track('Click To Dial (Text List)');\n    }\n  }\n\n  _voicemailClickToDial(action) {\n    if (this._messageStore\n      && this._messageStore.actionTypes.clickToCall === action.type\n      && action.fromType === 'VoiceMail') {\n      this.track('Click To Dial (Voicemail List)');\n    }\n  }\n\n  _voicemailClickToSMS(action) {\n    if (this._messageStore && this._messageStore.actionTypes.clickToSMS === action.type) {\n      this.track('Click to SMS (Voicemail List)');\n    }\n  }\n\n  _voicemailDelete(action) {\n    if (this._messageStore && this._messageStore.actionTypes.removeMessage === action.type) {\n      this.track('Delete Voicemail');\n    }\n  }\n\n  _voicemailFlag(action) {\n    if (this._messageStore\n      && this._messageStore.actionTypes.markMessages === action.type) {\n      this.track('Flag Voicemail');\n    }\n  }\n\n  _contactDetailClickToDial(action) {\n    if (this._contactDetails\n      && this._contactDetails.actionTypes.clickToCall === action.type) {\n      this.track('Click To Dial (Contact Details)');\n    }\n  }\n\n  _contactDetailClickToSMS(action) {\n    if (this._contactDetails\n      && this._contactDetails.actionTypes.clickToSMS === action.type) {\n      this.track('Click To SMS (Contact Details)');\n    }\n  }\n\n  _callHistoryClickToDial(action) {\n    if (this._callHistory\n      && this._callHistory.actionTypes.clickToCall === action.type) {\n      this.track('Click To dial (Call History)');\n    }\n  }\n\n  _callHistoryClickToSMS(action) {\n    if (this._callHistory\n      && this._callHistory.actionTypes.clickToSMS === action.type) {\n      this.track('Click To SMS (Call History)');\n    }\n  }\n\n\n  _conferenceInviteWithText(action) {\n    if (this._conference\n      && this._conference.actionTypes.inviteWithText === action.type) {\n      this.track('Invite With Text (Conference)');\n    }\n  }\n\n  _conferenceAddDialInNumber(action) {\n    if (this._conference\n      && this._conference.actionTypes.updateAdditionalNumbers === action.type) {\n      this.track('Select Additional Dial-in Number (Conference)');\n    }\n  }\n\n  _conferenceJoinAsHost(action) {\n    if (this._conference\n      && this._conference.actionTypes.joinAsHost === action.type) {\n      this.track('Join As Host (Conference)');\n    }\n  }\n\n  _showWhatsNew(action) {\n    if (this._userGuide\n      && this._userGuide.actionTypes.updateCarousel === action.type\n      && action.curIdx === 0\n      && action.playing) {\n      this.track('What\\'s New');\n    }\n  }\n\n\n  _getTrackTarget(path) {\n    if (path) {\n      const routes = path.split('/');\n      const firstRoute = routes.length > 1 ? `/${routes[1]}` : '';\n\n      const targets = [{\n        eventPostfix: 'Dialer',\n        router: '/dialer',\n      }, {\n        eventPostfix: 'Compose SMS',\n        router: '/composeText',\n      }, {\n        eventPostfix: 'Messages',\n        router: '/messages',\n      }, {\n        eventPostfix: 'Conversation',\n        router: '/conversations',\n      }, {\n        eventPostfix: 'Call History',\n        router: '/history',\n      }, {\n        eventPostfix: 'Call List',\n        router: '/calls',\n      }, {\n        eventPostfix: 'Settings',\n        router: '/settings',\n      }, {\n        eventPostfix: 'Conference',\n        router: '/conference',\n      }, {\n        eventPostfix: 'Meeting',\n        router: '/meeting',\n      }, {\n        eventPostfix: 'Contacts',\n        router: '/contacts',\n      }];\n      return targets.find(target => firstRoute === target.router);\n    }\n    return undefined;\n  }\n\n  get analytics() {\n    return global.analytics;\n  }\n\n  get lastActions() {\n    return this.state.lastAction;\n  }\n\n  get status() {\n    return moduleStatuses.ready;\n  }\n\n  get ready() {\n    return true;\n  }\n\n  get pending() {\n    return false;\n  }\n}\n"]}