{"version":3,"sources":["modules/DialerUI/index.js"],"names":["getToNumberFieldReducer","types","state","type","phoneNumber","setToNumberField","loadLastCallState","setRecipient","clearToNumberField","resetSuccess","callSuccess","getRecipientReducer","recipient","clearRecipient","DialerUI","name","deps","dep","optional","call","options","_call","_alert","alert","_storageKey","pending","ready","store","dispatch","actionTypes","init","initSuccess","reset","toNumberField","trim","length","lastRecipient","lastPhoneNumber","warning","message","noToNumber","status","_storage","getItem"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from 'ringcentral-integration/lib/RcModule';\r\nimport Enum from 'ringcentral-integration/lib/Enum';\r\nimport { Module } from 'ringcentral-integration/lib/di';\r\nimport { combineReducers } from 'redux';\r\nimport { createSelector } from 'reselect';\r\nimport proxify from 'ringcentral-integration/lib/proxy/proxify';\r\nimport getter from 'ringcentral-integration/lib/getter';\r\nimport ensureExist from 'ringcentral-integration/lib/ensureExist';\r\nimport getModuleStatusReducer from 'ringcentral-integration/lib/getModuleStatusReducer';\r\nimport moduleActionTypes from 'ringcentral-integration/enums/moduleActionTypes';\r\nimport callErrors from 'ringcentral-integration/modules/Call/callErrors'\r\n\r\nfunction getToNumberFieldReducer(types) {\r\n  return (state = '', { type, phoneNumber }) => {\r\n    switch (type) {\r\n      case types.setToNumberField:\r\n      case types.loadLastCallState:\r\n        return phoneNumber;\r\n      case types.setRecipient:\r\n      case types.clearToNumberField:\r\n      case types.resetSuccess:\r\n      case types.callSuccess:\r\n        return '';\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n}\r\nfunction getRecipientReducer(types) {\r\n  return (state = null, { type, recipient }) => {\r\n    switch (type) {\r\n      case types.setRecipient:\r\n      case types.loadLastCallState:\r\n        return recipient;\r\n      case types.clearRecipient:\r\n      case types.resetSuccess:\r\n      case types.callSuccess:\r\n        return null;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n}\r\n\r\n@Module({\r\n  name: 'DialerUI',\r\n  deps: [\r\n    'Call',\r\n    'Alert',\r\n    { dep: 'DialerUIOptions', optional: true },\r\n  ],\r\n})\r\nexport default class DialerUI extends RcModule {\r\n  constructor({\r\n    call,\r\n    ...options\r\n  }) {\r\n    super({\r\n      ...options,\r\n    });\r\n    this._call = this:: ensureExist(call, 'call');\r\n    this._alert = this::ensureExist(alert, 'alert');\r\n    this._storageKey = 'dialerUIData';\r\n  }\r\n\r\n  get _actionTypes() {\r\n    return new Enum([\r\n      ...Object.keys(moduleActionTypes),\r\n      'setToNumberField',\r\n      'clearToNumberField',\r\n      'setRecipient',\r\n      'clearRecipient',\r\n      'loadLastCallState',\r\n      'callSuccess',\r\n    ], 'dialerUI');\r\n  }\r\n\r\n  get reducer() {\r\n    return combineReducers({\r\n      status: getModuleStatusReducer(this.actionTypes),\r\n      toNumberField: getToNumberFieldReducer(this.actionTypes),\r\n      recipient: getRecipientReducer(this.actionTypes),\r\n    });\r\n  }\r\n\r\n  async _onStateChange() {\r\n    if (\r\n      this.pending &&\r\n      this._call.ready\r\n    ) {\r\n      this.store.dispatch({\r\n        type: this.actionTypes.init,\r\n      });\r\n      this.store.dispatch({\r\n        type: this.actionTypes.initSuccess,\r\n      });\r\n    } else if (\r\n      this.ready &&\r\n      (\r\n        !this._call.ready\r\n      )\r\n    ) {\r\n      this.store.dispatch({\r\n        type: this.actionTypes.reset,\r\n      });\r\n      this.store.dispatch({\r\n        type: this.actionTypes.resetSuccess,\r\n      });\r\n    }\r\n  }\r\n\r\n  @proxify\r\n  async clearToNumberField() {\r\n    this.store.dispatch({\r\n      type: this.actionTypes.clearToNumberField,\r\n    });\r\n  }\r\n\r\n  @proxify\r\n  async setToNumberField(phoneNumber) {\r\n    if (this.toNumberField !== phoneNumber) {\r\n      this.store.dispatch({\r\n        type: this.actionTypes.setToNumberField,\r\n        phoneNumber,\r\n      });\r\n    }\r\n  }\r\n\r\n  @proxify\r\n  async setRecipient(recipient) {\r\n    this.store.dispatch({\r\n      type: this.actionTypes.setRecipient,\r\n      recipient,\r\n    });\r\n  }\r\n  @proxify\r\n  async clearRecipient() {\r\n    this.store.dispatch({\r\n      type: this.actionTypes.clearRecipient,\r\n    });\r\n  }\r\n\r\n\r\n  @proxify\r\n  async onCallButtonClick() {\r\n    if (\r\n      `${this.toNumberField}`.trim().length === 0 &&\r\n      !this.recipient\r\n    ) {\r\n      if (!this._call.lastRecipient && !this._call.lastPhoneNumber) {\r\n        this._alert.warning({\r\n          message: callErrors.noToNumber,\r\n        });\r\n      } else {\r\n        this.store.dispatch({\r\n          type: this.actionTypes.loadLastCallState,\r\n          phoneNumber: this._call.lastPhoneNumber,\r\n          recipient: this._call.lastRecipient,\r\n        });\r\n      }\r\n    } else {\r\n      try {\r\n        await this._call.call({\r\n          phoneNumber: this.toNumberField,\r\n          recipient: this.recipient,\r\n        });\r\n        this.store.dispatch({\r\n          type: this.actionTypes.callSuccess,\r\n        });\r\n      } catch (error) {\r\n        /* ignore error */\r\n      }\r\n    }\r\n  }\r\n\r\n  get lastDialedState() {\r\n    return this._storage.getItem(this._storageKey);\r\n  }\r\n\r\n  get toNumberField() {\r\n    return this.state.toNumberField;\r\n  }\r\n\r\n  get recipient() {\r\n    return this.state.recipient;\r\n  }\r\n\r\n  get status() {\r\n    return this.state.status;\r\n  }\r\n}\r\n"]}