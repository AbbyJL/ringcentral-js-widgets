{"version":3,"sources":["modules/DialerUI/index.js"],"names":["getToNumberFieldReducer","types","state","type","phoneNumber","setToNumberField","loadLastCallState","call","setRecipient","clearToNumberField","resetSuccess","callSuccess","getRecipientReducer","recipient","clearRecipient","DialerUI","name","deps","dep","optional","alert","options","_call","_alert","_storageKey","_callHooks","pending","ready","store","dispatch","actionTypes","init","initSuccess","reset","toNumberField","shouldClean","forEach","hook","callError","error","trim","length","lastRecipient","lastPhoneNumber","warning","message","noToNumber","status","_storage","getItem"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from 'ringcentral-integration/lib/RcModule';\nimport Enum from 'ringcentral-integration/lib/Enum';\nimport { Module } from 'ringcentral-integration/lib/di';\nimport { combineReducers } from 'redux';\nimport { createSelector } from 'reselect';\nimport proxify from 'ringcentral-integration/lib/proxy/proxify';\nimport getter from 'ringcentral-integration/lib/getter';\nimport ensureExist from 'ringcentral-integration/lib/ensureExist';\nimport getModuleStatusReducer from 'ringcentral-integration/lib/getModuleStatusReducer';\nimport moduleActionTypes from 'ringcentral-integration/enums/moduleActionTypes';\nimport callErrors from 'ringcentral-integration/modules/Call/callErrors';\n\nfunction getToNumberFieldReducer(types) {\n  return (state = '', { type, phoneNumber }) => {\n    switch (type) {\n      case types.setToNumberField:\n      case types.loadLastCallState:\n      case types.call:\n        return phoneNumber;\n      case types.setRecipient:\n      case types.clearToNumberField:\n      case types.resetSuccess:\n      case types.callSuccess:\n        return '';\n      default:\n        return state;\n    }\n  };\n}\nfunction getRecipientReducer(types) {\n  return (state = null, { type, recipient }) => {\n    switch (type) {\n      case types.setRecipient:\n      case types.loadLastCallState:\n      case types.call:\n        return recipient;\n      case types.clearRecipient:\n      case types.resetSuccess:\n      case types.callSuccess:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\n@Module({\n  name: 'DialerUI',\n  deps: [\n    'Call',\n    'Alert',\n    { dep: 'DialerUIOptions', optional: true },\n  ],\n})\nexport default class DialerUI extends RcModule {\n  constructor({\n    call,\n    alert,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._call = this:: ensureExist(call, 'call');\n    this._alert = this::ensureExist(alert, 'alert');\n    this._storageKey = 'dialerUIData';\n    this._callHooks = [];\n  }\n\n  get _actionTypes() {\n    return new Enum([\n      ...Object.keys(moduleActionTypes),\n      'setToNumberField',\n      'clearToNumberField',\n      'setRecipient',\n      'clearRecipient',\n      'loadLastCallState',\n      'call',\n      'callError',\n      'callSuccess',\n    ], 'dialerUI');\n  }\n\n\n  get reducer() {\n    return combineReducers({\n      status: getModuleStatusReducer(this.actionTypes),\n      toNumberField: getToNumberFieldReducer(this.actionTypes),\n      recipient: getRecipientReducer(this.actionTypes),\n    });\n  }\n\n  async _onStateChange() {\n    if (\n      this.pending &&\n      this._call.ready\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (\n      this.ready &&\n      (\n        !this._call.ready\n      )\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  @proxify\n  async clearToNumberField() {\n    this.store.dispatch({\n      type: this.actionTypes.clearToNumberField,\n    });\n  }\n\n  @proxify\n  async setToNumberField(phoneNumber) {\n    if (this.toNumberField !== phoneNumber) {\n      this.store.dispatch({\n        type: this.actionTypes.setToNumberField,\n        phoneNumber,\n      });\n    }\n  }\n\n  @proxify\n  async setRecipient(recipient, shouldClean = true) {\n    this.store.dispatch({\n      type: this.actionTypes.setRecipient,\n      recipient,\n    });\n    if (shouldClean) {\n      await this.clearToNumberField();\n    }\n  }\n  @proxify\n  async clearRecipient() {\n    this.store.dispatch({\n      type: this.actionTypes.clearRecipient,\n    });\n  }\n\n  @proxify\n  async call({\n    phoneNumber = '',\n    recipient = null,\n  }) {\n    if (phoneNumber || recipient) {\n      this.store.dispatch({\n        type: this.actionTypes.call,\n        phoneNumber,\n        recipient,\n      });\n      this._callHooks.forEach(hook => hook({\n        phoneNumber,\n        recipient,\n      }));\n      try {\n        await this._call.call({\n          phoneNumber: this.toNumberField,\n          recipient: this.recipient,\n        });\n        this.store.dispatch({\n          type: this.actionTypes.callSuccess,\n        });\n      } catch (error) {\n        this.store.dispatch({\n          type: this.actionTypes.callError,\n          error,\n        });\n      }\n    }\n  }\n\n  @proxify\n  async onCallButtonClick() {\n    if (\n      `${this.toNumberField}`.trim().length === 0 &&\n      !this.recipient\n    ) {\n      if (!this._call.lastRecipient && !this._call.lastPhoneNumber) {\n        this._alert.warning({\n          message: callErrors.noToNumber,\n        });\n      } else {\n        this.store.dispatch({\n          type: this.actionTypes.loadLastCallState,\n          phoneNumber: this._call.lastPhoneNumber,\n          recipient: this._call.lastRecipient,\n        });\n      }\n    } else {\n      await this.call({\n        phoneNumber: this.toNumberField,\n        recipient: this.recipient,\n      });\n    }\n  }\n\n  get lastDialedState() {\n    return this._storage.getItem(this._storageKey);\n  }\n\n  get toNumberField() {\n    return this.state.toNumberField;\n  }\n\n  get recipient() {\n    return this.state.recipient;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"]}