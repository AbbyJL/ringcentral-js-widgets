{"version":3,"sources":["modules/CallLogSection/getStorageReducer.js"],"names":["getStorageReducer","getCallsMappingReducer","types","state","type","call","sessionId","update","cleanUp","getTasksMappingReducer","task","getShowLogSectionReducer","showLogSection","hideLogSection","getCurrentSessionIdReducer","calls","tasks","show","currentSessionId"],"mappings":";;;;;;;;;;;;;;kBAkEwBA,iB;;AAlExB;;;;AAEA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AACrC,SAAO,YAA2C;AAAA,QAA1CC,KAA0C,uEAAlC,EAAkC;AAAA;AAAA,QAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,QAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,QAAhBC,SAAgB,QAAhBA,SAAgB;;AAChD,YAAQF,IAAR;AACE,WAAKF,MAAMK,MAAX;AACE,0CACKJ,KADL,oCAEGG,SAFH,6BAGOH,MAAMG,SAAN,CAHP,EAIOD,IAJP;AAOF,WAAKH,MAAMM,OAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOL,KAAP;AAZJ;AAcD,GAfD;AAgBD;;AAED,SAASM,sBAAT,CAAgCP,KAAhC,EAAuC;AACrC,SAAO,YAA2C;AAAA,QAA1CC,KAA0C,uEAAlC,EAAkC;AAAA;AAAA,QAA5BC,IAA4B,SAA5BA,IAA4B;AAAA,QAAtBM,IAAsB,SAAtBA,IAAsB;AAAA,QAAhBJ,SAAgB,SAAhBA,SAAgB;;AAChD,YAAQF,IAAR;AACE,WAAKF,MAAMK,MAAX;AACE,0CACKJ,KADL,oCAEGG,SAFH,6BAGOH,MAAMG,SAAN,CAHP,EAIOI,IAJP;AAOF,WAAKR,MAAMM,OAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOL,KAAP;AAZJ;AAcD,GAfD;AAgBD;;AAED,SAASQ,wBAAT,CAAkCT,KAAlC,EAAyC;AACvC,SAAO,YAA6B;AAAA,QAA5BC,KAA4B,uEAApB,KAAoB;AAAA;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AAClC,YAAQA,IAAR;AACE,WAAKF,MAAMU,cAAX;AACE,eAAO,IAAP;AACF,WAAKV,MAAMW,cAAX;AACE,eAAO,KAAP;AACF;AACE,eAAOV,KAAP;AANJ;AAQD,GATD;AAUD;;AAED,SAASW,0BAAT,CAAoCZ,KAApC,EAA2C;AACzC,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9B,IAA8B;AAAA;AAAA,QAAtBC,IAAsB,SAAtBA,IAAsB;AAAA,QAAhBE,SAAgB,SAAhBA,SAAgB;;AAC5C,YAAQF,IAAR;AACE,WAAKF,MAAMU,cAAX;AACE,eAAON,SAAP;AACF,WAAKJ,MAAMW,cAAX;AACE,eAAO,IAAP;AACF;AACE,eAAOV,KAAP;AANJ;AAQD,GATD;AAUD;;AAEc,SAASH,iBAAT,CAA2BE,KAA3B,EAAkC;AAC/C,SAAO,4BAAgB;AACrBa,WAAOd,uBAAuBC,KAAvB,CADc;AAErBc,WAAOP,uBAAuBP,KAAvB,CAFc;AAGrBe,UAAMN,yBAAyBT,KAAzB,CAHe;AAIrBgB,sBAAkBJ,2BAA2BZ,KAA3B;AAJG,GAAhB,CAAP;AAMD","file":"getStorageReducer.js","sourcesContent":["import { combineReducers } from 'redux';\n\nfunction getCallsMappingReducer(types) {\n  return (state = {}, { type, call, sessionId }) => {\n    switch (type) {\n      case types.update:\n        return {\n          ...state,\n          [sessionId]: {\n            ...state[sessionId],\n            ...call\n          }\n        };\n      case types.cleanUp:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nfunction getTasksMappingReducer(types) {\n  return (state = {}, { type, task, sessionId }) => {\n    switch (type) {\n      case types.update:\n        return {\n          ...state,\n          [sessionId]: {\n            ...state[sessionId],\n            ...task\n          }\n        };\n      case types.cleanUp:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nfunction getShowLogSectionReducer(types) {\n  return (state = false, { type }) => {\n    switch (type) {\n      case types.showLogSection:\n        return true;\n      case types.hideLogSection:\n        return false;\n      default:\n        return state;\n    }\n  };\n}\n\nfunction getCurrentSessionIdReducer(types) {\n  return (state = null, { type, sessionId }) => {\n    switch (type) {\n      case types.showLogSection:\n        return sessionId;\n      case types.hideLogSection:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getStorageReducer(types) {\n  return combineReducers({\n    calls: getCallsMappingReducer(types),\n    tasks: getTasksMappingReducer(types),\n    show: getShowLogSectionReducer(types),\n    currentSessionId: getCurrentSessionIdReducer(types),\n  });\n}\n"]}