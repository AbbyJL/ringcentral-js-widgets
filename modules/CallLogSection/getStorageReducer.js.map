{"version":3,"sources":["modules/CallLogSection/getStorageReducer.js"],"names":["getStorageReducer","getCallsMappingReducer","types","state","type","identify","update","isEdited","saving","isSaving","saveSuccess","saveError","cleanUp","getCallsListReducer","getCurrentIdentifyReducer","showLogSection","hideLogSection","callsList","callsMapping","currentIdentify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;kBA+EwBA,iB;;AA/ExB;;;;AAEA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AACrC,SAAO,YAAoC;AAAA,QAAnCC,KAAmC,uEAA3B,EAA2B;AAAA;AAAA,QAArBC,IAAqB,QAArBA,IAAqB;AAAA,QAAfC,QAAe,QAAfA,QAAe;;AACzC,YAAQD,IAAR;AACE,WAAKF,MAAMI,MAAX;AACE,0CACKH,KADL,oCAEGE,QAFH,6BAGOF,MAAME,QAAN,CAHP;AAIIE,oBAAU;AAJd;AAOF,WAAKL,MAAMM,MAAX;AACE,0CACKL,KADL,oCAEGE,QAFH,6BAGOF,MAAME,QAAN,CAHP;AAIII,oBAAU;AAJd;AAOF,WAAKP,MAAMQ,WAAX;AACE,0CACKP,KADL,oCAEGE,QAFH,6BAGOF,MAAME,QAAN,CAHP;AAIIE,oBAAU,KAJd;AAKIE,oBAAU;AALd;AAQF,WAAKP,MAAMS,SAAX;AACE,0CACKR,KADL,oCAEGE,QAFH,6BAGOF,MAAME,QAAN,CAHP;AAIIE,oBAAU,IAJd;AAKIE,oBAAU;AALd;AAQF,WAAKP,MAAMU,OAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOT,KAAP;AAtCJ;AAwCD,GAzCD;AA0CD;;AAED,SAASU,mBAAT,CAA6BX,KAA7B,EAAoC;AAClC,SAAO,YAAoC;AAAA,QAAnCC,KAAmC,uEAA3B,EAA2B;AAAA;AAAA,QAArBC,IAAqB,SAArBA,IAAqB;AAAA,QAAfC,QAAe,SAAfA,QAAe;;AACzC,YAAQD,IAAR;AACE,WAAKF,MAAMI,MAAX;AACA,WAAKJ,MAAMM,MAAX;AACA,WAAKN,MAAMQ,WAAX;AACA,WAAKR,MAAMS,SAAX;AACE,eAAO,oBAAW,6DACbR,KADa,IAEhBE,QAFgB,GAAX,CAAP;AAIF,WAAKH,MAAMU,OAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOT,KAAP;AAZJ;AAcD,GAfD;AAgBD;;AAED,SAASW,yBAAT,CAAmCZ,KAAnC,EAA0C;AACxC,SAAO,YAAsC;AAAA,QAArCC,KAAqC,uEAA7B,IAA6B;AAAA;AAAA,QAArBC,IAAqB,SAArBA,IAAqB;AAAA,QAAfC,QAAe,SAAfA,QAAe;;AAC3C,YAAQD,IAAR;AACE,WAAKF,MAAMa,cAAX;AACE,eAAOV,QAAP;AACF,WAAKH,MAAMc,cAAX;AACE,eAAO,IAAP;AACF;AACE,eAAOb,KAAP;AANJ;AAQD,GATD;AAUD;;AAEc,SAASH,iBAAT,CAA2BE,KAA3B,EAAkC;AAC/C,SAAO,4BAAgB;AACrBe,eAAWJ,oBAAoBX,KAApB,CADU;AAErBgB,kBAAcjB,uBAAuBC,KAAvB,CAFO;AAGrBiB,qBAAiBL,0BAA0BZ,KAA1B;AAHI,GAAhB,CAAP;AAKD","file":"getStorageReducer.js","sourcesContent":["import { combineReducers } from 'redux';\n\nfunction getCallsMappingReducer(types) {\n  return (state = {}, { type, identify }) => {\n    switch (type) {\n      case types.update:\n        return {\n          ...state,\n          [identify]: {\n            ...state[identify],\n            isEdited: true,\n          },\n        };\n      case types.saving:\n        return {\n          ...state,\n          [identify]: {\n            ...state[identify],\n            isSaving: true\n          },\n        };\n      case types.saveSuccess:\n        return {\n          ...state,\n          [identify]: {\n            ...state[identify],\n            isEdited: false,\n            isSaving: false,\n          },\n        };\n      case types.saveError:\n        return {\n          ...state,\n          [identify]: {\n            ...state[identify],\n            isEdited: true,\n            isSaving: false,\n          },\n        };\n      case types.cleanUp:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nfunction getCallsListReducer(types) {\n  return (state = [], { type, identify }) => {\n    switch (type) {\n      case types.update:\n      case types.saving:\n      case types.saveSuccess:\n      case types.saveError:\n        return Array.from(new Set([\n          ...state,\n          identify\n        ]));\n      case types.cleanUp:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nfunction getCurrentIdentifyReducer(types) {\n  return (state = null, { type, identify }) => {\n    switch (type) {\n      case types.showLogSection:\n        return identify;\n      case types.hideLogSection:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getStorageReducer(types) {\n  return combineReducers({\n    callsList: getCallsListReducer(types),\n    callsMapping: getCallsMappingReducer(types),\n    currentIdentify: getCurrentIdentifyReducer(types),\n  });\n}\n"]}