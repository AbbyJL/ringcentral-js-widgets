{"version":3,"sources":["modules/CallLogSection/index.js"],"names":["CallLogSection","deps","storage","options","actionTypes","_storage","_storageReducer","_storageKey","registerReducer","key","reducer","_reducer","_shouldInit","store","dispatch","type","init","_onInit","initSuccess","_shouldReset","_onReset","resetSuccess","ready","_readyCheckFunction","pending","identify","saveSuccess","args","_onSuccess","saveError","_onError","show","currentIdentify","showLogSection","showNotification","currentNotificationIdentify","showLogNotification","logFunction","readyCheckFunction","onUpdate","onSuccess","onError","_logFunction","_onUpdate","update","callsMapping","isSaving","saving","result","_handleSuccess","_handleError","console","warn","_showLogSection","notificationIsExpand","_showLogNotification","closeLogSection","closeLogNotification","saveCallLog","expandNotification","getItem","callsList","state","status","list","mapping","map"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from 'ringcentral-integration/lib/RcModule';\nimport { Module } from 'ringcentral-integration/lib/di';\nimport ensureExist from 'ringcentral-integration/lib/ensureExist';\nimport getter from 'ringcentral-integration/lib/getter';\nimport { createSelector } from 'reselect';\nimport getCallLogSectionReducer from './getCallLogSectionReducer';\nimport getStorageReducer from './getStorageReducer';\nimport actionTypes from './actionTypes';\n\n@Module({\n  deps: [\n    'Storage',\n  ]\n})\nexport default class CallLogSection extends RcModule {\n  constructor(\n    {\n      storage,\n      ...options,\n    }\n  ) {\n    super(\n      {\n        storage,\n        actionTypes,\n        ...options,\n      }\n    );\n    this._storage = storage;\n    this._storageReducer = getStorageReducer(this.actionTypes);\n    this._storageKey = 'callLogSection';\n    this._storage.registerReducer({\n      key: this._storageKey,\n      reducer: this._storageReducer,\n    });\n    this._reducer = getCallLogSectionReducer(this.actionTypes);\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init\n      });\n      if (typeof this._onInit === 'function') {\n        await this._onInit();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess\n      });\n    } else if (this._shouldReset()) {\n      if (typeof this._onReset === 'function') {\n        await this._onReset();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._storage.ready &&\n      this._readyCheckFunction() &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._storage.ready ||\n        !this._readyCheckFunction()\n      ) && this.ready\n    );\n  }\n\n  _handleSuccess(identify, ...args) {\n    this.store.dispatch({\n      type: this.actionTypes.saveSuccess,\n      identify,\n    });\n    if (typeof this._onSuccess === 'function') this._onSuccess(identify, ...args);\n  }\n\n  _handleError(identify, ...args) {\n    this.store.dispatch({\n      type: this.actionTypes.saveError,\n      identify,\n    });\n    if (typeof this._onError === 'function') this._onError(identify, ...args);\n  }\n\n  _showLogSection(identify) {\n    if (!this.show || identify !== this.currentIdentify) {\n      this.store.dispatch({\n        type: this.actionTypes.showLogSection,\n        identify\n      });\n    }\n  }\n\n  _showLogNotification(identify) {\n    if (!this.showNotification || identify !== this.currentNotificationIdentify) {\n      this.store.dispatch({\n        type: this.actionTypes.showLogNotification,\n        identify\n      });\n    }\n  }\n\n  addLogHandler(\n    {\n      logFunction,\n      readyCheckFunction,\n      onUpdate,\n      onSuccess,\n      onError\n    }\n  ) {\n    this._logFunction = this::ensureExist(logFunction, 'logFunction');\n    this._readyCheckFunction = this::ensureExist(readyCheckFunction, 'readyCheckFunction');\n    this._onUpdate = onUpdate;\n    this._onSuccess = onSuccess;\n    this._onError = onError;\n  }\n\n  async updateCallLog(identify, ...args) {\n    this.store.dispatch({\n      type: this.actionTypes.update,\n      identify,\n    });\n    await this._onUpdate(identify, ...args);\n  }\n\n  async saveCallLog(identify, ...args) {\n    if (identify && (\n        !this.callsMapping[identify] || !this.callsMapping[identify].isSaving\n      )) {\n      this.store.dispatch({\n        type: this.actionTypes.saving,\n        identify,\n      });\n      try {\n        const result = await this._logFunction(identify, ...args);\n        if (result) {\n          this._handleSuccess(identify, ...args);\n        } else {\n          this._handleError(identify, ...args);\n        }\n      } catch (e) {\n        this._handleError(identify, ...args);\n        console.warn(e);\n      }\n    }\n  }\n\n  handleLogSection(identify) {\n    if (!this.show) {\n      // Preferentially show call log section.\n      this._showLogSection(identify);\n    } else if (!this.notificationIsExpand) {\n      // Check it to show log notification when the call log notification isn't expanded.\n      this._showLogNotification(identify);\n    }\n  }\n\n  closeLogSection() {\n    if (this.show) {\n      this.store.dispatch({\n        type: this.actionTypes.closeLogSection\n      });\n    }\n  }\n\n  discardAndHandleNotification() {\n    const currentNotificationIdentify = this.currentNotificationIdentify;\n    this.closeLogNotification();\n    this.closeLogSection();\n    this._showLogSection(currentNotificationIdentify);\n  }\n\n  async saveAndHandleNotification() {\n    const currentNotificationIdentify = this.currentNotificationIdentify;\n    const currentIdentify = this.currentIdentify;\n    this.closeLogNotification();\n    this.closeLogSection();\n    await this.saveCallLog(currentIdentify);\n    this._showLogSection(currentNotificationIdentify);\n  }\n\n  closeLogNotification() {\n    if (this.showNotification) {\n      this.store.dispatch({\n        type: this.actionTypes.closeLogNotification\n      });\n    }\n  }\n\n  expandLogNotification() {\n    if (!this.notificationIsExpand) {\n      this.store.dispatch({\n        type: this.actionTypes.expandNotification\n      });\n    }\n  }\n\n  @getter\n  calls = createSelector(\n    () => this.callsList,\n    () => this.callsMapping,\n    (list, mapping) => list.map(identify => mapping[identify])\n  );\n\n  get callsList() {\n    return this._storage.getItem(this._storageKey).callsList;\n  }\n\n  get callsMapping() {\n    return this._storage.getItem(this._storageKey).callsMapping;\n  }\n\n  get currentIdentify() {\n    return this._storage.getItem(this._storageKey).currentIdentify;\n  }\n\n  get show() {\n    return !!this.currentIdentify;\n  }\n\n  get currentNotificationIdentify() {\n    return this._storage.getItem(this._storageKey).currentNotificationIdentify;\n  }\n\n  get showNotification() {\n    return !!this.currentNotificationIdentify;\n  }\n\n  get notificationIsExpand() {\n    return this._storage.getItem(this._storageKey).notificationIsExpand;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"]}