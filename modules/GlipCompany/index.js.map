{"version":3,"sources":["modules/GlipCompany/index.js"],"names":["GlipCompany","deps","dep","optional","client","options","name","fetchFunction","glip","companies","get","response","info","domain","id","DataFetcher","getter","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;IAOqBA,W,WAHpB,gBAAO;AACNC,QAAM,CAAC,QAAD,EAAW,EAAEC,KAAK,oBAAP,EAA6BC,UAAU,IAAvC,EAAX;AADA,CAAP,C;;;AAIC;;;;;AAKA,6BAGG;AAAA;;AAAA,QAFDC,MAEC,QAFDA,MAEC;AAAA,QADEC,OACF;AAAA;;AAAA;AAECC,YAAM,aAFP;AAGCF,oBAHD;AAICG;AAAA,6FAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACUH,OAAOI,IAAP,GAAcC,SAAd,CAAwB,GAAxB,EAA6BC,GAA7B,EADV;;AAAA;AACPC,0BADO;AAAA,mDAENA,QAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;;AAAA;AAAA;AAAA;AAAA;AAJD,OAQIN,OARJ;;AAAA;;AAAA;AAUF;;;;wBAQU;AACT,aAAO,KAAKO,IAAL,CAAUN,IAAjB;AACD;;;wBAEY;AACX,aAAO,KAAKM,IAAL,CAAUC,MAAjB;AACD;;;wBAEQ;AACP,aAAO,KAAKD,IAAL,CAAUE,EAAjB;AACD;;;EArCsCC,qB,wEAqBtCC,gB;;;;;WACM,8BACL;AAAA,aAAM,OAAKC,IAAX;AAAA,KADK,EAEL;AAAA,aAAQA,QAAQ,EAAhB;AAAA,KAFK,C;;;kBAtBYjB,W","file":"index.js","sourcesContent":["import { createSelector } from 'reselect';\nimport { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport getter from '../../lib/getter';\n\n/**\n * @class\n * @description Glip Company managing module.\n */\n@Module({\n  deps: ['Client', { dep: 'GLipCompanyOptions', optional: true }]\n})\nexport default class GlipCompany extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    ...options\n  }) {\n    super({\n      name: 'glipCompany',\n      client,\n      fetchFunction: async () => {\n        const response = await client.glip().companies('~').get();\n        return response;\n      },\n      ...options,\n    });\n  }\n\n  @getter\n  info = createSelector(\n    () => this.data,\n    data => data || {},\n  )\n\n  get name() {\n    return this.info.name;\n  }\n\n  get domain() {\n    return this.info.domain;\n  }\n\n  get id() {\n    return this.info.id;\n  }\n}\n"]}